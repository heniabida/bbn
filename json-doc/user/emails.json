{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\user\\emails",
    "namespace": true,
    "traits": [
        "bbn\\models\\tts\\dbconfig",
        "bbn\\models\\tts\\optional"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/user\/emails.php",
    "startLine": 9,
    "endLine": 1024,
    "contentConstructor": {
        "file": "bbn\\user\\emails",
        "returns": null
    },
    "methods": {
        "get_folder_types": {
            "name": "get_folder_types",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options('folders');\n  }",
            "startLine": 87,
            "endLine": 90,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_account_types": {
            "name": "get_account_types",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options('types');\n  }",
            "startLine": 93,
            "endLine": 96,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, bbn\\user $user = NULL, bbn\\user\\preferences $preferences = NULL)\n  {\n    self::optional_init();\n    $this->_init_class_cfg();\n    $this->db   = $db;\n    $this->user = $user ?: bbn\\user::get_instance();\n    $this->pref = $preferences ?: bbn\\user\\preferences::get_instance();;\n  }",
            "startLine": 99,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "user",
                    "position": 1,
                    "type": "bbn\\user",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "preferences",
                    "position": 2,
                    "type": "bbn\\user\\preferences",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_mailbox": {
            "name": "get_mailbox",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account)\n  {\n    if (!isset($this->mboxes[$id_account])) {\n      $this->get_account($id_account);\n    }\n\n    if (isset($this->mboxes[$id_account])) {\n      $mb = &$this->mboxes[$id_account];\n      if (!isset($mb['mailbox'])) {\n        $cfg           = $this->mboxes[$id_account];\n        $cfg['pass']   = $this->_get_password()->user_get($id_account, $this->user);\n        $mb['mailbox'] = new bbn\\appui\\mailbox($cfg);\n      }\n\n      if (isset($mb['mailbox'])) {\n        return $mb['mailbox'];\n      }\n    }\n\n    return null;\n\n  }",
            "startLine": 109,
            "endLine": 130,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_accounts_ids": {
            "name": "get_accounts_ids",
            "summary": "Returns the list of the accounts' IDs of the current user.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($id_accounts = self::get_option_id('accounts')) {\n      return $this->pref->retrieve_ids($id_accounts);\n    }\n\n    return null;\n  }",
            "startLine": 139,
            "endLine": 146,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_accounts": {
            "name": "get_accounts",
            "summary": "Returns the list of the accounts of the current user.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($force = false)\n  {\n    $res = [];\n    if ($ids = $this->get_accounts_ids()) {\n      foreach ($ids as $id) {\n        $res[] = $this->get_account($id, $force);\n      }\n    }\n\n    return $res;\n  }",
            "startLine": 155,
            "endLine": 165,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "force",
                    "position": 0,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "get_account": {
            "name": "get_account",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account, $force = false)\n  {\n    if ($force || !isset($this->mboxes[$id_account])) {\n      if ($a = $this->pref->get($id_account)) {\n        $this->mboxes[$id_account] = [\n          'id' => $a['id'],\n          'host' => $a['host'] ?? null,\n          'login' => $a['login'],\n          'type' => $a['type'],\n          'port' => $a['port'] ?? null,\n          'ssl' => $a['ssl'] ?? true,\n          'folders' => null,\n          'last_uid' => $a['last_uid'] ?? null,\n          'last_check' => $a['last_check'] ?? null\n        ];\n        $this->mboxes[$id_account]['folders'] = $this->get_folders($this->mboxes[$id_account]);\n      }\n    }\n    return $this->mboxes[$id_account] ?? null;\n  }",
            "startLine": 168,
            "endLine": 187,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "check_config": {
            "name": "check_config",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($cfg)\n  {\n    if (x::has_props(['login', 'pass', 'type'], true)) {\n      $mb = new bbn\\appui\\mailbox($cfg);\n      return $mb->check();\n    }\n  }",
            "startLine": 190,
            "endLine": 196,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "update_account": {
            "name": "update_account",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account, array $cfg)\n  {\n    if (x::has_props($cfg, ['login', 'pass', 'type'], true)\n        && ($acc = $this->get_account($id_account))\n        && ($this->pref->set_cfg(\n          $id_account,\n          [\n            'host' => $cfg['host'] ?? null,\n            'login' => $cfg['login'],\n            'type' => $cfg['type'],\n            'port' => $cfg['port'] ?? null,\n            'ssl' => $cfg['ssl'] ?? true,\n            'last_uid' => $cfg['last_uid'] ?? null,\n            'last_check' => $cfg['last_check'] ?? null\n          ]\n        ))\n    ) {\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 199,
            "endLine": 220,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete_account": {
            "name": "delete_account",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account)\n  {\n    return (bool)$this->pref->delete($id_account);\n  }",
            "startLine": 223,
            "endLine": 226,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add_account": {
            "name": "add_account",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    if (x::has_props($cfg, ['login', 'pass', 'type'], true)\n        && ($id_accounts = self::get_option_id('accounts'))\n        && ($id_pref = $this->pref->add_to_group(\n          $id_accounts,\n          [\n            'id_user' => $this->user->get_id(),\n            'login' => $cfg['login'],\n            'type' => $cfg['type'],\n            'host' => $cfg['host'] ?? null,\n            'port' => $cfg['port'] ?? null,\n            'ssl' => $cfg['ssl'] ?? true\n          ]\n        ))\n        && $this->_get_password()->user_store($cfg['pass'], $id_pref, $this->user)\n    ) {\n      $this->get_account($id_pref, true);\n      if (!empty($cfg['folders'])) {\n        $this->sync_folders($id_pref, $cfg['folders']);\n      }\n      return $id_pref;\n    }\n\n    return null;\n  }",
            "startLine": 229,
            "endLine": 254,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "reset": {
            "name": "reset",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account)\n  {\n    if (($account = $this->get_account($id_account))\n        && ($num = $this->pref->delete_bits($id_account))\n    ) {\n      return true;\n    }\n\n    return false;\n  }",
            "startLine": 257,
            "endLine": 266,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "create_folder": {
            "name": "create_folder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account, $name, $id_parent = NULL)\n  {\n\n    $this->create_folder_db($id, $id_parent);\n  }",
            "startLine": 269,
            "endLine": 273,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_parent",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "create_folder_db": {
            "name": "create_folder_db",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account, $name, $id_parent = NULL)\n  {\n\n  }",
            "startLine": 276,
            "endLine": 279,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_parent",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "rename_folder": {
            "name": "rename_folder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $name)\n  {\n\n    $this->rename_folder_db($id, $name);\n  }",
            "startLine": 282,
            "endLine": 286,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "rename_folder_db": {
            "name": "rename_folder_db",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $name)\n  {\n\n  }",
            "startLine": 289,
            "endLine": 292,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete_folder": {
            "name": "delete_folder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $this->delete_folder_db($id);\n  }",
            "startLine": 295,
            "endLine": 298,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete_folder_db": {
            "name": "delete_folder_db",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n\n  }",
            "startLine": 301,
            "endLine": 304,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "check_folder": {
            "name": "check_folder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $folder, $sync = false)\n  {\n    if (x::has_prop($folder, 'uid')\n        && ($mb = $this->get_mailbox($folder['id_account']))\n        && $mb->check()\n    ) {\n      if ($mb->update($folder['uid'])\n          && ($folders = $mb->get_folders())\n          && ($res = $folders[$folder['uid']])\n      ) {\n        if ($folder['last_uid'] !== $res['last_uid']) {\n          $id_account = $folder['id_account'];\n          unset($folder['id_account']);\n          $res = array_merge($folder, $res);\n          $this->pref->update_bit($folder['id'], $res, true);\n          $res['id_account'] = $id_account;\n          $this->get_account($id_account, true);\n          if ($sync) {\n            $this->sync_emails($res);\n          }\n        }\n\n        return $res;\n      }\n    }\n\n    return null;\n\n  }",
            "startLine": 307,
            "endLine": 335,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "folder",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "sync",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "get_folders": {
            "name": "get_folders",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($account, $force = false)\n  {\n    $acc = is_array($account) ? $account : $acc = $this->get_account($account);\n    if ($acc) {\n      $types = self::get_folder_types();\n      if ($force) {\n        $this->sync_folders($acc['id']);\n      }\n\n      $cfg   = $this->class_cfg['arch']['users_emails'];\n      $table = $this->class_cfg['tables']['users_emails'];\n      \/\/die(x::dump($this->pref->get_full_bits($acc['id'])));\n      return x::map(\n        function ($a) use ($types, $cfg, $table) {\n          if (!isset($a['uid'])) {\n\n            \/\/die(x::dump(\"NO UID\", $a, debug_backtrace()));\n          }\n\n          $res = [\n            'id' => $a['id'],\n            'id_account' => $a['id_user_option'],\n            'text' => $a['text'],\n            'uid' => $a['uid'],\n            'id_option' => $a['id_option'],\n            'type' => x::get_field($types, ['id' => $a['id_option']], 'code'),\n            'db_uid' => $this->db->select_one(\n              $table,\n              'MAX('.$this->db->csn($cfg['msg_uid'], true).')',\n              [\n                $cfg['id_folder'] => $a['id'],\n                $cfg['id_user'] => $this->user->get_id()\n              ]\n            ),\n            'last_uid' => $a['last_uid'] ?? null,\n            'last_check' => $a['last_check'] ?? null\n          ];\n          if (!empty($a['items'])) {\n            $res['items'] = $a['items'];\n          }\n\n          return $res;\n        },\n        $this->pref->get_full_bits($acc['id']),\n        'items'\n      );\n    }\n\n    return null;\n  }",
            "startLine": 338,
            "endLine": 387,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "account",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "get_folder": {
            "name": "get_folder",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $force = false)\n  {\n    $types = self::get_folder_types();\n    $cfg   = $this->class_cfg['arch']['users_emails'];\n    $table = $this->class_cfg['tables']['users_emails'];\n    $a = $this->pref->get_bit($id);\n    if ($a) {\n      return [\n        'id' => $a['id'],\n        'id_account' => $a['id_user_option'],\n        'text' => $a['text'],\n        'uid' => $a['uid'],\n        'id_option' => $a['id_option'],\n        'type' => x::get_field($types, ['id' => $a['id_option']], 'code'),\n        'db_uid' => $this->db->select_one(\n          $table,\n          'MAX('.$this->db->csn($cfg['msg_uid'], true).')',\n          [\n            $cfg['id_folder'] => $a['id'],\n            $cfg['id_user'] => $this->user->get_id()\n          ]\n        ),\n        'last_uid' => $a['last_uid'] ?? null,\n        'last_check' => $a['last_check'] ?? null\n      ];\n    }\n\n    return null;\n  }",
            "startLine": 390,
            "endLine": 418,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "sync_emails": {
            "name": "sync_emails",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $folder, $limit = 0)\n  {\n    if (x::has_props($folder, ['id', 'id_account', 'last_uid', 'uid'])) {\n      $res = 0;\n      if ($folder['last_uid'] && ($folder['last_uid'] !== $folder['db_uid'])) {\n        $mb = $this->get_mailbox($folder['id_account']);\n        if ($mb->select_folder($folder['uid'])) {\n          $start = 1;\n          if (!empty($folder['db_uid'])) {\n            try {\n              $start = $mb->get_msg_no($folder['db_uid']);\n            }\n            catch (\\Exception $e) {\n              $start = 1;\n            }\n          }\n          $real_end = 1;\n          if (!empty($folder['last_uid'])) {\n            try {\n              $real_end = $mb->get_msg_no($folder['last_uid']);\n            }\n            catch (\\Exception $e) {\n              $real_end = 1;\n            }\n          }\n\n          \/** @todo temporary solution to avoid errors *\/\n          if ($start === $real_end) {\n            return 0;\n          }\n\n          if ($limit) {\n            $real_end = min($real_end, $start + $limit);\n          }\n\n          $end      = $start;\n          $num      = $real_end - $start;\n          \/\/var_dump($folder, $num, $real_end);\n          while ($end <= $real_end) {\n            $end = min($real_end, $start + 999);\n            if ($all = $mb->get_emails_list($folder['uid'], $start, $end)) {\n              $start += 1000;\n              \/\/var_dump($start, $end);\n              foreach ($all as $a) {\n                if ($this->insert_email($folder, $a)) {\n                  $res++;\n                }\n                else {\n                  \/\/throw new \\Exception(_(\"Impossible to insert the email with ID\").' '.$a['message_id']);\n                  $this->log(_(\"Impossible to insert the email with ID\").' '.$a['message_id']);\n                }\n              }\n\n              if ($end === $real_end) {\n                $this->pref->update_bit($folder['id'], ['last_check' => date('Y-m-d H:i:s')], true);\n                break;\n              }\n            }\n            else {\n              throw new \\Exception(\n                _(\"Impossible to get the emails for folder\")\n                .' '.$folder['uid']\n                .' '._(\"from\").' '.$start\n                .' '._(\"to\").' '.$end\n                .' ('.$real_end.')'\n              );\n            }\n          }\n        }\n      }\n      return $res;\n    }\n\n    return null;\n  }",
            "startLine": 421,
            "endLine": 495,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "folder",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "limit",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "get_list": {
            "name": "get_list",
            "summary": "Returns a list of emails based on their folder.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_folder, array $post)\n  {\n    if ($ids = $this->ids_from_folder($id_folder)) {\n      $cfg      = $this->class_cfg['arch']['users_emails'];\n      $table    = $this->class_cfg['tables']['users_emails'];\n      $real_filter = [\n        'logic' => 'AND',\n        'conditions' => [\n          $cfg['id_folder'] => $ids\n        ]\n      ];\n      if (!empty($post['filters'])) {\n        if (!isset($post['filters']['conditions'])) {\n          $post['filters'] = ['conditions' => $post['filters']];\n        }\n\n        if (!empty($post['filters']['conditions'])) {\n          $real_filter['conditions'][] = $post['filters'];\n        }\n      }\n\n      $post['filters'] = $real_filter;\n      $grid = new \\bbn\\appui\\grid($this->db, $post, [\n        'table' => $table,\n        'fields' => $cfg\n      ]);\n      if ( $grid->check() ){\n        return $grid->get_datatable();\n      }\n    }\n\n    return null;\n  }",
            "startLine": 508,
            "endLine": 540,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_folder",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "post",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_email": {
            "name": "get_email",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $cfg      = $this->class_cfg['arch']['users_emails'];\n    $table    = $this->class_cfg['tables']['users_emails'];\n    $em = $this->db->rselect($table, $cfg, [$cfg['id'] => $id]);\n    if ($em) {\n      $folder = $this->get_folder($em['id_folder']);\n      if ($folder\n          && ($mb = $this->get_mailbox($folder['id_account']))\n          && $mb->select_folder($folder['uid'])\n          && ($number = $mb->get_msg_no($em['msg_uid']))\n      ) {\n        return $mb->get_msg($number);\n      }\n    }\n    return null;\n  }",
            "startLine": 543,
            "endLine": 559,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "insert_email": {
            "name": "insert_email",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $folder, array $email)\n  {\n    if (x::has_props($email, ['from', 'uid'])) {\n      $cfg      = $this->class_cfg['arch']['users_emails'];\n      $table    = $this->class_cfg['tables']['users_emails'];\n      $existing = $this->db->select_one(\n        $table,\n        $cfg['id'],\n        [\n          $cfg['id_user'] => $this->user->get_id(),\n          $cfg['msg_unique_id'] => $email['message_id']\n        ]\n      );\n      foreach (bbn\\appui\\mailbox::get_dest_fields() as $df) {\n        if (!empty($email[$df])) {\n          foreach ($email[$df] as &$dest) {\n            if ($id = $this->retrieve_email($dest['email'])) {\n              $sent_opt = x::get_field(self::get_folder_types(), ['code' => 'sent'], 'id');\n              if ($sent_opt === $folder['id_option']) {\n                $this->add_sent_to_link($id, date('Y-m-d H:i:s', strtotime($email['date'])));\n              }\n            }\n            elseif (!($id = $this->add_contact_from_mail($dest))) {\n              throw new \\Exception(_(\"Impossible to add the contact\").' '.$dest['email']);\n            }\n\n            $dest['id'] = $id;\n          }\n\n          if ($df === 'from') {\n            $id_sender = $id;\n          }\n        }\n      }\n\n      if (!empty($id_sender)) {\n        $id_parent = null;\n        $id_thread = null;\n        if (!empty($email['in_reply_to'])) {\n          $tmp = $this->db->rselect(\n            $table,\n            [$cfg['id'], $cfg['id_thread']],\n            [\n              $cfg['id_user'] => $this->user->get_id(),\n              $cfg['msg_unique_id'] => $email['in_reply_to']\n            ]\n          );\n          if ($tmp) {\n            $id_parent = $tmp[$cfg['id']];\n            $id_thread = $tmp[$cfg['id_thread']] ?: $id_parent;\n          }\n        }\n\n        \/\/die(var_dump($email));\n        $external = null;\n        if (!empty($email['in_reply_to']) || !empty($email['references'])) {\n          $external = [\n            'in_reply_to' => $email['in_reply_to'] ?? null,\n            'references'  => $email['references'] ?? null\n          ];\n        }\n\n        $ar = [\n          $cfg['id_user'] => $this->user->get_id(),\n          $cfg['id_folder'] => $folder['id'],\n          $cfg['msg_uid'] => $email['uid'],\n          $cfg['msg_unique_id'] => $email['message_id'],\n          $cfg['date'] => date('Y-m-d H:i:s', strtotime($email['date'])),\n          $cfg['id_sender'] => $id_sender,\n          $cfg['subject'] => empty($email['subject']) ? '' : mb_decode_mimeheader($email['subject']),\n          $cfg['size'] => $email['Size'],\n          $cfg['attachments'] => empty($email['attachments']) ? null : json_encode($email['attachments']),\n          $cfg['flags'] => $email['Flagged'] ?: null,\n          $cfg['is_read'] => $email['Unseen'] ? 0 : 1,\n          $cfg['id_parent'] => $id_parent,\n          $cfg['id_thread'] => $id_thread,\n          $cfg['external_uids'] => json_encode($external)\n        ];\n        $id = false;\n        if ($existing) {\n          \/\/die(var_dump($ar));\n          \/\/$this->db->update($table, $ar, [$cfg['id'] => $existing]);\n          $id = $existing;\n        }\n        elseif ($this->db->insert($table, $ar)) {\n          $id = $this->db->last_id();\n        }\n\n        if ($id) {\n          foreach (bbn\\appui\\mailbox::get_dest_fields() as $df) {\n            if (in_array($df, ['to', 'cc', 'bcc']) && !empty($email[$df])) {\n              foreach ($email[$df] as $dest) {\n                if (!empty($dest['id'])) {\n                  $this->add_link_to_mail($id, $dest['id'], $df);\n                }\n              }\n            }\n          }\n\n          return $id;\n        }\n      }\n    }\n    $this->log($email);\n    \/\/throw new \\Exception(_(\"Invalid email\"));\n  }",
            "startLine": 562,
            "endLine": 667,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "folder",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "email",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add_contact_from_mail": {
            "name": "add_contact_from_mail",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $dest, $blacklist = false)\n  {\n    if (x::has_prop($dest, 'email', true)) {\n      $cfg_contacts   = $this->class_cfg['arch']['users_contacts'];\n      $cfg_links      = $this->class_cfg['arch']['users_contacts_links'];\n      $table_contacts = $this->class_cfg['tables']['users_contacts'];\n      $table_links = $this->class_cfg['tables']['users_contacts_links'];\n      if ($this->db->insert($table_contacts, [\n        $cfg_contacts['id_user']   => $this->user->get_id(),\n        $cfg_contacts['name']      => $dest['name'] ?? null,\n        $cfg_contacts['blacklist'] => $blacklist ? 1 : 0\n      ])) {\n        $id_contact = $this->db->last_id();\n        if ($this->db->insert($table_links, [\n          'id_contact' => $id_contact,\n          'type' => 'email',\n          'value' => $dest['email']\n        ])) {\n          return $this->db->last_id();\n        }\n      }\n    }\n\n    return null;\n  }",
            "startLine": 670,
            "endLine": 694,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "dest",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "blacklist",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "get_link": {
            "name": "get_link",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $cfg   = $this->class_cfg['arch']['users_contacts_links'];\n    $table = $this->class_cfg['tables']['users_contacts_links'];\n    $data  = $this->db->rselect($table, $cfg, [$cfg['id'] => $id]);\n    return $data ?: null;\n  }",
            "startLine": 697,
            "endLine": 703,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add_link_to_mail": {
            "name": "add_link_to_mail",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_email, $id_link, $type)\n  {\n    $cfg   = $this->class_cfg['arch']['users_emails_recipients'];\n    $table = $this->class_cfg['tables']['users_emails_recipients'];\n    return (bool)$this->db->insert_ignore(\n      $table,\n      [\n        $cfg['id_email'] => $id_email,\n        $cfg['id_contact_link'] => $id_link,\n        $cfg['type'] => $type\n      ]\n    );\n\n  }",
            "startLine": 706,
            "endLine": 719,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_link",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "type",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add_sent_to_link": {
            "name": "add_sent_to_link",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_link, $date = NULL)\n  {\n    if ($link = $this->get_link($id_link)) {\n      $cfg   = $this->class_cfg['arch']['users_contacts_links'];\n      $table = $this->class_cfg['tables']['users_contacts_links'];\n      if (!$date) {\n        $date = date('Y-m-d H:i:s');\n      }\n      if ($link['last_sent'] && ($link['last_sent'] > $date))  {\n        $date = $link['last_sent'];\n      }\n\n      return (bool)$this->db->update(\n        $table,\n        [\n          $cfg['num_sent']  => $link[$cfg['num_sent']] + 1,\n          $cfg['last_sent'] => $date\n        ], [\n          'id' => $id_link\n        ]\n      );\n    }\n\n    return false;\n  }",
            "startLine": 722,
            "endLine": 746,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_link",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "date",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "retrieve_email": {
            "name": "retrieve_email",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($email)\n  {\n    $contacts = $this->class_cfg['tables']['users_contacts'];\n    $cfg_c    = $this->class_cfg['arch']['users_contacts'];\n    $links    = $this->class_cfg['tables']['users_contacts_links'];\n    $cfg_l    = $this->class_cfg['arch']['users_contacts_links'];\n    return $this->db->select_one(\n      [\n        'tables' => [$links],\n        'field'  => $this->db->cfn($cfg_l['id'], $links),\n        'join'   => [\n          [\n            'table' => $contacts,\n            'on'    => [\n              [\n                'field' => $cfg_l['id_contact'],\n                'exp'   => $this->db->cfn($cfg_c['id'], $contacts)\n              ]\n            ]\n\n          ]\n        ],\n        'where' => [\n          'value' => $email,\n          'id_user' => $this->user->get_id(),\n          'type' => 'email'\n        ]\n      ]\n    );\n  }",
            "startLine": 749,
            "endLine": 778,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_contact": {
            "name": "get_contact",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($email, $name, $force)\n  {\n\n  }",
            "startLine": 781,
            "endLine": 784,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 2,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_contacts": {
            "name": "get_contacts",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $contacts = $this->class_cfg['tables']['users_contacts'];\n    $cfg_c    = $this->class_cfg['arch']['users_contacts'];\n    $links    = $this->class_cfg['tables']['users_contacts_links'];\n    $cfg_l    = $this->class_cfg['arch']['users_contacts_links'];\n    $rows = $this->db->rselect_all(\n      [\n        'tables' => [$links],\n        'fields'  => [\n          $this->db->cfn($cfg_l['id'], $links),\n          $this->db->cfn($cfg_l['value'], $links),\n          $this->db->cfn($cfg_l['id_contact'], $links),\n          $this->db->cfn($cfg_l['num_sent'], $links),\n          $this->db->cfn($cfg_l['last_sent'], $links),\n          $this->db->cfn($cfg_c['name'], $contacts),\n          $this->db->cfn($cfg_c['cfg'], $contacts),\n          $this->db->cfn($cfg_c['blacklist'], $contacts),\n          'sortIndex' => 'IFNULL('.$this->db->cfn($cfg_c['name'], $contacts, true).','.$this->db->cfn($cfg_l['value'], $links).')'\n        ],\n        'join'   => [\n          [\n            'table' => $contacts,\n            'on'    => [\n              [\n                'field' => $cfg_l['id_contact'],\n                'exp'   => $this->db->cfn($cfg_c['id'], $contacts)\n              ]\n            ]\n\n          ]\n        ],\n        'where' => [\n          'id_user' => $this->user->get_id(),\n          'type' => 'email'\n        ],\n        'order' => [\n          'sortIndex' => 'ASC'\n        ]\n      ]\n    );\n    $res = [];\n    if ($rows) {\n      foreach ($rows as $r) {\n        $res[] = [\n          'value' => $r['id'],\n          'text' => (empty($r['name']) ? '' : $r['name'].' - ').$r['value'],\n          'cfg' => empty($r['cfg']) ? [] : json_decode($r['cfg'], true),\n          'id_contact' => $r['id_contact'],\n          'num_sent' => $r['num_sent'],\n          'last_sent' => $r['last_sent'],\n          'blacklist' => $r['blacklist']\n        ];\n      }\n    }\n\n    return $res;\n  }",
            "startLine": 787,
            "endLine": 844,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "sync_folders": {
            "name": "sync_folders",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account, array $subscribed = [])\n  {\n    if ($mb = $this->get_mailbox($id_account)) {\n      $mbParam = $mb->get_params();\n      $types   = self::get_folder_types();\n\n      $put_in_res = function (array $a, &$res, $prefix = '') use (&$put_in_res, $subscribed) {\n        $ele = array_shift($a);\n        $idx = x::find($res, ['text' => $ele]);\n        if (null === $idx) {\n          $idx   = count($res);\n          $res[] = [\n            'text' => $ele,\n            'uid' => $prefix.$ele,\n            'items' => [],\n            'subscribed' => in_array($prefix.$ele, $subscribed)\n          ];\n        }\n\n        if (count($a)) {\n          $put_in_res($a, $res[$idx]['items'], $prefix.$ele.'.');\n        }\n      };\n\n      $compare = function (\n          array $real,\n          array $db,\n          array &$res = null,\n          $id_parent = null\n      ) use (&$compare): array {\n        if (!$res) {\n          $res = ['add' => [], 'delete' => []];\n        }\n\n        foreach ($real as $r) {\n          $idx = x::find($db, ['text' => $r['text']]);\n          if (null === $idx) {\n            if ($id_parent) {\n              $r['id_parent'] = $id_parent;\n            }\n\n            $res['add'][] = $r;\n          }\n          elseif ($r['items'] && $db[$idx]['items']) {\n            $compare($r['items'], $db[$idx]['items'], $res, $db[$idx]['id']);\n          }\n        }\n\n        foreach ($db as $r) {\n          $idx = x::find($real, ['text' => $r['text']]);\n          if (null === $idx) {\n            $res['delete'][] = $r;\n          }\n        }\n\n        return $res;\n      };\n\n      $pref = $this->pref;\n\n      $import = function (array $to_add, $id_parent = null) use ($id_account, &$pref, &$import, &$types) {\n        foreach ($to_add as $a) {\n          if ($id_parent) {\n            $a['id_parent'] = $id_parent;\n            $a['id_option'] = x::get_field($types, ['code' => 'folders'], 'id');\n          }\n          else {\n            foreach ($types as $type) {\n              if (!empty($type['names'])) {\n                if (in_array($a['text'], $type['names'], true)) {\n                  $a['id_option'] = $type['id'];\n                  break;\n                }\n              }\n            }\n\n            if (!isset($a['id_option'])) {\n              $a['id_option'] = x::get_field($types, ['code' => 'folders'], 'id');\n            }\n          }\n\n          if ($id_bit = $pref->add_bit($id_account, $a)) {\n            if (!empty($a['items'])) {\n              $import($a['items'], $id_bit);\n            }\n          }\n        }\n      };\n\n      $res = [];\n      $all = $mb->list_all_folders();\n      foreach ($all as $dir) {\n        $tmp = str_replace($mbParam, '', $dir);\n        $bits = x::split($tmp, '.');\n        $put_in_res($bits, $res);\n      }\n\n      \/\/ We have a tree\n      $db_tree = $this->pref->get_full_bits($id_account);\n\n      $result = $compare($res, $db_tree);\n\n      $import($result['add']);\n\n      return ['real' => $res, 'db' => $db_tree, 'compare' => $result];\n    }\n\n    return null;\n  }",
            "startLine": 847,
            "endLine": 955,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "subscribed",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "get_structure": {
            "name": "get_structure",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_account, $force)\n  {\n\n  }",
            "startLine": 958,
            "endLine": 961,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_account",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 56,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $res = $this->db->count(\n      $this->class_table, [\n      $this->class_cfg['arch'][$this->class_table_index]['id'] => $id\n      ]\n    );\n    return (bool)$res;\n  }",
            "startLine": 61,
            "endLine": 69,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_class_cfg": {
            "name": "get_class_cfg",
            "summary": "Return the",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 75,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_fields": {
            "name": "get_fields",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->fields;\n  }",
            "startLine": 80,
            "endLine": 83,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_option_root": {
            "name": "get_option_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optional_init();\n    return self::$option_root_id;\n  }",
            "startLine": 145,
            "endLine": 149,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_root": {
            "name": "get_appui_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optional_init();\n    return self::$option_appui_id;\n  }",
            "startLine": 152,
            "endLine": 156,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_object": {
            "name": "get_options_object",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = bbn\\appui\\options::get_instance();\n    if (!$o) {\n      throw new \\Exception(_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 159,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\appui\\options"
            ],
            "parent": false,
            "arguments": []
        },
        "get_option_id": {
            "name": "get_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->from_code(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 176,
            "endLine": 179,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_ids": {
            "name": "get_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::get_options_object()->get_codes(...self::_treat_args(func_get_args())), function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 182,
            "endLine": 191,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_tree": {
            "name": "get_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 194,
            "endLine": 197,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options": {
            "name": "get_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 200,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_option": {
            "name": "get_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 206,
            "endLine": 209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_text_value": {
            "name": "get_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::get_option_id(...func_get_args())) ? self::get_options_object()->text_value_options($id) : [];\n  }",
            "startLine": 212,
            "endLine": 215,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_option_id": {
            "name": "get_appui_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->from_code(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_ids": {
            "name": "get_appui_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::get_options_object()->get_codes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 230,
            "endLine": 242,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_tree": {
            "name": "get_appui_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 245,
            "endLine": 248,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options": {
            "name": "get_appui_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 251,
            "endLine": 254,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_option": {
            "name": "get_appui_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 257,
            "endLine": 260,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_text_value": {
            "name": "get_appui_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\user\\emails",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::get_appui_option_id(...func_get_args())) ? self::get_options_object()->text_value_options($id) : [];\n  }",
            "startLine": 263,
            "endLine": 266,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "default_class_cfg": {
            "table": "bbn_users_emails",
            "tables": {
                "users_emails": "bbn_users_emails",
                "users_emails_aliases": "bbn_users_emails_aliases",
                "users_emails_recipients": "bbn_users_emails_recipients",
                "users_contacts": "bbn_users_contacts",
                "users_contacts_links": "bbn_users_contacts_links"
            },
            "arch": {
                "users_emails": {
                    "id": "id",
                    "id_user": "id_user",
                    "id_folder": "id_folder",
                    "msg_uid": "msg_uid",
                    "msg_unique_id": "msg_unique_id",
                    "date": "date",
                    "id_sender": "id_sender",
                    "subject": "subject",
                    "size": "size",
                    "attachments": "attachments",
                    "flags": "flags",
                    "is_read": "is_read",
                    "id_parent": "id_parent",
                    "id_thread": "id_thread",
                    "external_uids": "external_uids"
                },
                "users_emails_aliases": {
                    "id_account": "id_account",
                    "id_link": "id_link",
                    "main": "main"
                },
                "users_emails_recipients": {
                    "id_email": "id_email",
                    "id_contact_link": "id_contact_link",
                    "type": "type"
                },
                "users_contacts": {
                    "id": "id",
                    "id_user": "id_user",
                    "name": "name",
                    "blacklist": "blacklist",
                    "cfg": "cfg"
                },
                "users_contacts_links": {
                    "id": "id",
                    "id_contact": "id_contact",
                    "type": "type",
                    "value": "value",
                    "num_sent": "num_sent",
                    "last_sent": "last_sent"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "numMethods": 60,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 4,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\models\\tts\\dbconfig",
        "bbn\\models\\tts\\optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\basic",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_class_cfg": {
            "table": "bbn_users_emails",
            "tables": {
                "users_emails": "bbn_users_emails",
                "users_emails_aliases": "bbn_users_emails_aliases",
                "users_emails_recipients": "bbn_users_emails_recipients",
                "users_contacts": "bbn_users_contacts",
                "users_contacts_links": "bbn_users_contacts_links"
            },
            "arch": {
                "users_emails": {
                    "id": "id",
                    "id_user": "id_user",
                    "id_folder": "id_folder",
                    "msg_uid": "msg_uid",
                    "msg_unique_id": "msg_unique_id",
                    "date": "date",
                    "id_sender": "id_sender",
                    "subject": "subject",
                    "size": "size",
                    "attachments": "attachments",
                    "flags": "flags",
                    "is_read": "is_read",
                    "id_parent": "id_parent",
                    "id_thread": "id_thread",
                    "external_uids": "external_uids"
                },
                "users_emails_aliases": {
                    "id_account": "id_account",
                    "id_link": "id_link",
                    "main": "main"
                },
                "users_emails_recipients": {
                    "id_email": "id_email",
                    "id_contact_link": "id_contact_link",
                    "type": "type"
                },
                "users_contacts": {
                    "id": "id",
                    "id_user": "id_user",
                    "name": "name",
                    "blacklist": "blacklist",
                    "cfg": "cfg"
                },
                "users_contacts_links": {
                    "id": "id",
                    "id_contact": "id_contact",
                    "type": "type",
                    "value": "value",
                    "num_sent": "num_sent",
                    "last_sent": "last_sent"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "mboxes": [],
        "user": null,
        "pref": null,
        "opt": null,
        "pw": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "class_cfg": null,
        "fields": null,
        "class_table": null,
        "class_table_index": null,
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\user",
    "shortName": "emails",
    "summary": ""
}