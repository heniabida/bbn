{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\mvc\\environment",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/mvc\/environment.php",
    "startLine": 23,
    "endLine": 369,
    "contentConstructor": {
        "file": "bbn\\mvc\\environment",
        "returns": null
    },
    "methods": {
        "get_input": {
            "name": "get_input",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$_input;\n  }",
            "startLine": 91,
            "endLine": 94,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "set_mode": {
            "name": "set_mode",
            "summary": "Change the output mode (content-type)",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($mode)\n  {\n    if (router::is_mode($mode)) {\n      $this->_mode = $mode;\n    }\n    return $this->_mode;\n  }",
            "startLine": 102,
            "endLine": 108,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "mode",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($url = false)\n  {\n    if (!self::$_initiated) {\n      self::_initialize();\n      $this->_init();\n    }\n  }",
            "startLine": 153,
            "endLine": 159,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "set_prepath": {
            "name": "set_prepath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n    $path = bbn\\x::remove_empty(explode('\/', $path));\n    if (\\count($path)) {\n      foreach ($path as $p) {\n        if ($this->_params[0] === $p) {\n          array_shift($this->_params);\n          $this->_url = substr($this->_url, \\strlen($p) + 1);\n        } else {\n          die(\"The prepath $p doesn't seem to correspond to the current path {$this->_url}\");\n        }\n      }\n    }\n    return true;\n  }",
            "startLine": 161,
            "endLine": 175,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_cli": {
            "name": "is_cli",
            "summary": "Returns true if called from CLI\/Cron, false otherwise",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_cli)) {\n      $this->_cli = bbn\\x::is_cli();\n      if ($this->_cli) {\n        $opt = getopt('', ['cli']);\n        if (isset($opt['cli'])) {\n          $this->_cli = 'direct';\n        }\n      }\n    }\n    return $this->_cli;\n  }",
            "startLine": 182,
            "endLine": 194,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_url": {
            "name": "get_url",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_url;\n  }",
            "startLine": 196,
            "endLine": 199,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "simulate": {
            "name": "simulate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($url, $post = false, $arguments = NULL)\n  {\n    unset($this->_params);\n    $this->set_params($url . (empty($arguments) ? '' : '\/' . implode('\/', $arguments)));\n    $this->_post = $post ?: null;\n    $this->_init();\n    $this->_url = $url;\n  }",
            "startLine": 201,
            "endLine": 208,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "post",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_mode": {
            "name": "get_mode",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_mode;\n  }",
            "startLine": 210,
            "endLine": 213,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_cli": {
            "name": "get_cli",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    global $argv;\n    if ($this->is_cli()) {\n      if ($this->is_cli() === 'direct') {\n        array_shift($argv);\n      }\n      $this->_post = [];\n      if (isset($argv[1])) {\n        $this->set_params($argv[1]);\n        if (isset($argv[2])) {\n          if (!isset($argv[3]) && \\bbn\\str::is_json($argv[2])) {\n            $this->_post = json_decode($argv[2], 1);\n          } else {\n            for ($i = 2, $iMax = \\count($argv); $i < $iMax; $i++) {\n              $this->_post[] = $argv[$i];\n            }\n          }\n        }\n      }\n      return $this->_post;\n    }\n  }",
            "startLine": 215,
            "endLine": 237,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_get": {
            "name": "get_get",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_get)) {\n      $this->_get = [];\n      if (\\count($_GET) > 0) {\n        $this->_get = array_map(function ($a) {\n          return bbn\\str::correct_types($a);\n        }, $_GET);\n      }\n    }\n    return $this->_get;\n  }",
            "startLine": 239,
            "endLine": 250,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_post": {
            "name": "get_post",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_post)) {\n      if (self::$_input && \\bbn\\str::is_json(self::$_input)) {\n        $this->_post = json_decode(self::$_input, 1);\n      } else if (!empty($_POST)) {\n        $this->_post = $_POST;\n      }\n      if (!$this->_post) {\n        $this->_post = [];\n      } else {\n        $this->_has_post = true;\n        $this->_post = bbn\\str::correct_types($this->_post);\n        foreach ($this->_post as $k => $v) {\n          if (\\bbn\\x::indexOf($k, '_bbn_') === 0) {\n            if (!defined(strtoupper(substr($k, 1)))) {\n              define(strtoupper(substr($k, 1)), $v);\n            }\n            unset($this->_post[$k]);\n          }\n        }\n      }\n    }\n    return $this->_post;\n  }",
            "startLine": 282,
            "endLine": 306,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_files": {
            "name": "get_files",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->_files)) {\n      $this->_files = [];\n      \/\/ Rebuilding the $_FILES array into $this->_files in a more logical structure\n      if (\\count($_FILES) > 0) {\n        \/\/ Some devices send multiple files with the same name\n        $names = [];\n        foreach ($_FILES as $n => $f) {\n          if (\\is_array($f['name'])) {\n            $this->_files[$n] = [];\n            foreach ($f['name'] as $i => $v) {\n              while (\\in_array($v, $names, true)) {\n                if (!isset($j)) {\n                  $j = 0;\n                }\n                $j++;\n                $file = bbn\\str::file_ext($f['name'][$i], true);\n                $v = $file[0] . '_' . $j . '.' . $file[1];\n              }\n              $this->_files[$n][] = [\n                'name' => $v,\n                'tmp_name' => $f['tmp_name'][$i],\n                'type' => $f['type'][$i],\n                'error' => $f['error'][$i],\n                'size' => $f['size'][$i],\n              ];\n              $names[] = $v;\n            }\n          } else {\n            $this->_files[$n] = $f;\n          }\n        }\n      }\n      \/* @todo Maybe something for managing PUT requests\n      else if (!empty(self::$_input) && !bbn\\str::is_json(self::$_input)) {\n        $this->_files[] = [\n          'name' => $v,\n          'tmp_name' => $f['tmp_name'][$i],\n          'type' => $f['type'][$i],\n          'error' => $f['error'][$i],\n          'size' => $f['size'][$i],\n        ];\n      }\n      *\/\n    }\n    return $this->_files;\n  }",
            "startLine": 308,
            "endLine": 355,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_params": {
            "name": "get_params",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_params;\n  }",
            "startLine": 357,
            "endLine": 360,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_request": {
            "name": "get_request",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\mvc\\environment",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (self::$_initiated) {\n      return $this->_url;\n    }\n    return null;\n  }",
            "startLine": 362,
            "endLine": 368,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "_initiated": true,
        "_input": "{\"_bbn\":\"public\",\"_bbn_token\":\"J358QLi97VxR68xARW5V0og\"}"
    },
    "constants": null,
    "numMethods": 14,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 2,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "_initiated": false,
        "_input": null,
        "_has_post": false,
        "_params": null,
        "_mode": null,
        "_url": null,
        "_post": null,
        "_get": null,
        "_files": null,
        "cli": null,
        "new_url": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\mvc",
    "shortName": "environment",
    "summary": ""
}