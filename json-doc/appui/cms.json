{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\appui\\cms",
    "namespace": true,
    "traits": [
        "bbn\\models\\tts\\dbconfig"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/appui\/cms.php",
    "startLine": 14,
    "endLine": 605,
    "contentConstructor": {
        "file": "bbn\\appui\\cms",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, $notes = NULL)\n  {\n\t\t$this->_init_class_cfg();\n\t\t$this->_events = new bbn\\appui\\events($this->db);\n\t\t$this->_options = bbn\\appui\\options::get_instance();\n\t\tif (!self::$_id_event) {\n\t\t\t$id = $this->_options->from_code('publication', 'event', 'appui');\n\t\t\tself::_set_id_event($id);\n\t\t}\n\t\tif ( $notes === null ){\n\t\t\t$this->_notes = new \\bbn\\appui\\notes($this->db);\n\t\t} else {\n\t\t\t$this->_notes = $notes;\n\t\t}\n\t\t\n  }",
            "startLine": 140,
            "endLine": 155,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\db $db)\n  {\n      $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "notes",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get": {
            "name": "get",
            "summary": "Returns the note with its url, start and end date of publication.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($url)\n  {\n\t\t$res = [];\n\t \t$id_note = $this->db->rselect([\n\t\t\t 'table' => $this->class_cfg['tables']['notes_url'], \n\t\t\t 'fields' => [$this->class_cfg['arch']['notes_url']['id_note']],\n\t\t\t 'where' => [\n\t\t\t\t 'conditions' => [[\n\t\t\t\t\t 'field' => $this->class_cfg['arch']['notes_url']['url'],\n\t\t\t\t\t 'value' => $url\n\t\t\t\t ]]\n\t\t\t\t], \n\t\t\t]\n\t\t)['id_note'];\n\t\tif ( !empty($id_note) && $note = $this->_notes->get($id_note)){\n\t\t\t$res = $note;\n\t\t\t$res['url'] = $this->get_url($id_note);\n\t\t\t$res['start'] = $this->get_start($id_note);\n\t\t\t$res['end'] = $this->get_end($id_note);\n\t\t}\n\t\treturn $res;\n  }",
            "startLine": 162,
            "endLine": 183,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_all": {
            "name": "get_all",
            "summary": "Returns all the notes of type 'pages'.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($limit = 50, $start = 0)\n  {\n\t\t$pages = $this->_notes->get_by_type($this->_options->from_code('pages', 'types', 'note', 'appui'), false,$limit, $start);\n\t\t$tmp = array_map(function($a){\n\t\t\t$a['is_published'] = $this->is_published($a['id_note']);\n\t\t\t$a['url'] = $this->has_url($a['id_note']) ? $this->get_url($a['id_note']) : '';\n\t\t\t$a['type'] = 'pages';\n\t\t\t$a['start'] = $this->get_start($a['id_note']);\n\t\t\t$a['end'] = $this->get_end($a['id_note']);\n\t\t\t$a['files'] = $this->_notes->get_medias($a['id_note']) ?: [];\n\t\t\treturn $a;\n\t\t}, $pages); \n\t\treturn $tmp; \n  }",
            "startLine": 191,
            "endLine": 204,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "limit",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 50,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "get_by_url": {
            "name": "get_by_url",
            "summary": "If the given url correspond to a published note returns the id.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($url)\n  {\n\t\tif ( $id_note = $this->db->select_one([\n\t\t\t'table' => $this->class_cfg['tables']['notes_url'], \n\t\t\t'fields' => [$this->class_cfg['arch']['notes_url']['id_note']],\n\t\t\t'where' => [\n\t\t\t\t'conditions' => [[\n\t\t\t\t\t'field' => $this->class_cfg['arch']['notes_url']['url'],\n\t\t\t\t\t'value' => $url\n\t\t\t\t]]\n\t\t\t]\n\t\t])){\n\t\t\tif ( $this->is_published($id_note) ){\n\t\t\t\treturn $id_note;\n\t\t\t}\n\t\t}\n\t\treturn null;\n  }",
            "startLine": 212,
            "endLine": 229,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "url",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "Deletes the given note and unpublish it if published.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\tif ( $note = $this->_notes->get($id_note) ){\n\t\t\tif ( $this->get_url($id_note) ){\n\t\t\t\t$this->remove_url($id_note);\n\t\t\t}\n\t\t\tif(\n\t\t\t\t!empty($this->_notes->remove($note['id']))\n\t\t\t){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 238,
            "endLine": 251,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "has_url": {
            "name": "has_url",
            "summary": "Returns true if the note is linked to an url.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\tif ( $this->db->select_one(\n\t\t\t$this->class_cfg['tables']['notes_url'], \n\t\t\t$this->class_cfg['arch']['notes_url']['url'], \n\t\t\t[\n\t\t\t\t$this->class_cfg['arch']['notes_url']['id_note'] => $id_note\n\t\t\t])\n\t  ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 259,
            "endLine": 271,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "get_url": {
            "name": "get_url",
            "summary": "Returns the url of the note.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\tif ( $this->has_url($id_note) ){\n\t\t\treturn $this->db->select_one([\n\t\t\t\t'table' => $this->class_cfg['tables']['notes_url'], \n\t\t\t\t'fields' => [$this->class_cfg['arch']['notes_url']['url']],\n\t\t\t\t'where'  => [\n\t\t\t\t\t'conditions'=>[[\n\t\t\t\t\t\t'field' => $this->class_cfg['arch']['notes_url']['id_note'],\n\t\t\t\t\t\t'value' => $id_note\n\t\t\t\t\t]]\n\t\t\t\t]\t\n\t\t\t]);\n\t\t}\n\t\treturn null;\n  }",
            "startLine": 277,
            "endLine": 292,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "set_url": {
            "name": "set_url",
            "summary": "Inserts the url for the note if it doesn't exist a published note with the same url or update the url of the given note.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note, $url)\n  {\n\t\t$success = false;\n\t\t$idx = x::find($this->get_full_published(), ['url' => $url]);\n\t\tif ( $this->_notes->get($id_note) && !isset($idx) ){\n\t\t\tif ( empty($this->db->rselect([\n\t\t\t\t'table' => $this->class_cfg['tables']['notes_url'], \n\t\t\t\t'fields' => [$this->class_cfg['arch']['notes_url']['url']],\n\t\t\t\t'where' => [\n\t\t\t\t\t'conditions' => [[\n\t\t\t\t\t\t'field' => $this->class_cfg['arch']['notes_url']['id_note'],\n\t\t\t\t\t\t'value' => $id_note\n\t\t\t\t\t]]\n\t\t\t\t]\n\t\t\t\t])['url']) \n\t\t\t){\n\t\t\t\t$success = $this->db->insert(\n\t\t\t\t\t$this->class_cfg['tables']['notes_url'],\n\t\t\t\t\t[\n\t\t\t\t\t\t$this->class_cfg['arch']['notes_url']['url'] => $url,\n\t\t\t\t\t\t$this->class_cfg['arch']['notes_url']['id_note'] => $id_note\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\telse {\n\t\t\t\t$success = $this->db->update(\n\t\t\t\t\t$this->class_cfg['tables']['notes_url'],\n\t\t\t\t\t[$this->class_cfg['arch']['notes_url']['url'] => $url],\n\t\t\t\t\t[\n\t\t\t\t\t\t$this->class_cfg['arch']['notes_url']['id_note'] => $id_note\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telseif ( !empty($idx) ) {\n\t\t\tthrow new \\Exception(_('The url you are trying to insert already belongs to a published note. Unpublish the note or change the url!'));\n\t\t}\n\t\treturn $success;\n  }",
            "startLine": 300,
            "endLine": 338,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                },
                {
                    "name": "url",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "remove_url": {
            "name": "remove_url",
            "summary": "Removes the url corresponding to the given id_note from bbn_notes_url.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\t$success = false;\n\t\tif ( $this->is_published($id_note) ){\n\t\t\t$this->unpublish($id_note);\n\t\t} \n\t\tif ( $this->_notes->get($id_note)){\n\t\t\tif ( $this->db->delete([\n\t\t\t\t'table' => $this->class_cfg['tables']['notes_url'], \n\t\t\t\t'where' => [\n\t\t\t\t\t'conditions' => [[\n\t\t\t\t\t\t'field' => $this->class_cfg['arch']['notes_url']['id_note'], \n\t\t\t\t\t\t'value' => $id_note\n\t\t\t\t\t]]\n\t\t\t\t]])\n\t\t\t){\n\t\t\t\t$success = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn $success;\n  }",
            "startLine": 345,
            "endLine": 366,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "get_event": {
            "name": "get_event",
            "summary": "Returns the object event of the given note.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\tif ( $id_event = $this->db->select_one(\n\t\t\t$this->class_cfg['tables']['notes_events'], $this->class_cfg['arch']['notes_events']['id_event'], [\n\t\t\t\t$this->class_cfg['arch']['notes_events']['id_note'] => $id_note\n\t\t])){\n\t\t\tif ( $event = $this->db->rselect([\n\t\t\t\t\t\t'table' => $this->class_cfg['table'], \n\t\t\t\t\t\t'fields' => [],\n\t\t\t\t\t\t'where' => [\n\t\t\t\t\t\t\t'conditions' => [[\n\t\t\t\t\t\t\t\t'field' => $this->fields['id'],\n\t\t\t\t\t\t\t\t'value' => $id_event\n\t\t\t\t\t\t\t]]], \n\t\t\t\t\t\t]\n\t\t\t\t\t)\n\t\t\t){\n\t\t\t\t\/\/if the event is not in bbn_notes_events it inserts the row\n\t\t\t\t$this->_insert_notes_events($id_note, $id_event);\n\t\t\t\t$event['id_note'] = $id_note;\n\t\t\t\treturn $event;\n\t\t\t}\n\t\t}\t\n\t\treturn null;\n  }",
            "startLine": 371,
            "endLine": 395,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "update_event": {
            "name": "update_event",
            "summary": "Updates the event relative to the given note.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note, array $cfg = [])\n  {\n\t\tif ($this->_check_date($cfg['start'], $cfg['end'])){\n\t\t\t$event = $this->get_event($id_note);\n\t\t\tif ( \n\t\t\t\t(strtotime($cfg['start']) !== strtotime($event['start']) ) || \n\t\t\t\t(strtotime($cfg['end']) !== strtotime($event['end']) )\n\t\t\t){\n\t\t\t\t$cfg['id_type'] = self::$_id_event;\n\t\t\t\treturn $this->_events->edit($event['id'], $cfg);\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 402,
            "endLine": 417,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "get_start": {
            "name": "get_start",
            "summary": "If it exists an event linked to the note it returns the start date.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\tif ( $event = $this->get_event($id_note) ){\n\t\t\treturn $event['start'];\n\t\t}\n\t\treturn null;\n  }",
            "startLine": 423,
            "endLine": 429,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "get_end": {
            "name": "get_end",
            "summary": "If it exists an event linked to the note it returns the end date.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\tif ( $event = $this->get_event($id_note) ){\n\t\t\treturn $event['end'];\n\t\t}\n\t\treturn null;\n  }",
            "startLine": 435,
            "endLine": 441,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "set_event": {
            "name": "set_event",
            "summary": "Inserts in bbn_events and bbn_notes_events the informations relative to the publication of the given note.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note, array $cfg = NULL)\n  {\n\t\t\t$title = $note['title'];\n\t\t\tif ( empty($this->get_event($id_note)) ){\n\t\t\t\t\/\/if a type is not given it inserts the event as page\n\t\t\t\tif ( $id_event = $this->_events->insert([\n\t\t\t\t\t'name' => $title,\n\t\t\t\t\t'id_type' => self::$_id_event,\n\t\t\t\t\t'start' => $cfg['start'],\n\t\t\t\t\t'end' => $cfg['end'] ?: null,\n\t\t\t\t]) ){\n\t\t\t\t\treturn $this->_insert_notes_events($id_note, $id_event);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn $this->update_event($id_note, $cfg);\n\t\t\t}\n\t\t}\n\t\treturn null;\n  }",
            "startLine": 449,
            "endLine": 467,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_full": {
            "name": "get_full",
            "summary": "Returns all notes that has a link with bbn_events.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\/\/select all events\n\t\t$events = $this->db->rselect_all($this->class_cfg['table']);\n\t\t$now = strtotime(date('Y-m-d H:i:s'));\n\t\t$res = [];\n\t\tif ( !empty($events) ){\n\t\t\tforeach ($events as $e){\n\t\t\t\t\/\/takes events without end date of with end date > now\n\t\t\t\tif ( \n\t\t\t\t\tarray_key_exists($this->fields['start'], $e) && \n\t\t\t\t\t( is_null($e['end']) || (strtotime($e['end']) > $now) )\n\t\t\t\t){\n\t\t\t\t\t\/\/gets the note correspondant to the id_event and push it in $res\n\t\t\t\t\t$id_note = $this->db->select_one($this->class_cfg['tables']['notes_events'],\n\t\t\t\t\t\t$this->class_cfg['arch']['notes_events']['id_note'], [\n\t\t\t\t\t\t$this->class_cfg['arch']['notes_events']['id_event'] => $e['id']\n\t\t\t\t\t]);\n\t\t\t\t\tif ( $this->has_url($id_note)){\n\t\t\t\t\t\t$note = $this->_notes->get($id_note);\n\t\t\t\t\t\t$note['url'] = $this->get_url($id_note);\n\t\t\t\t\t\t$note['start'] = $this->get_start($id_note);\n\t\t\t\t\t\t$note['end'] = $this->get_end($id_note);\n\t\t\t\t\t\t$res[] = $note;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $res;\n  }",
            "startLine": 473,
            "endLine": 502,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_full_published": {
            "name": "get_full_published",
            "summary": "Returns an array containing all the published notes.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\tif ( ($full = $this->get_full()) ){\n\t\t  return array_filter($full, function($a){\n\t\t\t\treturn $a['start'] !== null;\n\t\t\t});\n\t\t}\n\t\treturn [];\n  }",
            "startLine": 507,
            "endLine": 515,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "is_published": {
            "name": "is_published",
            "summary": "If the note has a corresponding event in bbn_events and the date of start is before now, and the date of end if isset is after now and the note has an url it returns true",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\t$now = strtotime(date('Y-m-d H:i:s'));\n\t\tif ( $event = $this->get_event($id_note) ){\n\t\t\tif ( \n\t\t\t\tisset($event['start']) && \n\t\t\t\t( is_null($event['end']) || (strtotime($event['end']) > $now)) &&\n\t\t\t\t$this->has_url($id_note)\n\t\t\t){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 522,
            "endLine": 535,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "publish": {
            "name": "publish",
            "summary": "Publish a note.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note, array $cfg)\n  {\n\t\tif (\n\t\t\t !$this->is_published($id_note) && \n\t\t\t ( $note = $this->_notes->get($id_note) ) \n\t\t){\n\t\t\t\/\/if $url is given it updates the note_url\n\t\t\tif ( !empty($cfg['url'])){\n\t\t\t\ttry {\n\t\t\t\t\t$this->set_url($id_note, $cfg['url']);\n\t\t\t\t}\n\t\t\t\tcatch ( \\Exception $e ){\n\t\t\t\t\treturn [\n\t\t\t\t\t\t'error' => $e->getMessage()\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !empty($this->has_url($id_note)) ){\n\t\t\t\tif ( empty($this->get_event($id_note)) ){\n\t\t\t\t\treturn $this->set_event($id_note, [\n\t\t\t\t\t\t'start' => $cfg['start'] ?: date('Y-m-d H:i:s'), \n\t\t\t\t\t\t'end' => $cfg['end'] ?: null,\n\t\t\t\t\t\t'id_type' => self::$_id_event ?: null\n\t\t\t\t\t]);\n\t\t\t\t} else if ( $this->get_event($id_note) ){\n\t\t\t\t\t\/\/case update\n\t\t\t\t\treturn $this->update_event($id_note, [\n\t\t\t\t\t\t'start' => $cfg['start'] ?: date('Y-m-d H:i:s'), \n\t\t\t\t\t\t'end' => $cfg['end'] ?: null,\n\t\t\t\t\t\t'id_type' => self::$_id_event ?: null\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t} else if ( empty($this->has_url($id_note)) ){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 543,
            "endLine": 580,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "unpublish": {
            "name": "unpublish",
            "summary": "Unpublish a note.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_note)\n  {\n\t\tif ( \n\t\t\t($event = $this->get_event($id_note)) && \n\t\t\t$this->is_published($id_note) \n\t\t){\n\t\t\tif ( $this->update_event(\n\t\t\t\t$id_note, [\n\t\t\t\t\t'start' => null,\n\t\t\t\t\t'end' => null\n\t\t\t\t])\n\t\t  ){\n\t\t\t\treturn $this->_remove_note_events($id_note, $event['id']);\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 587,
            "endLine": 603,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_note",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "note"
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 56,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $res = $this->db->count(\n      $this->class_table, [\n      $this->class_cfg['arch'][$this->class_table_index]['id'] => $id\n      ]\n    );\n    return (bool)$res;\n  }",
            "startLine": 61,
            "endLine": 69,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_class_cfg": {
            "name": "get_class_cfg",
            "summary": "Return the",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 75,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_fields": {
            "name": "get_fields",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\cms",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->fields;\n  }",
            "startLine": 80,
            "endLine": 83,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "default_class_cfg": {
            "table": "bbn_events",
            "tables": {
                "notes": "bbn_notes",
                "versions": "bbn_notes_versions",
                "events": "bbn_events",
                "notes_url": "bbn_notes_url",
                "notes_events": "bbn_notes_events"
            },
            "arch": {
                "notes": {
                    "id": "id",
                    "id_parent": "id_parent",
                    "id_alias": "id_alias",
                    "id_type": "id_type",
                    "private": "private",
                    "locked": "locked",
                    "pinned": "pinned",
                    "creator": "creator",
                    "active": "active"
                },
                "versions": {
                    "id_note": "id_note",
                    "version": "version",
                    "title": "title",
                    "content": "content",
                    "id_user": "id_user",
                    "creation": "creation"
                },
                "events": {
                    "id": "id",
                    "id_parent": "id_parent",
                    "id_type": "id_type",
                    "start": "start",
                    "end": "end",
                    "name": "name",
                    "recurring": "recurring",
                    "cfg": "cfg"
                },
                "notes_events": {
                    "id_note": "id_note",
                    "id_event": "id_event"
                },
                "notes_url": {
                    "id_note": "id_note",
                    "url": "url"
                }
            }
        },
        "_id_event": null
    },
    "constants": null,
    "numMethods": 30,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 2,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\models\\tts\\dbconfig"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\db",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_class_cfg": {
            "table": "bbn_events",
            "tables": {
                "notes": "bbn_notes",
                "versions": "bbn_notes_versions",
                "events": "bbn_events",
                "notes_url": "bbn_notes_url",
                "notes_events": "bbn_notes_events"
            },
            "arch": {
                "notes": {
                    "id": "id",
                    "id_parent": "id_parent",
                    "id_alias": "id_alias",
                    "id_type": "id_type",
                    "private": "private",
                    "locked": "locked",
                    "pinned": "pinned",
                    "creator": "creator",
                    "active": "active"
                },
                "versions": {
                    "id_note": "id_note",
                    "version": "version",
                    "title": "title",
                    "content": "content",
                    "id_user": "id_user",
                    "creation": "creation"
                },
                "events": {
                    "id": "id",
                    "id_parent": "id_parent",
                    "id_type": "id_type",
                    "start": "start",
                    "end": "end",
                    "name": "name",
                    "recurring": "recurring",
                    "cfg": "cfg"
                },
                "notes_events": {
                    "id_note": "id_note",
                    "id_event": "id_event"
                },
                "notes_url": {
                    "id_note": "id_note",
                    "url": "url"
                }
            }
        },
        "_id_event": null,
        "_notes": null,
        "_options": null,
        "_events": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "class_cfg": null,
        "fields": null,
        "class_table": null,
        "class_table_index": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\appui",
    "shortName": "cms",
    "summary": ""
}