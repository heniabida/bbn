{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\appui\\mailings",
    "namespace": true,
    "traits": [
        "bbn\\models\\tts\\optional"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/appui\/mailings.php",
    "startLine": 14,
    "endLine": 866,
    "contentConstructor": {
        "file": "bbn\\appui\\mailings",
        "returns": null
    },
    "methods": {
        "_get_cfg": {
            "name": "_get_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    return bbn\\x::get_row(\n      self::_get_cfgs() ?: [],\n      bbn\\str::is_uid($id) ? ['id' => $id] : ['code' => $id]\n    );\n  }",
            "startLine": 69,
            "endLine": 75,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, array $cfg = NULL)\n  {\n    if ($db->check()) {\n      self::optional_init();\n      $this->get_options_text_value('text');\n      $this->db = $db;\n    }\n  }",
            "startLine": 96,
            "endLine": 103,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\db $db)\n  {\n      $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_test_emails": {
            "name": "get_test_emails",
            "summary": "Returns an array of email addresses used for testing purposes.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!is_array($this->_test_emails)) {\n      $emails = $this->get_options_text_value('test');\n      $this->_test_emails = [];\n      foreach ($emails as $em) {\n        $this->_test_emails[] = $em['text'];\n      }\n    }\n    return $this->_test_emails;\n  }",
            "startLine": 110,
            "endLine": 120,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks if the object is in error state.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db && $this->db->check();\n  }",
            "startLine": 127,
            "endLine": 130,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "is_sending": {
            "name": "is_sending",
            "summary": "Checks if the given mailing is being sent.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id = NULL)\n  {\n    $cond = ['state' => 'sending'];\n    if ($id) {\n      $cond['id'] = $id;\n    }\n    return $this->db->count('bbn_emailings', $cond) > 0;\n  }",
            "startLine": 138,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "is_suspended": {
            "name": "is_suspended",
            "summary": "Checks if the given mailing is in suspended state.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id = NULL)\n  {\n    $cond = ['state' => 'suspended'];\n    if ($id) {\n      $cond['id'] = $id;\n    }\n    return $this->db->count('bbn_emailings', $cond) > 0;\n  }",
            "startLine": 153,
            "endLine": 160,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_next_mailing": {
            "name": "get_next_mailing",
            "summary": "Returns the next mailing to process if any.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->check() \n        && ($id = $this->db->select_one(\n          'bbn_emailings', 'id', [\n          ['state', 'LIKE', 'ready'],\n          ['sent', '<', date('Y-m-d H:i:s')],\n          ['sent', 'isnotnull']\n          ], ['sent' => 'ASC']\n        ))\n    ) {\n      return $this->get_mailing($id);\n    }\n    return null;\n  }",
            "startLine": 180,
            "endLine": 194,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "change_state": {
            "name": "change_state",
            "summary": "Changes the state of the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $new_state)\n  {\n    if ($this->check()) {\n      $cur = $this->db->select_one(\"bbn_emailings\", 'state', ['id' => $id]);\n      if (($cur === 'sent') || ($cur === 'cancelled')) {\n        return false;\n      }\n      return (bool)$this->db->update(\"bbn_emailings\", ['state' => $new_state], ['id' => $id]);\n    }\n    return false;\n  }",
            "startLine": 203,
            "endLine": 213,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "state"
                },
                {
                    "name": "new_state",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_medias": {
            "name": "get_medias",
            "summary": "Returns the attachments for the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ($this->check() && ($row = $this->db->select('bbn_emailings', ['id_note', 'version'], ['id' => $id]))) {\n      return $this->_note()->get_medias($row->id_note, $row->version);\n    }\n    return null;\n  }",
            "startLine": 221,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_mailing": {
            "name": "get_mailing",
            "summary": "Returns all the information about the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ($this->check()) {\n      $notes = $this->_note();\n      if (($row = $this->db->rselect('bbn_emailings', [], ['id' => $id])) \n          && ($note = $notes->get($row['id_note']))\n      ) {\n        return array_merge($note, $row);\n      }\n    }\n    return null;\n  }",
            "startLine": 235,
            "endLine": 246,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "process": {
            "name": "process",
            "summary": "Sends the emails to be sent in the limit provided.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($limit = 10)\n  {\n    if ($this->check()) {\n      $sent = 0;\n      $successes = 0;\n      $mailings = [];\n      foreach ($this->db->rselect_all(\n        [\n        'table' => 'bbn_emails',\n        'fields' => ['bbn_emails.id', 'email', 'id_mailing', 'subject', 'text', 'cfg', 'status', 'delivery', 'read', 'priority'],\n        'join' => [[\n          'table' => 'bbn_emailings',\n          'type' => 'left',\n          'on' => [\n            'conditions' => [\n              [\n                'field' => 'id_mailing',\n                'exp' => 'bbn_emailings.id'\n              ]\n            ]\n          ]\n        ]],\n        'where' => [\n          'conditions' => [\n            'status' => 'ready',\n            [\n              'logic' => 'OR',\n              'conditions' => [\n                [\n                  'field' => 'delivery',\n                  'operator' => 'isnull'\n                ], [\n                  'field' => 'delivery',\n                  'operator' => '<',\n                  'exp' => 'NOW()'\n                ]\n              ]\n            ], [\n              'logic' => 'OR',\n              'conditions' => [\n                [\n                  'field' => 'bbn_emailings.state',\n                  'operator' => 'isnull'\n                ], [\n                  'field' => 'bbn_emailings.state',\n                  'value' => 'ready'\n                ], [\n                  'field' => 'bbn_emailings.state',\n                  'value' => 'sending'\n                ]\n              ]\n            ]\n          ]\n        ],\n        'order' => ['priority'],\n        'limit' => $limit\n        ]\n      ) as $r) {\n        $sent++;\n        $ok = false;\n        $att = [];\n        if (!empty($r['id_mailing'])) {\n          if (!isset($mailings[$r['id_mailing']])) {\n            $mailings[$r['id_mailing']] = $this->get_mailing($r['id_mailing']);\n          }\n          $mailing = &$mailings[$r['id_mailing']];\n          if ($mailing['state'] === 'ready') {\n            $this->change_state($r['id_mailing'], 'sending');\n            $mailing['state'] = 'sending';\n          }\n          $text = $mailing['content'];\n          $subject = $mailing['title'];\n          $sender = $mailing['sender'];\n          if (!empty($mailing['medias'])) {\n            foreach ($mailing['medias'] as $a){\n              if (!empty($a['file']) && file_exists($a['file'])) {\n                $att[] = $a['file'];\n              }\n            }\n          }\n        }\n        else{\n          $text = $r['text'];\n          $subject = $r['subject'];\n          $sender = null;\n          if ($r['cfg']) {\n            $r['cfg'] = json_decode($r['cfg'], true);\n            if (!empty($r['cfg']['attachments'])) {\n              foreach ($r['cfg']['attachments'] as $a){\n                $f = \\bbn\\x::indexOf($a, '\/') === 0 ? $a : \\bbn\\mvc::get_content_path().$a;\n                if (file_exists($f)) {\n                  $att[] = $f;\n                }\n              }\n            }\n          }\n        }\n        if ($subject && $text && \\bbn\\str::is_email($r['email'])) {\n          $params = [\n            'to' => $r['email'],\n            'subject' => $subject,\n            'text' => $text\n          ];\n          if (count($att)) {\n            $params['attachments'] = $att;\n          }\n          if ($ok = $this->send($params, $sender)) {\n            $successes++;\n          }\n        }\n        $this->db->update(\n          'bbn_emails', [\n          'status' => $ok ? 'success' : 'failure',\n          'delivery' => date('Y-m-d H:i:s')\n          ], ['id' => $r['id']]\n        );\n      }\n      foreach ($mailings as $id => $m) {\n        if (($m['state'] === 'sending')\n            && !$this->db->count(\n              'bbn_emails', [\n              'id_mailing' => $id,\n              'status'=> 'ready'\n              ]\n            )\n        ) {\n          $this->change_state($id, 'sent');\n        }\n      }\n      return $successes;\n    }\n    $this->set_error(_(\"No mailer defined\"));\n    return null;\n  }",
            "startLine": 254,
            "endLine": 387,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "limit",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "send": {
            "name": "send",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg, $sender = NULL)\n  {\n    if (!empty($cfg['to']) && ($mailer = $this->_get_mailer($sender))) {\n      return $mailer->send($cfg);\n    }\n    return false;\n  }",
            "startLine": 389,
            "endLine": 395,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "sender",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "add": {
            "name": "add",
            "summary": "Adds a new mailing and returns its ID.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    $notes = $this->_note();\n    if ($this->check()\n        && $notes\n        && bbn\\x::has_props($cfg, ['title', 'content', 'sender'], true)\n        && ($id_type = notes::get_option_id('mailings','types'))\n        && ($id_note = $notes->insert($cfg['title'], $cfg['content'], $id_type))\n        \/\/ Cannot give a date if no recipients selected\n        && (!empty($cfg['recipients']) || empty($cfg['sent']))\n    ) {\n      if (empty($cfg['sent'])) {\n        $cfg['sent'] = null;\n      }\n      if ($this->db->insert(\n        'bbn_emailings', [\n        'id_note' => $id_note,\n        'version' => 1,\n        'sender' => $cfg['sender'],\n        'recipients' => $cfg['recipients'] ?: null,\n        'sent' => $cfg['sent']\n        ]\n      )\n      ) {\n        $cfg['id'] = $this->db->last_id();\n        $cfg['id_note'] = $id_note;\n        $cfg['version'] = 1;\n        if (!empty($cfg['attachments'])) {\n          foreach ($cfg['attachments'] as $f){\n            if (is_array($f)) {\n              $notes->add_media_to_note($f['id_media'], $id_note, 1);\n            }\n            elseif (is_file($f)) {\n              \/\/ Add media\n              $notes->add_media($id_note, $f);\n            }\n          }\n        }\n        if (bbn\\x::has_props($cfg, ['recipients', 'sent', 'emails'], true)) {\n          $cfg['res'] = $this->insert_emails($cfg['id'], $cfg['sent'], $cfg['emails'], $cfg['priority'] ?? 5);\n        }\n        return $cfg;\n      }\n    }\n    return null;\n  }",
            "startLine": 403,
            "endLine": 448,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "insert_emails": {
            "name": "insert_emails",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_mailing, $date, array $emails, $priority = 5)\n  {\n    if (!empty($date) && \\bbn\\date::validateSQL($date)) {\n      $res = [];\n      foreach ($emails as $item) {\n        if ($this->db->insert_ignore(\n          'bbn_emails', [\n            'email' => $item['email'],\n            'id_mailing' => $id_mailing,\n            'priority' => $priority,\n            'status' => 'ready',\n            'delivery' => $date\n          ]\n        )\n        ) {\n          $item['id'] = $this->db->last_id();\n          $res[] = $item;\n        }\n      }\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 450,
            "endLine": 472,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_mailing",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "date",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "emails",
                    "position": 2,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "priority",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 5,
                    "default_name": ""
                }
            ]
        },
        "edit": {
            "name": "edit",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $cfg)\n  {\n    $notes = $this->_note();\n    $user = bbn\\user::get_instance();\n    $medias = $this->_medias();\n    $res = 0;\n    \n    if ($this->check() \n        && $user && $notes \n        && bbn\\x::has_props($cfg, ['title', 'content', 'sender']) \n        && ($mailing = $this->get_mailing($id))\n    ) {\n      $cfg['id'] = $id;\n      if ($this->count_sent($id)) {\n        throw new Error(_(\"Impossible to edit a message already sent or partially sent, you need to duplicate it.\"));\n      }\n      $version = $mailing['version'];\n      if (($cfg['title'] !== $mailing['title']) || ($cfg['content'] !== $mailing['content'])) {\n        $version = $notes->insert_version($mailing['id_note'], $cfg['title'], $cfg['content']);\n      }\n      $this->db->update(\n        'bbn_emailings', [\n        'version' => $version,\n        'sender' => $cfg['sender'],\n        'recipients' => $cfg['recipients'] ?: null,\n        'sent' => $cfg['sent']\n        ], [\n        'id' => $id\n        ]\n      );\n      foreach ($cfg['attachments'] as $f){\n        \/\/ It exists already, the file is not sent\n        if (is_array($f)) {\n          $idx = empty($mailing['medias']) ? false : \\bbn\\x::find($mailing['medias'], ['name' => $f['name']]);\n          if ($idx !== null) {\n            if ($version === $mailing['version']) {\n              \/\/ If file found in attachments when note is not modified, it is removed from the original array which can then be used for deleting all remaining attachments\n              array_splice($mailing['medias'], $idx, 1);\n            }\n            elseif ($notes->add_media_to_note($mailing['medias'][$idx]['id'], $mailing['id_note'], $version)) {\n              $res++;\n            }\n          }\n        }\n        \/\/ The pure path to the file is sent\n        elseif ($notes->add_media($mailing['id_note'], $f)) {\n          $res++;\n        }\n      }\n      if ($version === $mailing['version']) {\n        foreach ($mailing['medias'] as $med) {\n          if ($medias->delete($med['id'])) {\n            $res++;\n          }\n        }\n      }\n      else{\n        $res++;\n      }\n      if (!$cfg['sent'] || ($mailing['recipients'] !== $cfg['recipients'])) {\n        $this->delete_all_emails($id);\n      }\n      if (bbn\\x::has_props($cfg, ['recipients', 'sent', 'emails'], true)) {\n        $cfg['res'] = $this->insert_emails($cfg['id'], $cfg['sent'], $cfg['emails'], $cfg['priority'] ?? 5);\n      }\n      return $cfg;\n    }\n    return null;\n  }",
            "startLine": 474,
            "endLine": 542,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "Deletes the mailing and relative emails.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    \/\/ We do not delete mailings which have been sent\n    if ($this->count_sent($id)) {\n      \/\/return 0;\n    }\n    $success = null;\n    $mailing = $this->get_mailing($id);\n    if (!empty($mailing['id_note'])) {\n      $notes = $this->_note();\n      \/\/if the notes has media removes media before to remove the note\n      if ($medias = $notes->get_medias($mailing['id_note'])) {\n        foreach ($medias as $media){\n          $notes->remove_media($media['id'], $mailing['id_note']);\n        }\n      }\n\n      \/\/ if there are emails with the given id_mailing\n      if ($this->db->count('bbn_emails', ['id_mailing' => $id])) {\n        \/\/it removes the emails ready or cancelled relative to this id_mailing\n        $this->delete_all_emails($id);\n      }\n      if (!$this->db->count('bbn_emails', ['id_mailing' => $id])) {\n        \/\/deletes the row\n        $success = $this->db->delete(\"bbn_emailings\", ['id' => $id]);\n        \/\/$notes->remove($mailing['id_note']);\n      }\n    }\n    return $success;\n  }",
            "startLine": 549,
            "endLine": 578,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete_sent": {
            "name": "delete_sent",
            "summary": "Deletes a sent mailing. If $history is true completely delete the row from history.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $history = false)\n  {\n    $success = false;\n    if ($mailing = $this->get_mailing($id)) {\n      if (!empty($mailing['id_note']) && ($mailing['state'] === 'sent')) {\n        if (!empty($history)) {\n          $notes = $this->_note();\n          if (($medias = $notes->get_medias($mailing['id_note']) )) {\n            foreach ($medias as $media){\n              $notes->remove_media($media['id'],$mailing['id_note']);\n            }\n          }\n          $notes->remove($mailing['id_note']);  \n          $success = $this->db->delete('bbn_$_uids', ['bbn_uid' => $id]);\n        }\n        else {\n          $success = $this->db->delete('bbn_emailings', ['id' => $id]);\n        }\n      }\n      \n    }\n    \n    return $success;\n  }",
            "startLine": 587,
            "endLine": 610,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "history",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "delete_email": {
            "name": "delete_email",
            "summary": "Undocumented function",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_email)\n  {\n    if (!empty($id_email)) {\n      return $this->db->delete('bbn_emails', ['id' => $id_email]);\n    }\n  }",
            "startLine": 618,
            "endLine": 623,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete_all_emails": {
            "name": "delete_all_emails",
            "summary": "Deletes all the emails ready or cancelled relative to the given id_mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_mailing)\n  {\n    $success = null;\n    $emails = $this->db->rselect_all('bbn_emails', [], ['id_mailing' => $id_mailing]);\n    if (!empty($emails)) {\n      $n = 0;\n      foreach ($emails as $e){\n        if (($e['status'] === 'ready') || ($e['status'] === 'cancelled')) {\n          if ($this->db->delete('bbn_emails', ['id' => $e['id']])) {\n            $n++;\n          }\n        }\n      }\n      $success = $n;\n    }\n    return $success;\n  }",
            "startLine": 631,
            "endLine": 647,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_mailing",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "change_email_status": {
            "name": "change_email_status",
            "summary": "Changes the status of the given id email.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_email, $state)\n  {\n    return $this->db->update(\n      'bbn_emails', ['status' => $state], [\n      'id' => $id_email,\n      ]\n    );\n  }",
            "startLine": 657,
            "endLine": 664,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_email",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "state",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_emails": {
            "name": "get_emails",
            "summary": "Returns the array containing all the emails relative to an id_mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    return $this->db->rselect_all(\n      'bbn_emails', [], [\n      'id_mailing' => $id\n      ]\n    );\n  }",
            "startLine": 672,
            "endLine": 679,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "count_sent": {
            "name": "count_sent",
            "summary": "Returns the number of emails sent for the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ($this->check()) {\n      return $this->db->count(\n        'bbn_emails', [\n        'id_mailing' => $id,\n        ['status', '!=', 'ready'],\n        ['email', '!=', $this->get_test_emails()]\n        ]\n      );\n    }\n    return null;\n  }",
            "startLine": 687,
            "endLine": 699,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "change_emails_status": {
            "name": "change_emails_status",
            "summary": "Changes the status of the emails relative to the given mailing.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_mailing, $status)\n  {\n    $count = 0;\n    if (($emails = $this->get_emails($id_mailing))) {\n      foreach ($emails as $e){\n        \/\/here I've to check if ready or cancelled??\n        if ($this->change_email_status($e['id'], $status)) {\n          $count ++;\n        };\n      }\n      return $count;\n    }\n  }",
            "startLine": 708,
            "endLine": 720,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_mailing",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "status",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "copy": {
            "name": "copy",
            "summary": "Copies the email",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ($row = $this->get_mailing($id)) {\n      $id_mailing = $this->add(\n        [\n        'title' => $row['title'],\n        'content' => $row['content'],\n        'sender' => $row['sender'],\n        'recipients' => $row['recipients']\n        ]\n      );\n      if (!empty($row['medias']) && ($row2 = $this->get_mailing($id_mailing))) {\n        foreach ($row['medias'] as $r){\n          $this->notes->add_media_to_note($r['id'], $row2['id_note'], 1);\n        }\n      }\n      return $id_mailing;\n    }\n  }",
            "startLine": 728,
            "endLine": 746,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_lasts": {
            "name": "get_lasts",
            "summary": "Get the last mailings rows which aree not sending",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($limit = 10)\n  {\n    return $this->db->rselect_all(\n      [\n      'table' => 'bbn_emailings',\n      'fields' => ['id', 'title', 'sent', 'state'],\n      'join' => [\n        [\n          'table' => 'bbn_notes_versions',\n          'on' => [\n            'conditions' => [\n              [\n                'field' => 'bbn_notes_versions.id_note',\n                'exp' => 'bbn_emailings.id_note'\n              ], [\n                'field' => 'bbn_notes_versions.version',\n                'exp' => 'bbn_emailings.version'\n              ]\n            ]\n          ]\n        ]\n      ],\n      'where' => [\n        ['state', '!=', 'sending'],\n        ['sent', 'isnotnull'],\n        ['sent', '<', date('Y-m-d H:i:s')]\n      ],\n      'order' => [\n        'sent' => 'DESC'\n      ],\n      'limit' => $limit\n      ]\n    );\n  }",
            "startLine": 754,
            "endLine": 787,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "limit",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "get_nexts": {
            "name": "get_nexts",
            "summary": "Get the next mailings rows to be sent",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($limit = 10)\n  {\n    return $this->db->rselect_all(\n      [\n        'table' => 'bbn_emailings',\n        'fields' => ['id', 'title', 'sent', 'state'],\n        'join' => [\n          [\n            'table' => 'bbn_notes_versions',\n            'on' => [\n              'conditions' => [\n                [\n                  'field' => 'bbn_notes_versions.id_note',\n                  'exp' => 'bbn_emailings.id_note'\n                ], [\n                  'field' => 'bbn_notes_versions.version',\n                  'exp' => 'bbn_emailings.version'\n                ]\n              ]\n            ]\n          ]\n        ],\n        'where' => [\n          ['state', '=', 'ready'],\n          ['sent', 'isnotnull'],\n        ],\n        'order' => [\n          'sent' => 'ASC'\n        ],\n        'limit' => $limit\n      ]\n    );\n  }",
            "startLine": 795,
            "endLine": 827,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "limit",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 10,
                    "default_name": ""
                }
            ]
        },
        "get_sendings": {
            "name": "get_sendings",
            "summary": "Get the next mailings rows to be sent",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db->rselect_all(\n      [\n        'table' => 'bbn_emailings',\n        'fields' => ['id', 'title', 'sent', 'state'],\n        'join' => [\n          [\n            'table' => 'bbn_notes_versions',\n            'on' => [\n              'conditions' => [\n                [\n                  'field' => 'bbn_notes_versions.id_note',\n                  'exp' => 'bbn_emailings.id_note'\n                ], [\n                  'field' => 'bbn_notes_versions.version',\n                  'exp' => 'bbn_emailings.version'\n                ]\n              ]\n            ]\n          ]\n        ],\n        'where' => [\n          ['state', '=', 'sending']\n        ],\n        'order' => [\n          'sent' => 'DESC'\n        ]\n      ]\n    );\n  }",
            "startLine": 835,
            "endLine": 865,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_option_root": {
            "name": "get_option_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$option_root_id;\n  }",
            "startLine": 128,
            "endLine": 131,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_root": {
            "name": "get_appui_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$option_appui_id;\n  }",
            "startLine": 133,
            "endLine": 136,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_object": {
            "name": "get_options_object",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = bbn\\appui\\options::get_instance();\n    if (!$o) {\n      throw new \\Exception(_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n    return $o;\n  }",
            "startLine": 138,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\appui\\options"
            ],
            "parent": false,
            "arguments": []
        },
        "get_option_id": {
            "name": "get_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 153,
            "endLine": 155,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_ids": {
            "name": "get_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return $a !== null;\n    }));\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_tree": {
            "name": "get_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args()))) ?\n      $tree['items'] : [];\n  }",
            "startLine": 163,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options": {
            "name": "get_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 169,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_option": {
            "name": "get_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 174,
            "endLine": 176,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_text_value": {
            "name": "get_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      self::get_options_object()->text_value_options($id): [];\n  }",
            "startLine": 178,
            "endLine": 181,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_option_id": {
            "name": "get_appui_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->from_code(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 189,
            "endLine": 192,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_ids": {
            "name": "get_appui_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::get_options_object()->get_codes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function($a){\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 194,
            "endLine": 206,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_tree": {
            "name": "get_appui_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args(), true)) ) ?\n      $tree['items'] : [];\n  }",
            "startLine": 208,
            "endLine": 212,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options": {
            "name": "get_appui_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 214,
            "endLine": 217,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_option": {
            "name": "get_appui_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 219,
            "endLine": 222,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_text_value": {
            "name": "get_appui_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\mailings",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::get_appui_option_id(...func_get_args())) ?\n    self::get_options_object()->text_value_options($id) : [];\n  }",
            "startLine": 224,
            "endLine": 228,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "_cfgs": null,
        "_mailers": [],
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "numMethods": 49,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\models\\tts\\optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\db",
    "isSubclassOf": false,
    "defaultProperties": {
        "_cfgs": null,
        "_mailers": [],
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "_test_emails": null,
        "notes": null,
        "medias": null,
        "mailer": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\appui",
    "shortName": "mailings",
    "summary": ""
}