{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\appui\\notifications",
    "namespace": true,
    "traits": [
        "bbn\\models\\tts\\optional",
        "bbn\\models\\tts\\dbconfig"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/appui\/notifications.php",
    "startLine": 6,
    "endLine": 736,
    "contentConstructor": {
        "file": "bbn\\appui\\notifications",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db)\n  {\n    parent::__construct($db);\n    $this->_init_class_cfg(self::$default_class_cfg);\n    self::optional_init();\n    $this->opt = bbn\\appui\\options::get_instance();\n    $this->user = bbn\\user::get_instance();\n    $this->pref = new bbn\\user\\preferences($this->db);\n    $this->perms = new bbn\\user\\permissions();\n  }",
            "startLine": 54,
            "endLine": 63,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\db $db)\n  {\n      $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "create": {
            "name": "create",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($opt_path, $title, $content, $perms = true, $opt_text = '', $cat_text = '', $user_excluded = false)\n  {\n    if ($list_opt = self::get_option_id('list')) {\n      $ocfg = $this->opt->get_class_cfg();\n      $pcfg = $this->pref->get_class_cfg();\n      $users = \\is_array($perms) ? $perms : [];\n      $perms = \\is_bool($perms) && !empty($perms) && defined('BBN_ID_PERMISSION');\n      if (!($id_opt = $this->opt->from_path($opt_path, '\/', $list_opt))) {\n        $bits = \\explode('\/', $opt_path);\n        if (count($bits) === 2) {\n          if ($perms) {\n            \/\/ Get permissions from the current BBN_ID_PERMISSION value\n            $permissions = $this->db->select_all($pcfg['table'], [\n              $pcfg['arch']['user_options']['id_user'],\n              $pcfg['arch']['user_options']['id_group']\n            ], [$pcfg['arch']['user_options']['id_option'] => BBN_ID_PERMISSION]);\n            $is_public = (bool)$this->opt->get_prop(BBN_ID_PERMISSION, 'public');\n            $perm_parent = $this->db->select_one($ocfg['table'], $ocfg['arch']['options']['id'], [$ocfg['arch']['options']['code'] => 'opt'.$list_opt]);\n          }\n          $parent = $list_opt;\n          foreach ($bits as $i => $code) {\n            $text = ($i === 0) && !empty($cat_text) ? $cat_text : (($i === 1) && !empty($opt_text) ? $opt_text : $code);\n            if (!($p = $this->opt->from_code($code, $parent))) {\n              $p = $this->opt->add([\n                $ocfg['arch']['options']['text'] => $text,\n                  $ocfg['arch']['options']['code'] => $code,\n                  $ocfg['arch']['options']['id_parent'] => $parent\n              ]);\n            }\n            if ($perms) {\n              if (!($pp = $this->opt->from_code($p, $perm_parent))) {\n                $pp = $this->opt->add([\n                  $ocfg['arch']['options']['text'] => $text,\n                  $ocfg['arch']['options']['code'] => 'opt'.$p,\n                  $ocfg['arch']['options']['id_parent'] => $perm_parent,\n                  $ocfg['arch']['options']['id_alias'] => $p,\n                  'public' => $is_public\n                ]);\n                if (!$is_public) {\n                  foreach ($permissions as $perm) {\n                    $this->db->insert($pcfg['table'], [\n                      $pcfg['arch']['user_options']['id_option'] => $pp,\n                      $pcfg['arch']['user_options']['id_user'] => $perm->{$pcfg['arch']['user_options']['id_user']},\n                      $pcfg['arch']['user_options']['id_group'] => $perm->{$pcfg['arch']['user_options']['id_group']}\n                    ]);\n                  }\n                }\n              }\n              $perm_parent = $pp;\n            }\n            $parent = $p;\n            if ($i === 1) {\n              $id_opt = $parent;\n            }\n          }\n        }\n      }\n      if (bbn\\str::is_uid($id_opt)) {\n        if ($perms) {\n          return $perms ? $this->insert_by_option($title, $content, $id_opt, $user_excluded) : $this->insert($title, $content, $id_opt, $users, $user_excluded);\n        }\n      }\n    }\n    return false;\n  }",
            "startLine": 65,
            "endLine": 129,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 7,
            "numberOfRequiredParameters": 3,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "opt_path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "title",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "content",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "perms",
                    "position": 3,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                },
                {
                    "name": "opt_text",
                    "position": 4,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cat_text",
                    "position": 5,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "user_excluded",
                    "position": 6,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "insert": {
            "name": "insert",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($title, $content, $id_option = NULL, array $users = [], $user_excluded = false)\n  {\n    if (\\is_string($id_option) && !bbn\\str::is_uid($id_option)) {\n      $id_option = \\array_reverse(\\explode('\/', $id_option));\n      if (\\count($id_option) === 2) {\n        $id_option[] = 'list';\n      }\n      $id_option = self::get_option_id(...$id_option);\n    }\n    if (!empty($title)\n      && !empty($content)\n      && (\\is_null($id_option)\n        || bbn\\str::is_uid($id_option))\n    ) {\n      $notification = [\n        $this->class_cfg['arch']['content']['id_option'] => $id_option,\n        $this->class_cfg['arch']['content']['title'] => $title,\n        $this->class_cfg['arch']['content']['content'] => $content,\n        $this->class_cfg['arch']['content']['creation'] => \\date('Y-m-d H:i:s')\n      ];\n      if ($this->db->insert($this->class_cfg['tables']['content'], $notification)) {\n        $id = $this->db->last_id();\n        if (empty($users) && !$user_excluded) {\n          $users[] = $this->user->get_id();\n        }\n        $i = 0;\n        $current_id_user = $this->user->get_id();\n        foreach ( $users as $u ){\n          if ((!$user_excluded || ($current_id_user !== $u))\n            && $this->_user_has_permission($notification, $u)\n          ) {\n            $i += (int)$this->db->insert($this->class_table, [\n              $this->fields['id_content'] => $id,\n              $this->fields['id_user'] => $u\n            ]);\n          }\n        }\n        return (bool)$i;\n      }\n    }\n    return false;\n  }",
            "startLine": 131,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "title",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "content",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "users",
                    "position": 3,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "user_excluded",
                    "position": 4,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "insert_by_option": {
            "name": "insert_by_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($title, $content, $id_option, $user_excluded = false)\n  {\n    if (!bbn\\str::is_uid($id_option)) {\n      $id_option = \\array_reverse(\\explode('\/', $id_option));\n      if (\\count($id_option) === 2) {\n        $id_option[] = 'list';\n      }\n      $id_option = self::get_option_id(...$id_option);\n    }\n    if (bbn\\str::is_uid($id_option)\n      && ($ucfg = $this->user->get_class_cfg())\n      && ($ocfg = $this->opt->get_class_cfg())\n      && ($groups = $this->db->get_column_values($ucfg['tables']['groups'], $ucfg['arch']['groups']['id'], [$ucfg['arch']['groups']['type'] => 'real']))\n      && ($id_perm = $this->db->select_one($ocfg['table'], $ocfg['arch']['options']['id'], [$ocfg['arch']['options']['code'] => 'opt'.$id_option]))\n      && ($perm = $this->opt->option($id_perm))\n    ) {\n      $users = [];\n      $is_public = !empty($perm['public']);\n      $current_id_user = $this->user->get_id();\n      foreach ($groups as $group) {\n        $has_perm = $this->pref->group_has($id_perm, $group);\n        $group_users = $this->db->select_all($ucfg['table'], [], [\n          $ucfg['arch']['users']['id_group'] => $group,\n          $ucfg['arch']['users']['active'] => 1\n        ]);\n        foreach ($group_users as $user) {\n          $id_user = $user->{$ucfg['arch']['users']['id']};\n          if (!\\in_array($id_user, $users, true)\n            && (!$user_excluded || ($current_id_user !== $id_user))\n            && ($is_public\n              || $has_perm\n              || $this->pref->user_has($id_perm, $id_user)\n              || (!empty($user->{$ucfg['arch']['users']['admin']})\n                || !empty($user->{$ucfg['arch']['users']['dev']})))\n          ) {\n            $users[] = $id_user;\n          }\n        }\n      }\n      if (!empty($users)) {\n        return $this->insert($title, $content, $id_option, $users);\n      }\n    }\n    return false;\n  }",
            "startLine": 174,
            "endLine": 218,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "title",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "content",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "user_excluded",
                    "position": 3,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if (bbn\\str::is_uid($id)) {\n      return (bool)$this->db->delete($this->class_table, [$this->fields['id'] => $id]);\n    }\n    return null;\n  }",
            "startLine": 220,
            "endLine": 226,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "read": {
            "name": "read",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $id_user = NULL, $moment = NULL)\n  {\n    if (!$id_user) {\n      $id_user = $this->user->get_id();\n    }\n    if (bbn\\str::is_uid($id_user)){\n      if (\\is_array($id)) {\n        $todo = count($id);\n        $did = 0;\n        foreach ($id as $i) {\n          if ($this->read($i, $id_user, $moment)) {\n            $did++;\n          }\n        }\n        return $todo === $did;\n      }\n      else if (bbn\\str::is_uid($id)\n        && !$this->db->select_one($this->class_table, $this->fields['read'], [$this->fields['id'] => $id])\n      ) {\n        return (bool)$this->db->update($this->class_table, [\n          $this->fields['read'] => $moment ? \\round((float)$moment, 4) : bbn\\x::microtime()\n        ], [\n          $this->fields['id'] => $id\n        ]);\n      }\n    }\n    return false;\n  }",
            "startLine": 228,
            "endLine": 255,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "read_all": {
            "name": "read_all",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $moment = NULL)\n  {\n    if (!$id_user) {\n      $id_user = $this->user->get_id();\n    }\n    if (bbn\\str::is_uid($id_user)\n      && ($unreads = $this->get_unread_ids($id_user))\n    ) {\n      $todo = count($unreads);\n      $did = 0;\n      foreach ($unreads as $id){\n        $did += $this->db->update($this->class_table, [\n          $this->fields['read'] => $moment ? \\round((float)$moment, 4) : bbn\\x::microtime()\n        ], [\n          $this->fields['id'] => $id\n        ]);\n      }\n      return $todo === $did;\n    }\n    return false;\n  }",
            "startLine": 257,
            "endLine": 277,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get": {
            "name": "get",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if (bbn\\str::is_uid($id) && ($ucfg = $this->user->get_class_cfg())) {\n      return $this->db->rselect([\n        'table' => $this->class_table,\n        'fields' => array_merge(array_values($this->fields), [\n          $this->class_cfg['arch']['content']['id_option'],\n          $this->class_cfg['arch']['content']['title'],\n          $this->class_cfg['arch']['content']['content'],\n          $this->class_cfg['arch']['content']['creation']\n        ]),\n        'join' => [[\n          'table' => $this->class_cfg['tables']['content'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->col_full_name($this->fields['id_content'], $this->class_table),\n              'exp' => $this->db->col_full_name($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n            ]]\n          ]\n        ], [\n          'table' => $ucfg['table'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->col_full_name($this->fields['id_user'], $this->class_table),\n              'exp' => $this->db->col_full_name($ucfg['arch']['users']['id'], $ucfg['table'])\n            ], [\n              'field' => $this->db->col_full_name($ucfg['arch']['users']['active'], $ucfg['table']),\n              'value' => 1\n            ]]\n          ]\n        ]],\n        'where' => [\n          'conditions' => [[\n            'field' => $this->db->col_full_name($this->fields['id'], $this->class_table),\n            'value' => $id\n          ]]\n        ]\n      ]);\n    }\n    return null;\n  }",
            "startLine": 279,
            "endLine": 319,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_unread": {
            "name": "get_unread",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, array $additional_where = [])\n  {\n    $ucfg = $this->user->get_class_cfg();\n    $where = [\n      'conditions' => [[\n        'field' => $this->db->col_full_name($this->fields['read'], $this->class_table),\n        'operator' => 'isnull'\n      ]]\n    ];\n    if (bbn\\str::is_uid($id_user)) {\n      $where['conditions'][] = [\n        'field' => $this->db->col_full_name($this->fields['id_user'], $this->class_table),\n        'value' => $id_user\n      ];\n    }\n    if (!empty($additional_where)) {\n      $where['conditions'][] = $additional_where;\n    }\n    return $this->db->rselect_all([\n      'table' => $this->class_table,\n      'fields' => array_merge(array_values($this->fields), [\n        $this->class_cfg['arch']['content']['id_option'],\n        $this->class_cfg['arch']['content']['title'],\n        $this->class_cfg['arch']['content']['content'],\n        $this->class_cfg['arch']['content']['creation']\n      ]),\n      'join' => [[\n        'table' => $this->class_cfg['tables']['content'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->col_full_name($this->fields['id_content'], $this->class_table),\n            'exp' => $this->db->col_full_name($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n          ]]\n        ]\n      ], [\n        'table' => $ucfg['table'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->col_full_name($this->fields['id_user'], $this->class_table),\n            'exp' => $this->db->col_full_name($ucfg['arch']['users']['id'], $ucfg['table'])\n          ], [\n            'field' => $this->db->col_full_name($ucfg['arch']['users']['active'], $ucfg['table']),\n            'value' => 1\n          ]]\n        ]\n      ]],\n      'where' => $where,\n      'order_by' => [[\n        'field' => $this->db->col_full_name($this->class_cfg['arch']['content']['creation'], $this->class_cfg['tables']['content']),\n        'dir' => 'ASC'\n      ]]\n    ]);\n  }",
            "startLine": 321,
            "endLine": 373,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "additional_where",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "get_unread_ids": {
            "name": "get_unread_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL)\n  {\n    $ucfg = $this->user->get_class_cfg();\n    $where = [\n      'conditions' => [[\n        'field' => $this->db->col_full_name($this->fields['read'], $this->class_table),\n        'operator' => 'isnull'\n      ]]\n    ];\n    if (bbn\\str::is_uid($id_user)) {\n      $where['conditions'][] = [\n        'field' => $this->db->col_full_name($this->fields['id_user'], $this->class_table),\n        'value' => $id_user\n      ];\n    }\n    return $this->db->get_column_values([\n      'table' => $this->class_table,\n      'fields' => [$this->fields['id']],\n      'join' => [[\n        'table' => $this->class_cfg['tables']['content'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->col_full_name($this->fields['id_content'], $this->class_table),\n            'exp' => $this->db->col_full_name($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n          ]]\n        ]\n      ], [\n        'table' => $ucfg['table'],\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->col_full_name($this->fields['id_user'], $this->class_table),\n            'exp' => $this->db->col_full_name($ucfg['arch']['users']['id'], $ucfg['table'])\n          ], [\n            'field' => $this->db->col_full_name($ucfg['arch']['users']['active'], $ucfg['table']),\n            'value' => 1\n          ]]\n        ]\n      ]],\n      'where' => $where,\n      'order_by' => [[\n        'field' => $this->db->col_full_name($this->class_cfg['arch']['content']['creation'], $this->class_cfg['tables']['content']),\n        'dir' => 'ASC'\n      ]]\n    ]);\n  }",
            "startLine": 375,
            "endLine": 419,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_list_by_user": {
            "name": "get_list_by_user",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, array $data)\n  {\n    if (bbn\\str::is_uid($id_user)) {\n      $ucfg = $this->user->get_class_cfg();\n      $grid = new bbn\\appui\\grid($this->db, $data, [\n        'table' => $this->class_table,\n        'fields' => array_merge(array_values($this->fields), [\n          $this->class_cfg['arch']['content']['id_option'],\n          $this->class_cfg['arch']['content']['title'],\n          $this->class_cfg['arch']['content']['content'],\n          $this->class_cfg['arch']['content']['creation']\n        ]),\n        'join' => [[\n          'table' => $this->class_cfg['tables']['content'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->col_full_name($this->fields['id_content'], $this->class_table),\n              'exp' => $this->db->col_full_name($this->class_cfg['arch']['content']['id'], $this->class_cfg['tables']['content'])\n            ]]\n          ]\n        ], [\n          'table' => $ucfg['table'],\n          'on' => [\n            'conditions' => [[\n              'field' => $this->db->col_full_name($this->fields['id_user'], $this->class_table),\n              'exp' => $this->db->col_full_name($ucfg['arch']['users']['id'], $ucfg['table'])\n            ], [\n              'field' => $this->db->col_full_name($ucfg['arch']['users']['active'], $ucfg['table']),\n              'value' => 1\n            ]]\n          ]\n        ]],\n        'filters' => [\n          'conditions' => [[\n            'field' => $this->db->col_full_name($this->fields['id_user'], $this->class_table),\n            'value' => $id_user\n          ]]\n        ],\n        'order' => [[\n          'field' => $this->db->col_full_name($this->class_cfg['arch']['content']['creation'], $this->class_cfg['tables']['content']),\n          'dir' => 'DESC'\n        ]]\n      ]);\n      if ($grid->check()){\n        return $grid->get_datatable();\n      }\n    }\n    return null;\n  }",
            "startLine": 421,
            "endLine": 469,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "cont_unread": {
            "name": "cont_unread",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL)\n  {\n    return \\count($this->get_unread_ids($id_user));\n  }",
            "startLine": 471,
            "endLine": 474,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "notify": {
            "name": "notify",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($notification)\n  {\n    if (bbn\\str::is_uid($notification)) {\n      $notification = $this->get($notification);\n    }\n    if (\\is_array($notification)\n      && bbn\\str::is_uid($notification[$this->fields['id']])\n      && bbn\\str::is_uid($notification[$this->fields['id_content']])\n      && bbn\\str::is_uid($notification[$this->fields['id_user']])\n      && ($id_user = $notification[$this->fields['id_user']])\n      && !empty($notification[$this->class_cfg['arch']['content']['title']])\n      && !empty($notification[$this->class_cfg['arch']['content']['content']])\n      && empty($notification[$this->fields['read']])\n      && ($cfg = $this->get_cfg($id_user, $notification[$this->class_cfg['arch']['content']['id_option']]))\n    ) {\n      $mtime = bbn\\x::microtime();\n      $dpath = bbn\\mvc::get_user_data_path($id_user, 'appui-notifications');\n      $ucfg = $this->user->get_class_cfg();\n      $sessions = $this->db->select_all($ucfg['tables']['sessions'], [\n        $ucfg['arch']['sessions']['id'],\n        $ucfg['arch']['sessions']['sess_id']\n      ], [\n        $ucfg['arch']['sessions']['id_user'] => $id_user,\n        $ucfg['arch']['sessions']['opened'] => 1\n      ]);\n      \/\/ Web notification\n      if (empty($notification[$this->fields['web']])\n        && !empty($cfg['web'])\n        && !empty($sessions)\n        && empty($notification[$this->fields['mail']])\n      ) {\n        foreach ($sessions as $sess) {\n          $path = $dpath . \"web\/{$sess->id}\/\";\n          if (bbn\\file\\dir::create_path($path) && !\\is_file($path . \"$mtime.json\")) {\n            $notification[$this->fields['web']] = $mtime;\n            $notification[$this->fields['dt_web']] = date('Y-m-d H:i:s', $mtime);\n            file_put_contents($path . \"$mtime.json\", json_encode($notification));\n          }\n        }\n      }\n      \/\/ Browser notification\n      else if (empty($notification[$this->fields['browser']])\n        && !empty($cfg['browser'])\n        && !empty($sessions)\n        && empty($notification[$this->fields['mail']])\n      ) {\n        foreach ($sessions as $sess) {\n          $path = $dpath . \"browser\/{$sess->id}\/\";\n          if ( bbn\\file\\dir::create_path($path) && !\\is_file($path . \"$mtime.json\")) {\n            $notification[$this->fields['browser']] = $mtime;\n            $notification[$this->fields['dt_browser']] = date('Y-m-d H:i:s', $mtime);\n            file_put_contents($path . \"$mtime.json\", json_encode($notification));\n          }\n        }\n      }\n      \/\/ Mail notification\n      else if (empty($notification[$this->fields['mail']]) && !empty($cfg['mail'])) {\n        $creation = strtotime($notification[$this->class_cfg['arch']['content']['creation']]);\n        if ( ($cfg['mail'] === 'immediately')\n          || (($cfg['mail'] === 'daily')\n            && (time() > strtotime('00:00:00 +1 day', $creation)))\n          || (($cfg['mail'] === 'default')\n            && (time() > strtotime('+1 hour', $creation)))\n        ) {\n          $notification[$this->fields['mail']] = $mtime;\n          $this->_send_grouped_mail($notification, $cfg['mail']);\n        }\n      }\n      \/\/ App notification\n      \/\/else if (empty($notification[$this->fields['mobile']]) && !empty($cfg['mobile'])) {}\n      return $this->_update($notification[$this->fields['id']], $notification);\n    }\n    return null;\n  }",
            "startLine": 476,
            "endLine": 549,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "notification",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "process": {
            "name": "process",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      $this->notify($n);\n    }\n  }",
            "startLine": 551,
            "endLine": 555,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_cfg": {
            "name": "get_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $id_option = NULL)\n  {\n    if (bbn\\str::is_uid($id_user)\n      && ($cfg_opt_id = self::get_option_id('cfg'))\n      && bbn\\str::is_uid($cfg_opt_id)\n    ) {\n      \/\/ Glogal cfg\n      if (empty($this->cfg)) {\n        $this->cfg = $this->opt->get_value($cfg_opt_id);\n      }\n      $cfg = $this->cfg;\n      \/\/ Get global user's preferences\n      if ($cfg_pref = $this->pref->get_cfg_by_option($cfg_opt_id, $id_user)) {\n        $cfg = \\array_merge($cfg, $cfg_pref);\n      }\n      \/\/ Get users's preferences of the notification's category\n      if (bbn\\str::is_uid($id_option)\n        && ($id_option_parent = $this->opt->get_id_parent($id_option))\n        && bbn\\str::is_uid($id_option_parent)\n        && ($not_parent_pref = $this->pref->get_cfg_by_option($id_option_parent, $id_user))\n      ) {\n        $cfg = \\array_merge($cfg, $not_parent_pref);\n      }\n      \/\/ Get user's preferences of this notification\n      if (bbn\\str::is_uid($id_option)\n        && ($not_pref = $this->pref->get_cfg_by_option($id_option, $id_user))\n      ) {\n        $cfg = \\array_merge($cfg, $not_pref);\n      }\n      return $cfg;\n    }\n    return null;\n  }",
            "startLine": 557,
            "endLine": 589,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "set_cfg": {
            "name": "set_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    if (!empty($cfg['id_option'])\n      && isset($cfg['web'], $cfg['browser'], $cfg['mail'], $cfg['mobile'])\n    ) {\n      return (bool)$this->pref->update_by_option($cfg['id_option'], [\n        'web' => (bool)$cfg['web'],\n        'browser' => (bool)$cfg['browser'],\n        'mail' => \\is_string($cfg['mail']) ? $cfg['mail'] : (bool)$cfg['mail'],\n        'mobile' => (bool)$cfg['mobile']\n      ]);\n    }\n    return false;\n  }",
            "startLine": 591,
            "endLine": 604,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "_user_has_permission": {
            "name": "_user_has_permission",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($notification, $id_user = NULL)\n  {\n    if (!\\is_array($notification)\n      && \\is_string($notification)\n      && bbn\\str::is_uid($notification)\n    ) {\n      $notification = $this->get($notification);\n    }\n    if (\\is_array($notification)\n      && ($id_user = $id_user ?: ($notification[$this->fields['id_user']] ?? $this->user->get_id()))\n      && bbn\\str::is_uid($id_user)\n      && ($ucfg = $this->user->get_class_cfg())\n      && ($ocfg = $this->opt->get_class_cfg())\n      && ($user = $this->db->select($ucfg['table'], [\n        $ucfg['arch']['users']['id_group'],\n        $ucfg['arch']['users']['admin'],\n        $ucfg['arch']['users']['dev']\n      ], [$ucfg['arch']['users']['id'] => $id_user]))\n    ) {\n      $id_opt = $notification[$this->class_cfg['arch']['content']['id_option']] ?? null;\n      if (!empty($user->{$ucfg['arch']['users']['admin']})\n        || !empty($user->{$ucfg['arch']['users']['dev']})\n        || empty($id_opt)\n      ) {\n        return true;\n      }\n      if (($id_perm = $this->db->select_one($ocfg['table'], $ocfg['arch']['options']['id'], [$ocfg['arch']['options']['code'] => 'opt'.$id_opt]))\n        && ($perm = $this->opt->option($id_perm))\n      ) {\n        if (!empty($perm['public'])) {\n          return true;\n        }\n        return $this->pref->user_has($id_perm, $id_user)\n          || $this->pref->group_has($id_perm, $user->{$ucfg['arch']['users']['id_group']});\n      }\n    }\n    return false;\n  }",
            "startLine": 698,
            "endLine": 735,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "notification",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 56,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_option_root": {
            "name": "get_option_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$option_root_id;\n  }",
            "startLine": 128,
            "endLine": 131,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_root": {
            "name": "get_appui_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$option_appui_id;\n  }",
            "startLine": 133,
            "endLine": 136,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_object": {
            "name": "get_options_object",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = bbn\\appui\\options::get_instance();\n    if (!$o) {\n      throw new \\Exception(_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n    return $o;\n  }",
            "startLine": 138,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\appui\\options"
            ],
            "parent": false,
            "arguments": []
        },
        "get_option_id": {
            "name": "get_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 153,
            "endLine": 155,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_ids": {
            "name": "get_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return $a !== null;\n    }));\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_tree": {
            "name": "get_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args()))) ?\n      $tree['items'] : [];\n  }",
            "startLine": 163,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options": {
            "name": "get_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 169,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_option": {
            "name": "get_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 174,
            "endLine": 176,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_text_value": {
            "name": "get_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      self::get_options_object()->text_value_options($id): [];\n  }",
            "startLine": 178,
            "endLine": 181,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_option_id": {
            "name": "get_appui_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->from_code(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 189,
            "endLine": 192,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_ids": {
            "name": "get_appui_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::get_options_object()->get_codes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function($a){\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 194,
            "endLine": 206,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_tree": {
            "name": "get_appui_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args(), true)) ) ?\n      $tree['items'] : [];\n  }",
            "startLine": 208,
            "endLine": 212,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options": {
            "name": "get_appui_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 214,
            "endLine": 217,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_option": {
            "name": "get_appui_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 219,
            "endLine": 222,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_text_value": {
            "name": "get_appui_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::get_appui_option_id(...func_get_args())) ?\n    self::get_options_object()->text_value_options($id) : [];\n  }",
            "startLine": 224,
            "endLine": 228,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $res = $this->db->count(\n      $this->class_table, [\n      $this->class_cfg['arch'][$this->class_table_index]['id'] => $id\n      ]\n    );\n    return (bool)$res;\n  }",
            "startLine": 61,
            "endLine": 69,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_class_cfg": {
            "name": "get_class_cfg",
            "summary": "Return the",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 75,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_fields": {
            "name": "get_fields",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\notifications",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->fields;\n  }",
            "startLine": 80,
            "endLine": 83,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "default_class_cfg": {
            "table": "bbn_notifications",
            "tables": {
                "notifications": "bbn_notifications",
                "content": "bbn_notifications_content"
            },
            "arch": {
                "notifications": {
                    "id": "id",
                    "id_content": "id_content",
                    "id_user": "id_user",
                    "web": "web",
                    "browser": "browser",
                    "mail": "mail",
                    "mobile": "mobile",
                    "read": "read",
                    "dt_web": "dt_web",
                    "dt_browser": "dt_browser",
                    "dt_mail": "dt_mail",
                    "dt_mobile": "dt_mobile",
                    "dt_read": "dt_read"
                },
                "content": {
                    "id": "id",
                    "id_option": "id_option",
                    "title": "title",
                    "content": "content",
                    "creation": "creation"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "numMethods": 43,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 4,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\models\\tts\\optional",
        "bbn\\models\\tts\\dbconfig"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\db",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_class_cfg": {
            "table": "bbn_notifications",
            "tables": {
                "notifications": "bbn_notifications",
                "content": "bbn_notifications_content"
            },
            "arch": {
                "notifications": {
                    "id": "id",
                    "id_content": "id_content",
                    "id_user": "id_user",
                    "web": "web",
                    "browser": "browser",
                    "mail": "mail",
                    "mobile": "mobile",
                    "read": "read",
                    "dt_web": "dt_web",
                    "dt_browser": "dt_browser",
                    "dt_mail": "dt_mail",
                    "dt_mobile": "dt_mobile",
                    "dt_read": "dt_read"
                },
                "content": {
                    "id": "id",
                    "id_option": "id_option",
                    "title": "title",
                    "content": "content",
                    "creation": "creation"
                }
            }
        },
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "opt": null,
        "user": null,
        "pref": null,
        "perms": null,
        "cfg": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null,
        "class_cfg": null,
        "fields": null,
        "class_table": null,
        "class_table_index": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\appui",
    "shortName": "notifications",
    "summary": ""
}