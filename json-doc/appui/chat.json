{
    "doc": {
        "description": "Class chat",
        "tags": {
            "package": "bbn\\appui"
        }
    },
    "name": "bbn\\appui\\chat",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/appui\/chat.php",
    "startLine": 18,
    "endLine": 991,
    "contentConstructor": {
        "file": "bbn\\appui\\chat",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Chat constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, bbn\\user $user)\n  {\n    if (defined('BBN_DATA_PATH') && $user->check_session()) {\n      parent::__construct($db);\n      $this->user = $user;\n      $this->users = new bbn\\user\\users($this->db);\n    }\n  }",
            "startLine": 35,
            "endLine": 42,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\db $db)\n  {\n      $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The user object"
                },
                {
                    "name": "user",
                    "position": 1,
                    "type": "bbn\\user",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the object has been constructed correctly or not.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db && $this->user;\n  }",
            "startLine": 49,
            "endLine": 52,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "create": {
            "name": "create",
            "summary": "Creates a new chat with the current user and another participant.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $users, $public = 0)\n  {\n    if ($this->check()) {\n      $join = '';\n      $where = '';\n      $values = [$this->user->get_id(), $public];\n      foreach ($users as $i => $u){\n        $join .= \"JOIN bbn_chats_users AS u$i ON u$i.id_chat = bbn_chats.id\".PHP_EOL;\n        $where .= \"AND u$i.id_user = ?\".PHP_EOL;\n        $values[] = $u;\n      }\n      $sql = <<<SQL\nSELECT id\nFROM bbn_chats\n  $join\nWHERE creator = ?\nAND public = ?\n$where\nSQL;\n      if (($id_chat = $this->db->get_one($sql, $values))\n        && (count($users) === $this->db->count('bbn_chat_users', ['id_chat' => $id_chat]))\n      ) {\n        return $id_chat;\n      }\n      if ($this->db->insert('bbn_chats', [\n        'creator' => $this->user->get_id(),\n        'creation' => date('Y-m-d H:i:s'),\n        'public' => $public ? 1 : 0\n      ])) {\n        $id_chat = $this->db->last_id();\n        $this->db->insert('bbn_chats_users', [\n          'id_chat' => $id_chat,\n          'id_user' => $this->user->get_id(),\n          'entrance' => x::microtime(),\n          'admin' => 1\n        ]);\n        foreach ($users as $user) {\n          $this->db->insert_ignore('bbn_chats_users', [\n            'id_chat' => $id_chat,\n            'id_user' => $user,\n            'entrance' => x::microtime(),\n            'admin' => 0\n          ]);\n        }\n        $this->_set_state_hash($id_chat);\n        return $id_chat;\n      }\n    }\n    return null;\n  }",
            "startLine": 61,
            "endLine": 110,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "users",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "public",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "create_group": {
            "name": "create_group",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($title, array $users, array $admins = [])\n  {\n    if (($time = x::microtime())\n      && !empty($users)\n      && ($id_user = $this->user->get_id())\n      && ($username = $this->user->get_name())\n      && $this->db->insert('bbn_chats', [\n        'title' => $title,\n        'creator' => $id_user,\n        'creation' => date('Y-m-d H:i:s', $time)\n      ])\n      && ($id = $this->db->last_id())\n      && $this->db->insert('bbn_chats_users', [\n        'id_chat' => $id,\n        'id_user' => $id_user,\n        'entrance' => $time,\n        'admin' => 1\n      ])\n    ) {\n      $users = array_filter(\n        $users, function ($u) use ($id_user) {\n          return $u !== $id_user;\n        }\n      );\n      $admins = array_filter(\n        $admins, function ($u) use ($id_user) {\n          return $u !== $id_user;\n        }\n      );\n      $users_added = 0;\n      $admins_added = 0;\n      foreach ($users as $user) {\n        if (bbn\\str::is_uid($user)) {\n          $users_added += $this->db->insert('bbn_chats_users', [\n          'id_chat' => $id,\n          'id_user' => $user,\n          'entrance' => $time,\n          'admin' => 0\n          ]);\n        }\n      }\n      $this->_add_bot_message($id, [\n        $id_user => _('You created this group'),\n        \"$username \" . _('created this group')\n      ]);\n      foreach ($users as $user) {\n        if (bbn\\str::is_uid($user)) {\n          $name = $this->user->get_name($user);\n          $this->_add_bot_message($id, [\n            $id_user => _('You added') . \" $name \" .  _('to the group'),\n            $user => $username . ' ' . _('added you to the group'),\n            \"$username \" . _('added') . \" $name \" . _('to the group')\n          ]);\n          if (\\in_array($user, $admins, true)) {\n            $admins_added += (int)$this->add_admin($id, $user);\n          }\n        }\n      }\n      $this->_set_state_hash($id);\n      return (count($users) === $users_added) && (count($admins) === $admins_added);\n    }\n    return null;\n  }",
            "startLine": 112,
            "endLine": 174,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "title",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "users",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "admins",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "destroy": {
            "name": "destroy",
            "summary": "Destroys the given chat",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat)\n  {\n    return $this->check()\n      && bbn\\str::is_uid($id_chat)\n      && $this->is_creator($id_chat)\n      && $this->db->update('bbn_chats', ['blocked' => 1], ['id' => $id_chat])\n      && $this->db->update('bbn_chats_users', ['active' => 0], ['id_chat' => $id_chat])\n      && $this->_set_state_hash($id_chat);\n  }",
            "startLine": 181,
            "endLine": 189,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "chat"
                }
            ]
        },
        "talk": {
            "name": "talk",
            "summary": "Sends a new message from the current user in the given chat.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $message)\n  {\n    if ($this->check() && ($chat = $this->info($id_chat)) && !$chat['blocked']) {\n      $users = $this->get_participants($id_chat);\n      if (\\in_array($this->user->get_id(), $users, true)) {\n        $time = x::microtime();\n        $st = bbn\\util\\enc::crypt(json_encode(['time' => $time, 'user' => $this->user->get_id(), 'message' => $message]));\n        $day = date('Y-m-d');\n        foreach ($users as $user) {\n          $dir = bbn\\mvc::get_user_data_path($user, 'appui-chat').$id_chat.'\/'.$day;\n          if (bbn\\file\\dir::create_path($dir)) {\n            file_put_contents($dir.'\/'.$time.'.msg', $st);\n          }\n        }\n        $this->set_last_activity($id_chat, $this->user->get_id());\n        return $this->db->update('bbn_chats', ['last_message' => $time], ['id' => $id_chat]);\n      }\n    }\n    return null;\n  }",
            "startLine": 198,
            "endLine": 217,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "message",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "info": {
            "name": "info",
            "summary": "Gets information about the given chat.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat)\n  {\n    if ($this->check() && bbn\\str::is_uid($id_chat)) {\n      return $this->db->rselect('bbn_chats', [], ['id' => $id_chat]) ?: null;\n    }\n    return null;\n  }",
            "startLine": 225,
            "endLine": 231,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_chats_hash": {
            "name": "get_chats_hash",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($entrance = NULL)\n  {\n    $res = '';\n    foreach ( $this->get_chats($entrance) as $c ) {\n      if ( $h = $this->_get_state_hash($c) ){\n        $res .= $h;\n      }\n    }\n    return $res ? \\md5($res) : null;\n  }",
            "startLine": 233,
            "endLine": 242,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "entrance",
                    "position": 0,
                    "type": "float",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "set_title": {
            "name": "set_title",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $title = NULL)\n  {\n    if (\\bbn\\str::is_uid($id_chat)\n      && $this->is_admin($id_chat)\n      && $this->db->update('bbn_chats', ['title' => $title], ['id' => $id_chat])\n    ) {\n      $this->_set_state_hash($id_chat);\n      return $this->_add_bot_message($id_chat, [\n        $this->user->get_id() => _(\"You have changed the chat title\"),\n        $this->user->get_name() . ' ' . _('has changed the chat title')\n      ]);\n    }\n  }",
            "startLine": 244,
            "endLine": 256,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "title",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "add_user": {
            "name": "add_user",
            "summary": "Adds the given user to the given chat (if the current user is admin of this chat).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user)\n  {\n    if ($this->is_admin($id_chat)\n      && ($name1 = $this->user->get_name())\n      && ($name2 = $this->user->get_name($id_user))\n      && $this->db->insert_update('bbn_chats_users', [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user,\n        'entrance' => x::microtime(),\n        'admin' => 0,\n        'active' => 1\n      ])\n    ) {\n      $this->_set_state_hash($id_chat);\n      return $this->_add_bot_message($id_chat, [\n        $this->user->get_id() => _('You added') . \" $name2\",\n        $id_user => \"$name1 \" . _('added you'),\n        $name1 . ' ' . _('added') . ' ' . $name2\n      ]);\n    }\n    return false;\n  }",
            "startLine": 265,
            "endLine": 286,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "remove_user": {
            "name": "remove_user",
            "summary": "Removes the given user to the given chat (if the current user is admin of this chat).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user)\n  {\n    if ($this->is_admin($id_chat)\n      && bbn\\str::is_uid($id_user)\n      && ($name1 = $this->user->get_name())\n      && ($name2 = $this->user->get_name($id_user))\n      && $this->db->update('bbn_chats_users', ['active' => 0], [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user\n      ])\n    ) {\n      $this->_set_state_hash($id_chat);\n      return $this->_add_bot_message($id_chat, [\n        $this->user->get_id() => _('You remove') . \" $name2\",\n        $name1 . ' ' . _('removed') . ' ' . $name2\n      ]);\n    }\n    return false;\n  }",
            "startLine": 295,
            "endLine": 313,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add_admin": {
            "name": "add_admin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user)\n  {\n    if ($this->check()\n      && bbn\\str::is_uid($id_chat)\n      && bbn\\str::is_uid($id_user)\n      && $this->is_creator($id_chat)\n      && ($name = $this->user->get_name())\n      && ($name2 = $this->user->get_name($id_user))\n    ) {\n      return $this->_set_admin($id_chat, $id_user, true, [\n        $this->user->get_id() => _('You set') . \" $name2 \" . _('as admin'),\n        $id_user => \"$name \" . _('set you as admin'),\n        \"$name \" . _('set') . \" $name2 \" . _('as admin')\n      ]);\n    }\n    return null;\n  }",
            "startLine": 315,
            "endLine": 331,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "remove_admin": {
            "name": "remove_admin",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user)\n  {\n    if ($this->check()\n      && bbn\\str::is_uid($id_chat)\n      && bbn\\str::is_uid($id_user)\n      && $this->is_creator($id_chat)\n      && ($name = $this->user->get_name())\n      && ($name2 = $this->user->get_name($id_user))\n    ) {\n      return $this->_set_admin($id_chat, $id_user, false, [\n        $this->user->get_id() => _('You removed') . \" $name2 \" . _('as admin'),\n        $id_user => \"$name \" . _('removed you as admin'),\n        \"$name \" . _('removed') . \" $name2 \" . _('as admin')\n      ]);\n    }\n    return null;\n  }",
            "startLine": 333,
            "endLine": 349,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_participants": {
            "name": "get_participants",
            "summary": "Returns the participants of the given chat as an array of id_user.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $with_current = true, $last_activity = false)\n  {\n    if ($this->check()) {\n      $ucfg = $this->user->get_class_cfg();\n      $cfg = [\n        'table' => 'bbn_chats_users',\n        'fields' => ['bbn_chats_users.id_user'],\n        'join' => [[\n          'table' => $ucfg['table'],\n          'on' => [\n            'conditions' => [[\n              'field' => 'bbn_chats_users.id_user',\n              'exp' => $ucfg['table'].'.'.$ucfg['arch']['users']['id']\n            ], [\n              'field' => $ucfg['table'].'.'.$ucfg['arch']['users']['active'],\n              'value' => 1\n            ]]\n          ]\n        ]],\n        'where' => [\n          'conditions' => [[\n            'field' => 'id_chat',\n            'value' => $id_chat\n          ], [\n            'field' => 'active',\n            'value' => 1\n          ]]\n        ]\n      ];\n      if (!$with_current) {\n        $cfg['where']['conditions'][] = [\n          'field' => 'bbn_chats_users.id_user',\n          'operator' => '!=',\n          'value' => $this->user->get_id()\n        ];\n      }\n      if ($last_activity) {\n        $cfg['fields'] = [\n          'id' => 'bbn_chats_users.id_user',\n          'lastActivity' => 'bbn_chats_users.last_activity',\n         \/\/ 'lastUserActivity' => 'UNIX_TIMESTAMP(MAX('.$ucfg['tables']['sessions].'.'.$ucfg['arch']['sessions']['last_activity'].'))'\n        ];\n        \/* $cfg['join'][] = [\n          'table' => $ucfg['tables']['sessions],\n          'type' => 'left',\n          'on' => [\n            'conditions' => [[\n              'field' => $ucfg['tables']['sessions].'.'.$ucfg['arch']['sessions']['id_user'],\n              'exp' => 'bbn_chats_users.id_user'\n            ]]\n          ]\n        ];\n        $cfg['group_by'] = [$ucfg['tables']['sessions].'.'.$ucfg['arch']['sessions']['id_user']]; *\/\n        return $this->db->rselect_all($cfg);\n      }\n      return $this->db->get_field_values($cfg);\n    }\n    return null;\n  }",
            "startLine": 358,
            "endLine": 416,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "current"
                },
                {
                    "name": "with_current",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                },
                {
                    "name": "last_activity",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "get_admins": {
            "name": "get_admins",
            "summary": "Returns the admins of the given chat as an array of id_user.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat)\n  {\n    if ($this->check()\n      && bbn\\str::is_uid($id_chat)\n    ) {\n      return $this->db->get_field_values(\n        'bbn_chats_users', 'id_user', [\n          'id_chat' => $id_chat,\n          'active' =>  1,\n          'admin' => 1\n        ]\n      );\n    }\n    return null;\n  }",
            "startLine": 424,
            "endLine": 438,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_participant": {
            "name": "is_participant",
            "summary": "Checks whether the given user is participant of the given chat.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user = NULL)\n  {\n    if ($this->check()\n      && bbn\\str::is_uid($id_chat)\n      && (bbn\\str::is_uid($id_user) || \\is_null($id_user))\n    ) {\n      return (bool)$this->db->count('bbn_chats_users', [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user ?: $this->user->get_id()\n      ]);\n    }\n    return null;\n  }",
            "startLine": 447,
            "endLine": 459,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "is_admin": {
            "name": "is_admin",
            "summary": "Checks whether the current user is an admin of the given chat or not.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user = NULL)\n  {\n    if ($this->check()\n      && bbn\\str::is_uid($id_chat)\n      && ($chat = $this->info($id_chat))\n      && !$chat['blocked']\n      && (bbn\\str::is_uid($id_user) || \\is_null($id_user))\n    ) {\n      return (bool)$this->db->count('bbn_chats_users', [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user ?: $this->user->get_id(),\n        'admin' => 1\n      ]);\n    }\n    return null;\n  }",
            "startLine": 468,
            "endLine": 483,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "is_creator": {
            "name": "is_creator",
            "summary": "Checks whether the current user is the creator of the given chat or not.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user = NULL)\n  {\n    if ($this->check()\n      && bbn\\str::is_uid($id_chat)\n      && ($chat = $this->info($id_chat))\n      && !$chat['blocked']\n      && (bbn\\str::is_uid($id_user) || \\is_null($id_user))\n    ) {\n      return $chat['creator'] === $id_user ?: $this->user->get_id();\n    }\n    return null;\n  }",
            "startLine": 492,
            "endLine": 503,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user"
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_chats": {
            "name": "get_chats",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($entrance = NULL)\n  {\n    if ($this->check()) {\n      $where = [\n        'conditions' => [[\n          'field' => 'bbn_chats_users.id_user',\n          'value' => $this->user->get_id()\n        ], [\n          'field' => 'bbn_chats_users.active',\n          'value' => 1\n        ]]\n      ];\n      if (\\is_float($entrance)) {\n        $where['conditions'][] = [\n          'field' => 'bbn_chats_users.entrance',\n          'operator' => '<=',\n          'value' => $entrance\n        ];\n      }\n      return $this->db->get_field_values([\n        'table' => 'bbn_chats_users',\n        'fields' => ['id_chat'],\n        'join' => [[\n          'table' => 'bbn_chats',\n          'on' => [\n            'conditions' => [[\n              'field' => 'bbn_chats_users.id_chat',\n              'exp' => 'bbn_chats.id'\n            ]]\n          ]\n        ]],\n        'where' => $where,\n        'order' => [[\n          'field' => 'bbn_chats.last_message',\n          'dir' => 'DESC'\n        ]]\n      ]);\n    }\n  }",
            "startLine": 505,
            "endLine": 543,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "entrance",
                    "position": 0,
                    "type": "float",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_chat_by_users": {
            "name": "get_chat_by_users",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $users)\n  {\n    if ($this->check() && count($users)) {\n      $cfg = [\n        'tables' => ['bbn_chats'],\n        'fields' => ['bbn_chats.id'],\n        'join' => [],\n        'where' => ['blocked' => 0]\n      ];\n      $users[] = $this->user->get_id();\n      $users = array_unique($users);\n      foreach ($users as $i => $u) {\n        $cfg['join'][] = [\n          'table' => 'bbn_chats_users',\n          'alias' => 'u'.($i+1),\n          'on' => [\n            'conditions' => [[\n              'field' => 'bbn_chats.id',\n              'exp' => 'u'.($i+1).'.id_chat'\n            ]]\n          ]\n        ];\n        $cfg['where']['u'.($i+1).'.id_user'] = $u;\n      }\n      $id_chat = false;\n      $ids = $this->db->get_column_values($cfg);\n      if (count($ids)) {\n        foreach ($ids as $id) {\n          if (count($this->get_participants($id)) === count($users)) {\n            $id_chat = $id;\n            break;\n          }\n        }\n      }\n      if (!$id_chat) {\n        $id_chat = $this->create($users);\n      }\n      return $id_chat ?: null;\n    }\n    return null;\n  }",
            "startLine": 545,
            "endLine": 585,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "users",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "has_old_messages": {
            "name": "has_old_messages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $moment)\n  {\n    if ($this->check()) {\n      $cdir = bbn\\mvc::get_user_data_path($this->user->get_id(), 'appui-chat').$id_chat.'\/';\n      if ($this->is_participant($id_chat) && is_dir($cdir)) {\n        $dir = $cdir . date('Y-m-d', $moment);\n        $files = \\bbn\\file\\dir::get_files($dir);\n        foreach ($files as $file){\n          $time = round((float)basename($file, '.msg'), 4);\n          if (x::compare_floats($time, $moment, '<') && ($st = file_get_contents($file))) {\n            return true;\n          }\n        }\n        $dirs = \\bbn\\file\\dir::get_dirs($cdir);\n        foreach ($dirs as $d){\n          if ((basename($d) < date('Y-m-d', $moment)) && !empty(\\bbn\\file\\dir::get_files($d))) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "startLine": 587,
            "endLine": 609,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_prev_messages": {
            "name": "get_prev_messages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $moment = NULL, $num = 50)\n  {\n    return $this->_get_messages($id_chat, $moment ?: x::microtime(), '<', $num);\n  }",
            "startLine": 611,
            "endLine": 614,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": "float",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 50,
                    "default_name": ""
                }
            ]
        },
        "get_next_messages": {
            "name": "get_next_messages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $moment = NULL, $num = 0)\n  {\n    return $this->_get_messages($id_chat, $moment ?: x::microtime(), '>', $num);\n  }",
            "startLine": 616,
            "endLine": 619,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "moment",
                    "position": 1,
                    "type": "float",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 2,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "get_fromto_messages": {
            "name": "get_fromto_messages",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $from, $to, $num = 0)\n  {\n\n  }",
            "startLine": 621,
            "endLine": 624,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "from",
                    "position": 1,
                    "type": "float",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "to",
                    "position": 2,
                    "type": "float",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "num",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "block": {
            "name": "block",
            "summary": "Close a chat by setting blocked to 1.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat)\n  {\n    if ($this->is_admin($id_chat) && $this->db->update('bbn_chats', ['blocked' => 1], ['id' => $id_chat])) {\n      return $this->_set_state_hash($id_chat);\n    }\n    return false;\n  }",
            "startLine": 632,
            "endLine": 638,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "leave": {
            "name": "leave",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user = NULL)\n  {\n    if ($this->check()\n      && bbn\\str::is_uid($id_chat)\n      && $this->is_participant($id_chat)\n      && $this->_add_bot_message($id_chat, $this->user->get_name($id_user ?: $this->user->get_id()) . ' ' . _('has left the chat'))\n      && $this->db->update('bbn_chats_users', ['active' => 0], [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user ?: $this->user->get_id()\n      ])\n    ) {\n      $ok = true;\n      if (($parts = $this->get_participants($id_chat))\n        && (count($parts) === 1)\n      ) {\n        $ok = !!$this->leave($id_chat, $parts[0]);\n      }\n      $this->_set_state_hash($id_chat);\n      return $ok;\n    }\n    return null;\n  }",
            "startLine": 640,
            "endLine": 661,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_last_activity": {
            "name": "get_last_activity",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user)\n  {\n    if (bbn\\str::is_uid($id_chat)\n      && bbn\\str::is_uid($id_user)\n      && ($last = $this->db->select_one('bbn_chats_users', 'last_activity', [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user\n      ]))\n    ) {\n      return round((float)$last, 4);\n    }\n    return round((float)0, 4);\n  }",
            "startLine": 663,
            "endLine": 675,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "float"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "set_last_activity": {
            "name": "set_last_activity",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $id_user)\n  {\n    if (bbn\\str::is_uid($id_chat)\n      && bbn\\str::is_uid($id_user)\n      && $this->is_participant($id_chat, $id_user)\n      && $this->db->update('bbn_chats_users', ['last_activity' => x::microtime()], [\n        'id_chat' => $id_chat,\n        'id_user' => $id_user\n      ])\n    ) {\n      return $this->_set_state_hash($id_chat);\n    }\n    return null;\n  }",
            "startLine": 677,
            "endLine": 690,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_max_last_activity": {
            "name": "get_max_last_activity",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL)\n  {\n      && (bbn\\str::is_uid($id_user)\n        || \\is_null($id_user))\n    ) {\n      return $this->db->select_one('bbn_chats_users', 'MAX(last_activity)', [\n        'id_user' => $id_user ?: $this->user->get_id(),\n        'active' => 1\n      ]);\n    }\n  }",
            "startLine": 692,
            "endLine": 702,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "set_online": {
            "name": "set_online",
            "summary": "Sets the current user online",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_set_user_status(true);\n  }",
            "startLine": 708,
            "endLine": 711,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": []
        },
        "set_offline": {
            "name": "set_offline",
            "summary": "Sets the current user offline",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->_set_user_status(false);\n  }",
            "startLine": 717,
            "endLine": 720,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": []
        },
        "get_online_users": {
            "name": "get_online_users",
            "summary": "Gets the list of online users",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if($this->check()){\n      if ($ids = $this->users->online_list()){\n        $t = $this;\n        return array_values(array_filter($ids, function($id) use($t){\n          return $t->get_user_status($id);\n        }));\n      }\n    }\n    return [];\n  }",
            "startLine": 726,
            "endLine": 737,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_user_status": {
            "name": "get_user_status",
            "summary": "Gets the status of the current|given user",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id = NULL)\n  {\n    $ucfg = $this->user->get_class_cfg();\n    $cfg = json_decode($this->db->select_one($ucfg['table'], $ucfg['arch']['users']['cfg'], [$ucfg['arch']['users']['id'] => $id ?: $this->user->get_id()]), true);\n    return !isset($cfg['appui-chat']['online']) || !empty($cfg['appui-chat']['online']);\n  }",
            "startLine": 744,
            "endLine": 749,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "mute": {
            "name": "mute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 751,
            "endLine": 754,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "unmute": {
            "name": "unmute",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\n  }",
            "startLine": 756,
            "endLine": 759,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_messages": {
            "name": "get_messages",
            "summary": "Deprecated??",
            "description": "Returns messages from the given chat sent after $last.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>Returns messages from the given chat sent after $last.<\/p>"
                }
            ],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $last = NULL, $day = NULL)\n  {\n    $res = ['success' => false, 'last' => null, 'messages' => []];\n    if ($this->check()) {\n      $dir = bbn\\mvc::get_user_data_path($this->user->get_id(), 'appui-chat').$id_chat.'\/'.($day ?: date('Y-m-d'));\n      if ($this->is_participant($id_chat) && is_dir($dir)) {\n        $res['success'] = true;\n        $files = bbn\\file\\dir::get_files($dir);\n        foreach ($files as $file){\n          $time = (float)basename($file, '.msg');\n          if ((!$last || x::compare_floats($time, $last, '>')) && ($st = file_get_contents($file))) {\n            $res['messages'][] = json_decode(bbn\\util\\enc::decrypt($st), true);\n          }\n        }\n        if (isset($time)) {\n          $res['last'] = $time;\n        }\n      }\n    }\n    return $res;\n  }",
            "startLine": 770,
            "endLine": 790,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "last",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "day",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_old_messages": {
            "name": "get_old_messages",
            "summary": "Deprecated??",
            "description": "Returns messages from the given chat for a specific day.",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>Returns messages from the given chat for a specific day.<\/p>"
                }
            ],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_chat, $day)\n  {\n    return $this->get_messages($id_chat, null, $day);\n  }",
            "startLine": 800,
            "endLine": 803,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id_chat",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "day",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_active_chats": {
            "name": "get_active_chats",
            "summary": "Deprecated??",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\chat",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($chats = $this->get_chats()) {\n      $t =& $this;\n      $d = new \\DateTime();\n      $d->sub(new \\DateInterval('PT20M'));\n      if ($chats = array_filter(\n        $chats, function ($c) use ($d, $t) {\n          return ($m = $t->get_messages($c, $d->getTimestamp())) && !empty($m['messages']);\n        }\n      )) {\n        return array_map(\n          function ($c) use ($d, $t) {\n            return [\n              'id' => $c,\n              'messages' => ($m = $t->get_messages($c)) ? $m['messages'] : [],\n              'partecipants' => $t->get_participants($c),\n              'has_old' => $t->has_old_messages($c, $d->getTimestamp()-1)\n            ];\n          }, $chats\n        );\n      }\n    }\n    return [];\n  }",
            "startLine": 808,
            "endLine": 832,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": [],
    "constants": null,
    "numMethods": 45,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\db",
    "isSubclassOf": false,
    "defaultProperties": {
        "user": null,
        "users": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\appui",
    "shortName": "chat",
    "summary": "Class chat"
}