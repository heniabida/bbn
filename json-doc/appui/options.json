{
    "doc": {
        "description": "An all-in-one hierarchical options management system\nThis class allows to:\n---------------------\n* manage a **hierarchical** table of options\n* retrieve, edit, add, remove options\n* grab a whole tree\n* apply functions on group of options\n* add user-defined properties\n* set option configuration and applies it to all its children\n* And many more...",
        "tags": {
            "author": "Thomas Nabet <thomas.nabet@gmail.com>",
            "copyright": "BBN Solutions",
            "since": "Oct 28, 2015, 10:23:55 +0000",
            "category": "Appui x",
            "license": "http:\/\/opensource.org\/licenses\/MIT MIT",
            "version": "0.2"
        }
    },
    "name": "bbn\\appui\\options",
    "namespace": true,
    "traits": [
        "bbn\\models\\tts\\retriever",
        "bbn\\models\\tts\\cache",
        "bbn\\models\\tts\\dbconfig"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/appui\/options.php",
    "startLine": 33,
    "endLine": 2963,
    "contentConstructor": {
        "file": "bbn\\appui\\options",
        "returns": null
    },
    "methods": {
        "get_options": {
            "name": "get_options",
            "summary": "Returns the existing instance if there is",
            "description": "```php\n$opt = bbn\\appui\\options::get_options();\nbbn\\x::dump($opt);\n\/\/ (options)\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$opt = bbn\\appui\\options::get_options();\nbbn\\x::dump($opt);\n\/\/ (options)"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_instance();\n  }",
            "startLine": 295,
            "endLine": 298,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": []
        },
        "__construct": {
            "name": "__construct",
            "summary": "Constructor",
            "description": "```php\n$db = new bbn\\db();\n$opt = new bbn\\appui\\options($db);\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "$db = new bbn\\db();\n$opt = new bbn\\appui\\options($db);"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, array $cfg = [])\n  {\n    $this->init();\n    $this->_init_class_cfg($cfg);\n    self::retriever_init($this);\n    $this->cache_init();\n  }",
            "startLine": 311,
            "endLine": 317,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\db $db)\n  {\n  }",
                "startLine": 27,
                "endLine": 29,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "a database connection object"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "configuration array"
                }
            ]
        },
        "init": {
            "name": "init",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ( \\defined('BBN_APP_NAME') ){\n      $this->default = $this->db->select_one('bbn_options', 'id', [\n        'id_parent' => $this->root,\n        'code' => BBN_APP_NAME\n      ]);\n    }\n    if ( !$this->default ){\n      $this->default = $this->root;\n    }\n  }",
            "startLine": 319,
            "endLine": 330,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "delete_cache": {
            "name": "delete_cache",
            "summary": "Deletes the options' cache, specifically for an ID or globally",
            "description": "If specific, it will also destroy the cache of the parent\n```php\n$opt->option->delete_cache(25)\n\/\/ This is chainable\n\/\/ ->...\n```",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>If specific, it will also destroy the cache of the parent<\/p>"
                },
                {
                    "type": "code",
                    "content": "$opt->option->delete_cache(25)\n\/\/ This is chainable\n\/\/ ->..."
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id = NULL, $deep = false, $subs = false)\n  {\n    if ( bbn\\str::is_uid($id) ){\n      if ( ($deep || !$subs) && ($items = $this->items($id)) ){\n        foreach ( $items as $it ){\n          $this->delete_cache($it, $deep, true);\n        }\n      }\n      $this->cache_delete($id);\n      if ( !$subs ){\n        $this->cache_delete($this->get_id_parent($id));\n        $this->cache_delete($id);\n      }\n    }\n    else{\n      $this->cache_delete_all();\n    }\n    return $this;\n  }",
            "startLine": 346,
            "endLine": 364,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The option's ID"
                },
                {
                    "name": "deep",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If sets to true, children's cache will also be deleted"
                },
                {
                    "name": "subs",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "get_class_cfg": {
            "name": "get_class_cfg",
            "summary": "Returns the configuration array of the class with the table structure",
            "description": "```php\nbbn\\x::dump($opt->get_class_cfg());\n\/\narray [\n  'errors' => [\n  ],\n  'table' => 'bbn_options',\n  'cols' => [\n    'id' => 'id',\n    'id_parent' => 'id_parent',\n    'id_alias' => 'id_alias',\n    'text' => 'text',\n    'code' => 'code',\n    'value' => 'value',\n    'cfg' => 'cfg'\n  ]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_class_cfg());\n\/\narray [\n  'errors' => [\n  ],\n  'table' => 'bbn_options',\n  'cols' => [\n    'id' => 'id',\n    'id_parent' => 'id_parent',\n    'id_alias' => 'id_alias',\n    'text' => 'text',\n    'code' => 'code',\n    'value' => 'value',\n    'cfg' => 'cfg'\n  ]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->class_cfg;\n  }",
            "startLine": 390,
            "endLine": 393,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "from_code": {
            "name": "from_code",
            "summary": "Gets an option ID from diverse combinations of elements:",
            "description": "- A code or a serie of codes from the most specific to a child of the root\n- A code or a serie of codes and an id_parent where to find the last code\n- A code alone having $this->default as parent\n```php\nbbn\\x::dump($opt->from_code(25));\n\/\/ (int) 25\nbbn\\x::dump($opt->from_code('bbn_ide'));\n\/\/ (int) 25\nbbn\\x::dump($opt->from_code('test', 58));\n\/\/ (int) 42\nbbn\\x::dump($opt->from_code('test', 'users', 'bbn_ide'));\n\/\/ (int) 42\n```",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<ul>\n<li>A code or a serie of codes from the most specific to a child of the root<\/li>\n<li>A code or a serie of codes and an id_parent where to find the last code<\/li>\n<li>A code alone having $this-&gt;default as parent<\/li>\n<\/ul>"
                },
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->from_code(25));\n\/\/ (int) 25\nbbn\\x::dump($opt->from_code('bbn_ide'));\n\/\/ (int) 25\nbbn\\x::dump($opt->from_code('test', 58));\n\/\/ (int) 42\nbbn\\x::dump($opt->from_code('test', 'users', 'bbn_ide'));\n\/\/ (int) 42"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $args = \\func_get_args();\n    \/\/ An array can be used as parameters too\n    while ( isset($args[0]) && \\is_array($args[0]) ){\n      $args = $args[0];\n    }\n    \/\/ If we get an option array as param\n    if ( isset($args['id']) ){\n      return $args['id'];\n    }\n    $num = \\count($args);\n    if ( !$num ){\n      return null;\n    }\n    \/\/ False is accepted as id_parent for root\n    if ( ($num === 1) && ($args[0] === false) ){\n      return $this->default;\n    }\n    if ( bbn\\str::is_uid($args[0]) ){\n      if ( $num === 1 ){\n        return $args[0];\n      }\n      \/\/ If there are extra arguments with the ID we check that they correspond to its parent (that would be an extra check)\n      if ( $this->get_id_parent($args[0]) === $this->from_code(...\\array_slice($args, 1)) ){\n        return $args[0];\n      }\n    }\n    \/\/ We can use whatever alphanumeric value for code\n    if ( empty($args) || (!\\is_string($args[0]) && !is_numeric($args[0])) ){\n      return null;\n    }\n    \/\/ They must all have the same form at start with an id_parent as last argument\n    if ( !bbn\\str::is_uid(end($args)) ){\n      $args[] = $this->default;\n      $num++;\n    }\n    \/\/ At this stage we need at least one code and one id\n    if ( $num < 2 ){\n      return null;\n    }\n    \/\/ So the target has always the same name\n    \/\/ This is the full name with all the arguments plus the root\n    \/\/ eg ['c1', 'c2', 'c3', UID]\n    \/\/ UID-c3-c4-c5\n    \/\/ UID-c3-c4\n    \/\/ UID-c3\n    \/\/ Using the code(s) as argument(s) from now\n    $id_parent = array_pop($args);\n    $true_code = array_pop($args);\n    $enc_code = base64_encode($true_code);\n    \/\/ This is the cache name \n    \/\/ get_code_(base64(first_code))\n    $cache_name = 'get_code_'.$enc_code;\n    \/\/ UID-get_code_(base64(first_code))\n    if ( ($tmp = $this->cache_get($id_parent, $cache_name)) ){\n      if ( !count($args) ){\n        return $tmp;\n      }\n      $args[] = $tmp;\n      return $this->from_code(...$args);\n    }\n\n    $c =& $this->class_cfg;\n    \/** @var int|false $tmp *\/\n    if ( !$tmp && ($tmp = $this->db->select_one($c['table'], $c['arch']['options']['id'], [\n        $c['arch']['options']['id_parent'] => $id_parent,\n        $c['arch']['options']['code'] => $true_code\n      ])) ){\n      $this->cache_set($id_parent, $cache_name, $tmp);\n    }\n    if ( $tmp ){\n      if ( \\count($args) ){\n        $args[] = $tmp;\n        return $this->from_code(...$args);\n      }\n      return $tmp;\n\n    }\n\n    return null;\n  }",
            "startLine": 415,
            "endLine": 496,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "from_root_code": {
            "name": "from_root_code",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $def = $this->default;\n    $this->set_default($this->root);\n    $res = $this->from_code(...func_get_args());\n    $this->set_default($def);\n    return $res;\n  }",
            "startLine": 498,
            "endLine": 505,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "set_value": {
            "name": "set_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $value, $id)\n  {\n    if ( $this->exists($id) ){\n      $c =& $this->class_cfg;\n      $this->cache_delete($id);\n      return $this->db->update($c['table'],\n        [$c['arch']['options']['value'] => json_encode($value)],\n        [$c['arch']['options']['id'] => $id]\n      );\n    }\n    return null;\n  }",
            "startLine": 507,
            "endLine": 518,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "value",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_root": {
            "name": "get_root",
            "summary": "Returns the ID of the root option - mother of all",
            "description": "```php\nbbn\\x::dump($opt->get_root());\n\/\/ (int)0\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_root());\n\/\/ (int)0"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->root;\n  }",
            "startLine": 530,
            "endLine": 533,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "get_default": {
            "name": "get_default",
            "summary": "Returns the ID of the default option ($id_parent used when not provided)",
            "description": "```php\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 0\n$opt->set_default(5);\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 5\n$opt->set_default();\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 0\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_default());\n\/\/ (int) 0\n$opt->set_default(5);\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 5\n$opt->set_default();\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 0"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->default;\n  }",
            "startLine": 551,
            "endLine": 554,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "set_default": {
            "name": "set_default",
            "summary": "Makes an option act as if it was the root option",
            "description": "It will be the default $id_parent for options requested by code\n```php\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 0\n\/\/ Default root option\n$new = $opt->from_code('test');\n\/\/ false\n\/\/ Option not found\n$opt->set_default($new);\n\/\/ Default is now 5\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 5\nbbn\\x::dump($opt->from_code('test));\n\/\/ (int) 24\n\/\/ Returns the ID (24) of a child of option 5 with code 'test'\n$opt->set_default();\n\/\/ Default is back to root\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 0\n```",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>It will be the default $id_parent for options requested by code<\/p>"
                },
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_default());\n\/\/ (int) 0\n\/\/ Default root option\n$new = $opt->from_code('test');\n\/\/ false\n\/\/ Option not found\n$opt->set_default($new);\n\/\/ Default is now 5\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 5\nbbn\\x::dump($opt->from_code('test));\n\/\/ (int) 24\n\/\/ Returns the ID (24) of a child of option 5 with code 'test'\n$opt->set_default();\n\/\/ Default is back to root\nbbn\\x::dump($opt->get_default());\n\/\/ (int) 0"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($uid)\n  {\n    if ( $this->db->count('bbn_options', ['id' => $uid]) ){\n      $this->default = $uid;\n    }\n    return $this;\n  }",
            "startLine": 583,
            "endLine": 589,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "uid",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "items": {
            "name": "items",
            "summary": "Returns an array of the children's IDs of the given option sorted by order or text",
            "description": "```php\nbbn\\x::dump($opt->tree_ids(12));\n\/\/ array [40, 41, 42, 44, 45, 43, 46, 47]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->tree_ids(12));\n\/\/ array [40, 41, 42, 44, 45, 43, 46, 47]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      if ( ($res = $this->cache_get($id, __FUNCTION__)) !== false ){\n        return $res;\n      }\n      if ( ($cfg = $this->get_cfg($id)) !== false ){\n        \/\/ If not sortable returning an array ordered by text\n        $order = empty($cfg['sortable']) ?\n          [\n            $this->class_cfg['arch']['options']['text'] => 'ASC',\n            $this->class_cfg['arch']['options']['code'] => 'ASC',\n            $this->class_cfg['arch']['options']['id'] => 'ASC',\n          ] :\n          [\n            $this->class_cfg['arch']['options']['num'] => 'ASC',\n            $this->class_cfg['arch']['options']['text'] => 'ASC',\n            $this->class_cfg['arch']['options']['code'] => 'ASC',\n            $this->class_cfg['arch']['options']['id'] => 'ASC',\n          ];\n        $res = $this->db->get_column_values(\n          $this->class_cfg['table'],\n          $this->class_cfg['arch']['options']['id'], [\n          $this->class_cfg['arch']['options']['id_parent'] => $id,\n        ], $order);\n        $this->cache_set($id, __FUNCTION__, $res);\n        return $res;\n      }\n    }\n    return null;\n  }",
            "startLine": 602,
            "endLine": 632,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "native_option": {
            "name": "native_option",
            "summary": "Returns an option's row as stored in its original form in the database",
            "description": "```php\nbbn\\x::dump($opt->native_option(25));\n\/\narray [\n  'id' => 25,\n  'code' => \"bbn_ide\",\n  'text' => \"BBN's own IDE\",\n  'id_alias' => null,\n  'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\"\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->native_option(25));\n\/\narray [\n  'id' => 25,\n  'code' => \"bbn_ide\",\n  'text' => \"BBN's own IDE\",\n  'id_alias' => null,\n  'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\"\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      if ( $opt = $this->cache_get($id, __FUNCTION__) ){\n        return $opt;\n      }\n      $tab = $this->db->tsn($this->class_cfg['table']);\n      $opt = $this->get_row([\n        $this->db->cfn($this->class_cfg['arch']['options']['id'], $tab) => $id\n      ]);\n      if ( $opt ){\n        $this->cache_set($id, __FUNCTION__, $opt);\n        return $opt;\n      }\n    }\n    return null;\n  }",
            "startLine": 652,
            "endLine": 668,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "native_options": {
            "name": "native_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id = $this->from_code(\\func_get_args());\n    if ( bbn\\str::is_uid($id) ){\n      $res = [];\n      if ( $its = $this->items($id) ){\n        foreach ( $its as $it ){\n          $res[] = $this->native_option($it);\n        }\n      }\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 670,
            "endLine": 683,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "option_no_alias": {
            "name": "option_no_alias",
            "summary": "Returns an option's full content as an array without its values changed by id_alias",
            "description": "```php\nbbn\\x::dump($opt->option(25));\nbbn\\x::dump($opt->option('bbn_ide'));\nbbn\\x::dump($opt->option('TEST', 58));\nbbn\\x::dump($opt->option('test3', 'users', 'bbn_ide'));\n\/* Each would return an array of this form\narray [\n  'id' => 31,\n  'code' => \"bbn_ide\",\n  'text' => \"This is BBN's IDE\",\n  'id_alias' => 16,\n  'myIntProperty' => 56854,\n  'myTextProperty' => \"<h1>Hello\\nWorld<\/h1>\",\n  'myArrayProperty' => ['value1' => 1, 'value2' => 2]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->option(25));\nbbn\\x::dump($opt->option('bbn_ide'));\nbbn\\x::dump($opt->option('TEST', 58));\nbbn\\x::dump($opt->option('test3', 'users', 'bbn_ide'));\n\/* Each would return an array of this form\narray [\n  'id' => 31,\n  'code' => \"bbn_ide\",\n  'text' => \"This is BBN's IDE\",\n  'id_alias' => 16,\n  'myIntProperty' => 56854,\n  'myTextProperty' => \"<h1>Hello\\nWorld<\/h1>\",\n  'myArrayProperty' => ['value1' => 1, 'value2' => 2]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if (\n      bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) &&\n      ($opt = $this->native_option($id))\n    ){\n      $this->_set_value($opt);\n      return $opt;\n    }\n    return null;\n  }",
            "startLine": 708,
            "endLine": 718,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "get_value": {
            "name": "get_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if (\n      bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) &&\n      ($opt = $this->native_option($id)) &&\n      !empty($opt[$this->class_cfg['arch']['options']['value']]) &&\n      bbn\\str::is_json($opt[$this->class_cfg['arch']['options']['value']])\n    ){\n      return json_decode($opt[$this->class_cfg['arch']['options']['value']], true);\n    }\n    return null;\n  }",
            "startLine": 720,
            "endLine": 731,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "option": {
            "name": "option",
            "summary": "Returns an option's full content as an array",
            "description": "```php\nbbn\\x::dump($opt->option(25));\nbbn\\x::dump($opt->option('bbn_ide'));\nbbn\\x::dump($opt->option('TEST', 58));\nbbn\\x::dump($opt->option('test', 'users', 'bbn_ide'));\n\/* Each would return an array of this form\narray [\n  'id' => 25,\n  'code' => \"bbn_ide\",\n  'text' => \"This is BBN's IDE\",\n  'myIntProperty' => 56854,\n  'myTextProperty' => \"<h1>Hello\\nWorld<\/h1>\",\n  'myArrayProperty' => ['value1' => 1, 'value2' => 2]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->option(25));\nbbn\\x::dump($opt->option('bbn_ide'));\nbbn\\x::dump($opt->option('TEST', 58));\nbbn\\x::dump($opt->option('test', 'users', 'bbn_ide'));\n\/* Each would return an array of this form\narray [\n  'id' => 25,\n  'code' => \"bbn_ide\",\n  'text' => \"This is BBN's IDE\",\n  'myIntProperty' => 56854,\n  'myTextProperty' => \"<h1>Hello\\nWorld<\/h1>\",\n  'myArrayProperty' => ['value1' => 1, 'value2' => 2]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if (\n      bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) &&\n      ($opt = $this->native_option($id))\n    ){\n      $this->_set_value($opt);\n      $c =& $this->class_cfg['arch']['options'];\n      if ( bbn\\str::is_uid($opt[$c['id_alias']]) && ($opt['alias'] = $this->native_option($opt[$c['id_alias']])) ){\n        if ( $opt[$c['id_alias']] === $id ){\n          die(var_dump(\"Impossible to have the same ID as ALIAS, check out ID\", $id));\n        }\n        $this->_set_value($opt['alias']);\n      }\n      return $opt;\n    }\n    return null;\n  }",
            "startLine": 755,
            "endLine": 772,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "options": {
            "name": "options",
            "summary": "Returns an array of options in the form id => text",
            "description": "```php\nbbn\\x::dump($opt->options(12));\n\/\n[\n  21 => \"My option 21\",\n  22 => \"My option 22\",\n  25 => \"My option 25\",\n  27 => \"My option 27\"\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->options(12));\n\/\n[\n  21 => \"My option 21\",\n  22 => \"My option 22\",\n  25 => \"My option 25\",\n  27 => \"My option 27\"\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      \/\/var_dump(\"MY ID: $id\");\n      if ( $r = $this->cache_get($id, __FUNCTION__) ){\n        return $r;\n      }\n      $opt = $this->db->rselect_all($this->class_cfg['table'],\n        [$this->class_cfg['arch']['options']['id'], $this->class_cfg['arch']['options']['text']],\n        [$this->class_cfg['arch']['options']['id_parent'] => $id],\n        [$this->class_cfg['arch']['options']['text'] => 'ASC']\n      );\n      $res = [];\n      foreach ( $opt as $r ){\n        $res[$r[$this->class_cfg['arch']['options']['id']]] = $r[$this->class_cfg['arch']['options']['text']];\n      }\n      $this->cache_set($id, __FUNCTION__, $res);\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 791,
            "endLine": 811,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "options_by_code": {
            "name": "options_by_code",
            "summary": "Returns an array of children options in the form code => text",
            "description": "```php\nbbn\\x::dump($opt->options_by_code(12));\n\/\narray [\n  'opt21' => \"My option 21\",\n  'opt22' => \"My option 22\",\n  'opt25' => \"My option 25\",\n  'opt27' => \"My option 27\"\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->options_by_code(12));\n\/\narray [\n  'opt21' => \"My option 21\",\n  'opt22' => \"My option 22\",\n  'opt25' => \"My option 25\",\n  'opt27' => \"My option 27\"\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      if ( $r = $this->cache_get($id, __FUNCTION__) ){\n        return $r;\n      }\n      $opt = $this->db->select_all_by_keys($this->class_cfg['table'],\n        [$this->class_cfg['arch']['options']['code'], $this->class_cfg['arch']['options']['text']],\n        [$this->class_cfg['arch']['options']['id_parent'] => $id],\n        [$this->class_cfg['arch']['options']['text'] => 'ASC']\n      );\n      $this->cache_set($id, __FUNCTION__, $opt);\n      return $opt;\n    }\n    return null;\n  }",
            "startLine": 830,
            "endLine": 845,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "text_value_options": {
            "name": "text_value_options",
            "summary": "Returns an option's children array of id and text in a user-defined indexed array",
            "description": "```php\nbbn\\x::dump($opt->text_value_option(12, 'title'));\n\/* value comes from the default argument\narray [\n  ['title' => \"My option 21\", 'value' =>  21],\n  ['title' => \"My option 22\", 'value' =>  22],\n  ['title' => \"My option 25\", 'value' =>  25],\n  ['title' => \"My option 27\", 'value' =>  27]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->text_value_option(12, 'title'));\n\/* value comes from the default argument\narray [\n  ['title' => \"My option 21\", 'value' =>  21],\n  ['title' => \"My option 22\", 'value' =>  22],\n  ['title' => \"My option 25\", 'value' =>  25],\n  ['title' => \"My option 27\", 'value' =>  27]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id = NULL, $text = 'text', $value = 'value')\n  {\n    $res = [];\n    $id = $this->from_code(...func_get_args());\n    if ( $cfg = $this->get_cfg($id) ){\n      if ( !empty($cfg['show_code']) || !empty($cfg['schema']) ){\n        $opts = $this->full_options($id);\n      }\n      else{\n        $opts = $this->options($id);\n      }\n      $i = 0;\n      foreach ( $opts as $k => $o ){\n        $res[$i] = [\n          'text' => \\is_array($o) ? $o['text'] : $o,\n          'value' => \\is_array($o) ? $o['id'] : $k\n        ];\n        if ( !empty($cfg['show_code']) ){\n          $res[$i]['code'] = $o['code'];\n        }\n        if ( !empty($cfg['schema']) ){\n          if ( \\is_string($cfg['schema']) ){\n            $cfg['schema'] = json_decode($cfg['schema'], 1);\n          }\n          foreach ( $cfg['schema'] as $s ){\n            if ( !empty($s['field']) ){\n              $res[$i][$s['field']] = $o[$s['field']] ?? null;\n            }\n          }\n        }\n        $i++;\n      }\n    }\n    return $res;\n  }",
            "startLine": 866,
            "endLine": 900,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The option's ID or its code if it is children of {@link default}"
                },
                {
                    "name": "text",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "text",
                    "default_name": "",
                    "description": "The text field name for text column"
                },
                {
                    "name": "value",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "value",
                    "default_name": "",
                    "description": "The value field name for id column"
                }
            ]
        },
        "siblings": {
            "name": "siblings",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($id = $this->from_code(...func_get_args())) {\n      return array_filter($this->full_options($this->id_parent($id)), function($a) use ($id) {\n        return $a['id'] !== $id;\n      });\n    }\n    return null;\n  }",
            "startLine": 902,
            "endLine": 910,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "full_options": {
            "name": "full_options",
            "summary": "Returns an array of full options arrays for a given parent",
            "description": "```php\nbbn\\x::dump($opt->full_options(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->full_options(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $list = $this->items($id);\n      if ( \\is_array($list) ){\n        $res = [];\n        foreach ($list as $i){\n          $res[] = $this->option($i);\n        }\n        return $res;\n      }\n    }\n    return null;\n  }",
            "startLine": 929,
            "endLine": 942,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "code_options": {
            "name": "code_options",
            "summary": "Returns an array of full options arrays for a given parent",
            "description": "```php\nbbn\\x::dump($opt->full_options(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->full_options(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $list = $this->items($id);\n      if ( \\is_array($list) ){\n        $res = [];\n        foreach ($list as $i){\n          $o = $this->option($i);\n          $res[$o['code']] = [\n            'id' => $o['id'],\n            'code' => $o['code'],\n            'text' => $o['text']\n          ];\n        }\n        return $res;\n      }\n    }\n    return null;\n  }",
            "startLine": 961,
            "endLine": 979,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "code_ids": {
            "name": "code_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $list = $this->items($id);\n      if ( \\is_array($list) ){\n        $res = [];\n        foreach ($list as $i){\n          $o = $this->option($i);\n          $res[$o['code']] = $o['id'];\n        }\n        return $res;\n      }\n    }\n    return null;\n  }",
            "startLine": 981,
            "endLine": 995,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "get_aliases": {
            "name": "get_aliases",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $r = [];\n      foreach ( $this->db->rselect_all('bbn_options', [], ['id_alias' => $id]) as $d ){\n        $this->_set_value($d);\n        $r[] = $d;\n      }\n      return $r;\n    }\n    return null;\n  }",
            "startLine": 997,
            "endLine": 1008,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "full_options_by_id": {
            "name": "full_options_by_id",
            "summary": "Returns an id-indexed array of full options arrays for a given parent",
            "description": "```php\nbbn\\x::dump($opt->full_options(12));\n\/\narray [\n  21 => ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  22 => ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  25 => ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  27 => ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->full_options(12));\n\/\narray [\n  21 => ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  22 => ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  25 => ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  27 => ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $res = [];\n    if ( $opt = $this->full_options(\\func_get_args()) ){\n      $cf = $this->get_class_cfg();\n      foreach ( $opt as $o ){\n        $res[$o[$cf['arch']['options']['id']]] = $o;\n      }\n    }\n    return $opt === null ? $opt : $res;\n  }",
            "startLine": 1027,
            "endLine": 1037,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "full_options_by_code": {
            "name": "full_options_by_code",
            "summary": "Returns an id-indexed array of full options arrays for a given parent",
            "description": "```php\nbbn\\x::dump($opt->full_options(12));\n\/\narray [\n  21 => ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  22 => ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  25 => ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  27 => ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->full_options(12));\n\/\narray [\n  21 => ['id' => 21, 'id_parent' => 12, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  22 => ['id' => 22, 'id_parent' => 12, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  25 => ['id' => 25, 'id_parent' => 12, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  27 => ['id' => 27, 'id_parent' => 12, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $res = [];\n    if ( $opt = $this->full_options(\\func_get_args()) ){\n      $cf = $this->get_class_cfg();\n      foreach ( $opt as $o ){\n        $res[$o[$cf['arch']['options']['code']]] = $o;\n      }\n    }\n    return $opt === null ?: $res;\n  }",
            "startLine": 1056,
            "endLine": 1066,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "full_options_cfg": {
            "name": "full_options_cfg",
            "summary": "Returns an id-indexed array of full options with the config in arrays for a given parent",
            "description": "```php\nbbn\\x::dump($opt->full_options_cfg(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 12, 'num' => 1, 'title' => \"My option 21\", 'myProperty' =>  \"78%\", 'cfg' => ['sortable' => true, 'desc' => \"I am a description\"]],\n  ['id' => 22, 'id_parent' => 12, 'num' => 2, 'title' => \"My option 22\", 'myProperty' =>  \"26%\", 'cfg' => ['desc' => \"I am a description\"]],\n  ['id' => 25, 'id_parent' => 12, 'num' => 3, 'title' => \"My option 25\", 'myProperty' =>  \"50%\", 'cfg' => ['desc' => \"I am a description\"]],\n  ['id' => 27, 'id_parent' => 12, 'num' => 4, 'title' => \"My option 27\", 'myProperty' =>  \"40%\", 'cfg' => ['desc' => \"I am a description\"]]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->full_options_cfg(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 12, 'num' => 1, 'title' => \"My option 21\", 'myProperty' =>  \"78%\", 'cfg' => ['sortable' => true, 'desc' => \"I am a description\"]],\n  ['id' => 22, 'id_parent' => 12, 'num' => 2, 'title' => \"My option 22\", 'myProperty' =>  \"26%\", 'cfg' => ['desc' => \"I am a description\"]],\n  ['id' => 25, 'id_parent' => 12, 'num' => 3, 'title' => \"My option 25\", 'myProperty' =>  \"50%\", 'cfg' => ['desc' => \"I am a description\"]],\n  ['id' => 27, 'id_parent' => 12, 'num' => 4, 'title' => \"My option 27\", 'myProperty' =>  \"40%\", 'cfg' => ['desc' => \"I am a description\"]]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $o =& $this;\n      return $this->map(function($a)use($o){\n        $a['cfg'] = $o->get_cfg($a['id']);\n        return $a;\n      }, $id);\n    }\n    return null;\n  }",
            "startLine": 1085,
            "endLine": 1095,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "soptions": {
            "name": "soptions",
            "summary": "Returns an id-indexed array of options in the form id => text for a given grandparent",
            "description": "```php\nbbn\\x::dump($opt->soptions(12));\n\/\n[\n  21 => \"My option 21\",\n  22 => \"My option 22\",\n  25 => \"My option 25\",\n  27 => \"My option 27\",\n  31 => \"My option 31\",\n  32 => \"My option 32\",\n  35 => \"My option 35\",\n  37 => \"My option 37\"\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->soptions(12));\n\/\n[\n  21 => \"My option 21\",\n  22 => \"My option 22\",\n  25 => \"My option 25\",\n  27 => \"My option 27\",\n  31 => \"My option 31\",\n  32 => \"My option 32\",\n  35 => \"My option 35\",\n  37 => \"My option 37\"\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $r = [];\n      if ( $ids = $this->items($id) ){\n        foreach ( $ids as $i => $txt ){\n          $o = $this->options($i);\n          if ( \\is_array($o) ){\n            $r = bbn\\x::merge_arrays($r, $o);\n          }\n        }\n      }\n      return $r;\n    }\n    return null;\n  }",
            "startLine": 1118,
            "endLine": 1133,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "full_soptions": {
            "name": "full_soptions",
            "summary": "Returns an id-indexed array of full options arrays for a given parent",
            "description": "```php\nbbn\\x::dump($opt->full_soptions(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 20, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  ['id' => 22, 'id_parent' => 20, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  ['id' => 25, 'id_parent' => 20, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  ['id' => 27, 'id_parent' => 20, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"],\n  ['id' => 31, 'id_parent' => 30, 'title' => \"My option 31\", 'myProperty' =>  \"88%\"],\n  ['id' => 32, 'id_parent' => 30, 'title' => \"My option 32\", 'myProperty' =>  \"97%\"],\n  ['id' => 35, 'id_parent' => 30, 'title' => \"My option 35\", 'myProperty' =>  \"12%\"],\n  ['id' => 37, 'id_parent' => 30, 'title' => \"My option 37\", 'myProperty' =>  \"4%\"]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->full_soptions(12));\n\/\narray [\n  ['id' => 21, 'id_parent' => 20, 'title' => \"My option 21\", 'myProperty' =>  \"78%\"],\n  ['id' => 22, 'id_parent' => 20, 'title' => \"My option 22\", 'myProperty' =>  \"26%\"],\n  ['id' => 25, 'id_parent' => 20, 'title' => \"My option 25\", 'myProperty' =>  \"50%\"],\n  ['id' => 27, 'id_parent' => 20, 'title' => \"My option 27\", 'myProperty' =>  \"40%\"],\n  ['id' => 31, 'id_parent' => 30, 'title' => \"My option 31\", 'myProperty' =>  \"88%\"],\n  ['id' => 32, 'id_parent' => 30, 'title' => \"My option 32\", 'myProperty' =>  \"97%\"],\n  ['id' => 35, 'id_parent' => 30, 'title' => \"My option 35\", 'myProperty' =>  \"12%\"],\n  ['id' => 37, 'id_parent' => 30, 'title' => \"My option 37\", 'myProperty' =>  \"4%\"]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code($code)) ){\n      $r = [];\n      if ( $ids = $this->items($id) ){\n        foreach ( $ids as $id ){\n          $o = $this->full_options($id);\n          if ( \\is_array($o) ){\n            $r = bbn\\x::merge_arrays($r, $o);\n          }\n        }\n      }\n      return $r;\n    }\n    return null;\n  }",
            "startLine": 1156,
            "endLine": 1171,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "tree_ids": {
            "name": "tree_ids",
            "summary": "Returns a flat array of all IDs found in a hierarchical structure (except the top one)",
            "description": "The second parameter is private and should be left blank\n```php\nbbn\\x::dump($opt->tree_ids(12));\n\/\/ array [12, 21, 22, 25, 27, 31, 32, 35, 37, 40, 41, 42, 44, 45, 43, 46, 47]\n```",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>The second parameter is private and should be left blank<\/p>"
                },
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->tree_ids(12));\n\/\/ array [12, 21, 22, 25, 27, 31, 32, 35, 37, 40, 41, 42, 44, 45, 43, 46, 47]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, &$res = [])\n  {\n    if ( bbn\\str::is_uid($id) ){\n      if ( $its = $this->items($id) ){\n        foreach ($its as $it){\n          $this->tree_ids($it, $res);\n        }\n      }\n      $res[] = $id;\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 1186,
            "endLine": 1198,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The end\/target of the path"
                },
                {
                    "name": "res",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "The resulting array"
                }
            ]
        },
        "native_tree": {
            "name": "native_tree",
            "summary": "Returns a hierarchical structure as stored in its original form in the database",
            "description": "```php\nbbn\\x::dump($opt->native_tree(12));\n\/\narray [\n  'id' => 12,\n  'code' => \"bbn_ide\",\n  'text' => \"BBN's own IDE\",\n  'id_alias' => null,\n  'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n  'items' => [\n    [\n      'id' => 25,\n      'code' => \"test\",\n      'text' => \"Test\",\n      'id_alias' => null,\n      'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n    ],\n    [\n      'id' => 26,\n      'code' => \"test2\",\n      'text' => \"Test 2\",\n      'id_alias' => null,\n      'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n      'items' => [\n        [\n          'id' => 42,\n          'code' => \"test8\",\n          'text' => \"Test 8\",\n          'id_alias' => null,\n          'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n        ]\n      ]\n    ],\n  ]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->native_tree(12));\n\/\narray [\n  'id' => 12,\n  'code' => \"bbn_ide\",\n  'text' => \"BBN's own IDE\",\n  'id_alias' => null,\n  'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n  'items' => [\n    [\n      'id' => 25,\n      'code' => \"test\",\n      'text' => \"Test\",\n      'id_alias' => null,\n      'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n    ],\n    [\n      'id' => 26,\n      'code' => \"test2\",\n      'text' => \"Test 2\",\n      'id_alias' => null,\n      'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n      'items' => [\n        [\n          'id' => 42,\n          'code' => \"test8\",\n          'text' => \"Test 8\",\n          'id_alias' => null,\n          'value' => \"{\\\"myProperty\\\":\\\"My property's value\\\"}\",\n        ]\n      ]\n    ],\n  ]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id = $this->from_code(\\func_get_args());\n    if ( bbn\\str::is_uid($id) ){\n      if ( $res = $this->native_option($id) ){\n        $its = $this->items($id);\n        if ( \\count($its) ){\n          $res['items'] = [];\n          foreach ( $its as $it ){\n            $res['items'][] = $this->native_tree($it);\n          }\n        }\n        return $res;\n      }\n    }\n    return null;\n  }",
            "startLine": 1243,
            "endLine": 1259,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "tree": {
            "name": "tree",
            "summary": "Returns a simple hierarchical structure with just text, id and items",
            "description": "```php\nbbn\\x::dump($opt->tree(12));\n\/\narray [\n ['id' => 1, 'text' => 'Hello', 'items' => [\n   ['id' => 7, 'text' => 'Hello from inside'],\n   ['id' => 8, 'text' => 'Hello 2 from inside']\n ],\n[\n  ['id' => 1, 'text' => 'World']\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->tree(12));\n\/\narray [\n ['id' => 1, 'text' => 'Hello', 'items' => [\n   ['id' => 7, 'text' => 'Hello from inside'],\n   ['id' => 8, 'text' => 'Hello 2 from inside']\n ],\n[\n  ['id' => 1, 'text' => 'World']\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id = $this->from_code(\\func_get_args());\n    if ( bbn\\str::is_uid($id) && ($text = $this->text($id)) ){\n      $res = [\n        'id' => $id,\n        'text' => $text\n      ];\n      if ( $opts = $this->items($id) ){\n        $res['items'] = [];\n        foreach ( $opts as $o ){\n          if ( $t = $this->tree($o) ){\n            $res['items'][] = $t;\n          }\n        }\n      }\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 1280,
            "endLine": 1299,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "full_tree": {
            "name": "full_tree",
            "summary": "Returns a full hierarchical structure of options from a given option",
            "description": "```php\nbbn\\x::dump($opt->full_tree(12));\n\/\narray [\n  'id' => 12,\n  'code' => \"bbn_ide\",\n  'text' => \"BBN's own IDE\",\n  'id_alias' => null,\n  'myProperty' => \"My property's value\",\n  'items' => [\n    [\n      'id' => 25,\n      'code' => \"test\",\n      'text' => \"Test\",\n      'id_alias' => null,\n      'myProperty' => \"My property's value\",\n    ],\n    [\n      'id' => 26,\n      'code' => \"test2\",\n      'text' => \"Test 2\",\n      'id_alias' => null,\n      'myProperty' => \"My property's value\",\n      'items' => [\n        [\n          'id' => 42,\n          'code' => \"test8\",\n          'text' => \"Test 8\",\n          'id_alias' => null,\n          'myProperty' => \"My property's value\",\n        ]\n      ]\n    ],\n  ]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->full_tree(12));\n\/\narray [\n  'id' => 12,\n  'code' => \"bbn_ide\",\n  'text' => \"BBN's own IDE\",\n  'id_alias' => null,\n  'myProperty' => \"My property's value\",\n  'items' => [\n    [\n      'id' => 25,\n      'code' => \"test\",\n      'text' => \"Test\",\n      'id_alias' => null,\n      'myProperty' => \"My property's value\",\n    ],\n    [\n      'id' => 26,\n      'code' => \"test2\",\n      'text' => \"Test 2\",\n      'id_alias' => null,\n      'myProperty' => \"My property's value\",\n      'items' => [\n        [\n          'id' => 42,\n          'code' => \"test8\",\n          'text' => \"Test 8\",\n          'id_alias' => null,\n          'myProperty' => \"My property's value\",\n        ]\n      ]\n    ],\n  ]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if (\n      bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) &&\n      ($res = $this->option($id))\n    ){\n      $res['items'] = [];\n      if ( $opts = $this->items($id) ){\n        foreach ( $opts as $o ){\n          if ( $t = $this->full_tree($o) ){\n            $res['items'][] = $t;\n          }\n        }\n      }\n      else{\n        unset($res['items']);\n      }\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 1344,
            "endLine": 1364,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "get_cfg": {
            "name": "get_cfg",
            "summary": "Returns a formatted content of the cfg column as an array",
            "description": "Checks if the parent option has inheritance and sets array accordingly\nParent rules will be applied if with the following inheritance values:\n- 'children': if the option is the direct parent\n- 'cascade': any level of parenthood\n```php\nbbn\\x::dump($opt->get_cfg(25));\n\/\narray [\n  'sortable' => true,\n  'cascade' => true,\n  'id_alias' => null,\n]\n```",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>Checks if the parent option has inheritance and sets array accordingly\nParent rules will be applied if with the following inheritance values:<\/p>\n<ul>\n<li>'children': if the option is the direct parent<\/li>\n<li>'cascade': any level of parenthood<\/li>\n<\/ul>"
                },
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_cfg(25));\n\/\narray [\n  'sortable' => true,\n  'cascade' => true,\n  'id_alias' => null,\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      if ( $tmp = $this->cache_get($id, __METHOD__) ){\n        return $tmp;\n      }\n      $c =& $this->class_cfg;\n      $cfg = $this->db->select_one($c['table'], $c['arch']['options']['cfg'], [$c['arch']['options']['id'] => $id]);\n      $cfg = bbn\\str::is_json($cfg) ? json_decode($cfg, 1) : [];\n      \/\/ Looking for parent with inheritance\n      $parents = array_reverse($this->parents($id));\n      $last = \\count($parents) - 1;\n      foreach ( $parents as $i => $p ){\n        $parent_cfg = $this->db->select_one($c['table'], $c['arch']['options']['cfg'], [$c['arch']['options']['id'] => $p]);\n        $parent_cfg = bbn\\str::is_json($parent_cfg) ? json_decode($parent_cfg, 1) : [];\n        if ( !empty($parent_cfg['scfg']) && ($i === $last) ){\n          $cfg = array_merge((array)$cfg, $parent_cfg['scfg']);\n          $cfg['inherit_from'] = $p;\n          $cfg['frozen'] = 1;\n          break;\n        }\n        if ( !empty($parent_cfg['inheritance']) || !empty($parent_cfg['scfg']['inheritance']) ){\n          if (\n            (\n              ($i === $last) &&\n              (\n                ($parent_cfg['inheritance'] === 'children') ||\n                (!empty($parent_cfg['scfg']) && ($parent_cfg['scfg']['inheritance'] === 'children'))\n              )\n            ) ||\n            (\n              ($parent_cfg['inheritance'] === 'cascade') ||\n              (!empty($parent_cfg['scfg']) && ($parent_cfg['scfg']['inheritance'] === 'cascade'))\n            )\n          ){\n            \/\/ Keeping in the option cfg properties which don't exist in the parent\n            $cfg = array_merge((array)$cfg, $parent_cfg['scfg'] ?? $parent_cfg);\n            $cfg['inherit_from'] = $p;\n            $cfg['frozen'] = 1;\n            break;\n          }\n          else if (\n            !count($cfg) &&\n            (\n              ($parent_cfg['inheritance'] === 'default') ||\n              (!empty($parent_cfg['scfg']) && ($parent_cfg['scfg']['inheritance'] === 'default'))\n            )\n          ){\n            $cfg = $parent_cfg['scfg'] ?? $parent_cfg;\n            $cfg['inherit_from'] = $p;\n          }\n        }\n      }\n      $mandatories = ['show_code', 'show_alias', 'show_value', 'show_icon', 'sortable', 'allow_children', 'frozen'];\n      foreach ( $mandatories as $m ){\n        $cfg[$m] = empty($cfg[$m]) ? 0 : 1;\n      }\n      $cfg['id'] = $id;\n      $mandatories = ['desc', 'inheritance'];\n      foreach ( $mandatories as $m ){\n        $cfg[$m] = empty($cfg[$m]) ? '' : $cfg[$m];\n      }\n      $mandatories = ['controller', 'schema', 'form', 'default_value'];\n      foreach ( $mandatories as $m ){\n        $cfg[$m] = empty($cfg[$m]) ? null : $cfg[$m];\n      }\n      $this->cache_set($id, __METHOD__, $cfg);\n      return $cfg;\n    }\n    return null;\n  }",
            "startLine": 1386,
            "endLine": 1456,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "get_parent_cfg": {
            "name": "get_parent_cfg",
            "summary": "Returns a formatted content of the cfg column as an array from the option's parent",
            "description": "```php\nbbn\\x::dump($opt->get_parent_cfg(42));\n\/\n[\n  'sortable' => true,\n  'cascade' => true,\n  'id_alias' => null,\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_parent_cfg(42));\n\/\n[\n  'sortable' => true,\n  'cascade' => true,\n  'id_alias' => null,\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id = $this->from_code(\\func_get_args());\n    $id_parent = $this->get_id_parent($id);\n    if ( $id_parent !== false ){\n      return $this->get_cfg($id_parent);\n    }\n    return null;\n  }",
            "startLine": 1474,
            "endLine": 1482,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "parents": {
            "name": "parents",
            "summary": "Returns an array of id_parents from the option selected to root",
            "description": "```php\nbbn\\x::dump($opt->parents(48));\n\/\/ array [25, 12, 0]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->parents(48));\n\/\/ array [25, 12, 0]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id = $this->from_code(\\func_get_args());\n    if ( bbn\\str::is_uid($id) ){\n      $res = [];\n      while ( bbn\\str::is_uid($id_parent = $this->get_id_parent($id)) ){\n        if ( \\in_array($id_parent, $res, true) ){\n          break;\n        }\n        else{\n          if ( $id === $id_parent ){\n            break;\n          }\n          else{\n            $res[] = $id_parent;\n            $id = $id_parent;\n          }\n        }\n      }\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 1495,
            "endLine": 1517,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "sequence": {
            "name": "sequence",
            "summary": "Returns an array of id_parents from the selected root to the given id_option",
            "description": "```php\nbbn\\x::dump($opt->parents(48));\n\/\/ array [0, 12, 25, 48]\nbbn\\x::dump($opt->parents(48, 12));\n\/\/ array [12, 25, 48]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->parents(48));\n\/\/ array [0, 12, 25, 48]\nbbn\\x::dump($opt->parents(48, 12));\n\/\/ array [12, 25, 48]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_option, $id_root = NULL)\n  {\n    if ( null === $id_root ){\n      $id_root = self::root_hex;\n    }\n    if ( $this->exists($id_root) && ($parents = $this->parents($id_option)) ){\n      $res = [$id_option];\n      foreach ( $parents as $p ){\n        array_unshift($res, $p);\n        if ( $p === $id_root ){\n          return $res;\n        }\n      }\n    }\n    return null;\n  }",
            "startLine": 1533,
            "endLine": 1548,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_option",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "option"
                },
                {
                    "name": "id_root",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "root"
                }
            ]
        },
        "get_id_parent": {
            "name": "get_id_parent",
            "summary": "Returns the parent option's ID",
            "description": "```php\nbbn\\x::dump($opt->get_id_parent(48));\n\/\/ (int)25\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_id_parent(48));\n\/\/ (int)25"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) && ($o = $this->native_option($id)) ){\n      return $o['id_parent'];\n    }\n    return null;\n  }",
            "startLine": 1561,
            "endLine": 1567,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "parent": {
            "name": "parent",
            "summary": "Returns the parent's option as {@link option()}",
            "description": "```php\nbbn\\x::hdump($opt->parent(42));\n\/\narray [\n  'id' => 25,\n  'code' => \"bbn_ide\",\n  'text' => \"This is BBN's IDE\",\n  'myIntProperty' => 56854,\n  'myTextProperty' => \"<h1>Hello\\nWorld<\/h1>\",\n  'myArrayProperty' => ['value1' => 1, 'value2' => 2]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::hdump($opt->parent(42));\n\/\narray [\n  'id' => 25,\n  'code' => \"bbn_ide\",\n  'text' => \"This is BBN's IDE\",\n  'myIntProperty' => 56854,\n  'myTextProperty' => \"<h1>Hello\\nWorld<\/h1>\",\n  'myArrayProperty' => ['value1' => 1, 'value2' => 2]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if (\n      bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) &&\n      ($id_parent = $this->get_id_parent($id))\n    ){\n      return $this->option($id_parent);\n    }\n    return null;\n  }",
            "startLine": 1588,
            "endLine": 1597,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "is_parent": {
            "name": "is_parent",
            "summary": "Return true if row with ID $id_parent is parent at any level of row with ID $id",
            "description": "```php\nbbn\\x::dump($opt->is_parent(42, 12));\n\/\/ (bool) true\nbbn\\x::dump($opt->is_parent(42, 13));\n\/\/ (bool) false\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->is_parent(42, 12));\n\/\/ (bool) true\nbbn\\x::dump($opt->is_parent(42, 13));\n\/\/ (bool) false"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $id_parent)\n  {\n    \/\/ Preventing infinite loop\n    $done = [$id];\n    if ( bbn\\str::is_uid($id, $id_parent) ){\n      while ( $id = $this->get_id_parent($id) ){\n        if ( $id === $id_parent ){\n          return true;\n        }\n        if ( \\in_array($id, $done, true) ){\n          break;\n        }\n        $done[] = $id;\n      }\n    }\n    return false;\n  }",
            "startLine": 1613,
            "endLine": 1629,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_codes": {
            "name": "get_codes",
            "summary": "Returns an array of options in the form id => code",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $c =& $this->class_cfg['arch']['options'];\n      $opt = $this->db->rselect_all($this->class_cfg['table'], [$c['id'], $c['code']], [$c['id_parent'] => $id], [($this->is_sortable($id) ? $c['num'] : $c['code']) => 'ASC']);\n      $res = [];\n      foreach ( $opt as $r ){\n        $res[$r[$c['id']]] = $r[$c['code']];\n      }\n      return $res;\n    }\n    return [];\n  }",
            "startLine": 1649,
            "endLine": 1661,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "code": {
            "name": "code",
            "summary": "Returns an option's code",
            "description": "```php\nbbn\\x::dump($opt->code(12));\n\/\/ (string) bbn_ide\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->code(12));\n\/\/ (string) bbn_ide"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ( bbn\\str::is_uid($id) ){\n      return $this->db->select_one($this->class_cfg['table'], $this->class_cfg['arch']['options']['code'], [\n        $this->class_cfg['arch']['options']['id'] => $id\n      ]);\n    }\n    return null;\n  }",
            "startLine": 1674,
            "endLine": 1682,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The options' ID"
                }
            ]
        },
        "text": {
            "name": "text",
            "summary": "Returns an option's text",
            "description": "```php\nbbn\\x::dump($opt->text(12));\n\/\/ (string) BBN's own IDE\nbbn\\x::dump($opt->text('bbn_ide'));\n\/\/ (string) BBN's own IDE\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->text(12));\n\/\/ (string) BBN's own IDE\nbbn\\x::dump($opt->text('bbn_ide'));\n\/\/ (string) BBN's own IDE"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id = $this->from_code(\\func_get_args());\n    if ( bbn\\str::is_uid($id) ){\n      return $this->db->select_one($this->class_cfg['table'], $this->class_cfg['arch']['options']['text'], [\n        $this->class_cfg['arch']['options']['id'] => $id\n      ]);\n    }\n    return null;\n  }",
            "startLine": 1697,
            "endLine": 1706,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "alias": {
            "name": "alias",
            "summary": "Returns the id_alias relative to the given id_option",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ( bbn\\str::is_uid($id) ){\n      return $this->db->select_one($this->class_cfg['table'], $this->class_cfg['arch']['options']['id_alias'], [\n        $this->class_cfg['arch']['options']['id'] => $id\n      ]);\n    }\n    return null;\n  }",
            "startLine": 1714,
            "endLine": 1722,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "itext": {
            "name": "itext",
            "summary": "Returns translation of an option's text",
            "description": "```php\nbbn\\x::dump($opt->itext(12));\n\/\/ Result of _(\"BBN's own IDE\") with fr as locale\n\/\/ (string) L'IDE de BBN\nbbn\\x::dump($opt->itext('bbn_ide'));\n\/\/ (string) L'IDE de BBN\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->itext(12));\n\/\/ Result of _(\"BBN's own IDE\") with fr as locale\n\/\/ (string) L'IDE de BBN\nbbn\\x::dump($opt->itext('bbn_ide'));\n\/\/ (string) L'IDE de BBN"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id = $this->from_code(\\func_get_args());\n    if ( bbn\\str::is_uid($id) ){\n      $val = $this->db->select_one($this->class_cfg['table'], $this->class_cfg['arch']['options']['text'], [\n        $this->class_cfg['arch']['options']['id'] => $id\n      ]);\n      if ( $val ){\n        return _($val);\n      }\n    }\n    return null;\n  }",
            "startLine": 1738,
            "endLine": 1750,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "count": {
            "name": "count",
            "summary": "Returns the number of children for a given option",
            "description": "```php\nbbn\\x::dump($opt->count('bbn_ide'));\n\/\/ (int) 4\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->count('bbn_ide'));\n\/\/ (int) 4"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      return $this->db->count($this->class_cfg['table'], [$this->class_cfg['arch']['options']['id_parent'] => $id]);\n    }\n    return null;\n  }",
            "startLine": 1763,
            "endLine": 1769,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "options_by_alias": {
            "name": "options_by_alias",
            "summary": "Returns an array of options based on their id_alias",
            "description": "```php\nbbn\\x::dump($opt->options_by_alias(36));\n\/\narray [\n  ['id' => 18, 'text' => \"My option 1\", 'code' => \"opt1\", 'myProperty' => \"50%\"],\n  ['id' => 21, 'text' => \"My option 4\", 'code' => \"opt4\", 'myProperty' => \"60%\"],\n  ['id' => 23, 'text' => \"My option 6\", 'code' => \"opt6\", 'myProperty' => \"90%\"]\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->options_by_alias(36));\n\/\narray [\n  ['id' => 18, 'text' => \"My option 1\", 'code' => \"opt1\", 'myProperty' => \"50%\"],\n  ['id' => 21, 'text' => \"My option 4\", 'code' => \"opt4\", 'myProperty' => \"60%\"],\n  ['id' => 23, 'text' => \"My option 6\", 'code' => \"opt6\", 'myProperty' => \"90%\"]\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    $id_alias = $this->from_code(\\func_get_args());\n    if ( bbn\\str::is_uid($id_alias) ){\n      $where = [$this->class_cfg['arch']['options']['id_alias'] => $id_alias];\n      $list = $this->get_rows($where);\n      if ( \\is_array($list) ){\n        $res = [];\n        foreach ($list as $i ){\n          $res[] = $this->option($i);\n        }\n        return $res;\n      }\n    }\n    return null;\n  }",
            "startLine": 1787,
            "endLine": 1802,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "is_sortable": {
            "name": "is_sortable",
            "summary": "Tells if an option has its config set as sortable or no",
            "description": "```php\nbbn\\x::dump($opt->is_sortable(12));\n\/\/ (bool) false\nbbn\\x::dump($opt->is_sortable(21));\n\/\/ (bool) true\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->is_sortable(12));\n\/\/ (bool) false\nbbn\\x::dump($opt->is_sortable(21));\n\/\/ (bool) true"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n    if ( bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) ){\n      $cfg = $this->get_cfg($id);\n      return empty($cfg['sortable']) ? false : true;\n    }\n    return null;\n  }",
            "startLine": 1817,
            "endLine": 1824,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "get_path_array": {
            "name": "get_path_array",
            "summary": "Returns an array of codes for each option between $id and $root without $root's code",
            "description": "```php\nbbn\\x::dump($opt->get_path_array(48, 12));\n\/\/ array [\"path\", \"to\", \"my\", \"option\"]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_path_array(48, 12));\n\/\/ array [\"path\", \"to\", \"my\", \"option\"]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $root = NULL)\n  {\n    if ( !isset($root) ){\n      $root = $this->get_default();\n    }\n    if ( $code = $this->code($id) ){\n      $parts = [];\n      while ( $id && ($id !== $root) ){\n        array_unshift($parts, $code);\n        if ( !($id = $this->get_id_parent($id)) ){\n          return null;\n        }\n        $code = $this->code($id);\n      }\n      return $parts;\n    }\n    return null;\n  }",
            "startLine": 1838,
            "endLine": 1855,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The end\/target of the path"
                },
                {
                    "name": "root",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The start\/origin of the path, {@link get_default()} if is null"
                }
            ]
        },
        "from_path": {
            "name": "from_path",
            "summary": "Returns the closest ID option from a _path_ of codes, with separator and optional id_parent",
            "description": "```php\nbbn\\x::dump(\"bbn_ide|test1|test8\"));\n\/\/ (int) 36\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump(\"bbn_ide|test1|test8\"));\n\/\/ (int) 36"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path, $sep = '|', $parent = NULL)\n  {\n    if ( !empty($sep) ){\n      $parts = explode($sep, $path);\n    }\n    else{\n      $parts = [$path];\n    }\n    if ( null === $parent ){\n      $parent = $this->default;\n    }\n    foreach ( $parts as $p ){\n      if ( !($parent = $this->from_code($p, $parent)) ){\n        break;\n      }\n    }\n    return $parent ?: null;\n  }",
            "startLine": 1870,
            "endLine": 1887,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The path made of a concatenation of path and $sep until the target"
                },
                {
                    "name": "sep",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "|",
                    "default_name": "",
                    "description": "The separator"
                },
                {
                    "name": "parent",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "An optional id_parent, {@link get_default()} otherwise"
                }
            ]
        },
        "to_path": {
            "name": "to_path",
            "summary": "Concatenates the codes and separator $sep of a a line of options",
            "description": "```php\nbbn\\x::dump($opt->to_path(48, '|', 12)\n\/\/ (string) path|to|my|option\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->to_path(48, '|', 12)\n\/\/ (string) path|to|my|option"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $sep = '|', $parent = NULL)\n  {\n    if ( $parts = $this->get_path_array($id, $parent) ){\n      return implode($sep, $parts);\n    }\n    return null;\n  }",
            "startLine": 1902,
            "endLine": 1908,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The end\/target of the path"
                },
                {
                    "name": "sep",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "|",
                    "default_name": "",
                    "description": "The separator"
                },
                {
                    "name": "parent",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The start\/origin of the path"
                }
            ]
        },
        "add": {
            "name": "add",
            "summary": "Creates a new option or a new hierarchy by adding row(s) in the options' table",
            "description": "```php\nbbn\\x::dump($opt->add([\n  'id_parent' => $opt->from_code('bbn_ide'),\n  'text' => 'My new option',\n  'code' => 'new_opt',\n  'myProperty' => 'my value'\n]));\n\/\/ (int) 49  New ID\nbbn\\x::dump($opt->add([\n  'id_parent' => $opt->from_code('bbn_ide'),\n  'text' => 'My new option',\n  'code' => 'new_opt',\n  'myProperty' => 'my value'\n  'items' => [\n    [\n      'code' => \"test\",\n      'text' => \"Test\",\n      'myProperty' => \"My property's value\",\n    ],\n    [\n      'code' => \"test2\",\n      'text' => \"Test 2\",\n      'myProperty' => \"My property's value\",\n      'items' => [\n        [\n          'code' => \"test8\",\n          'text' => \"Test 8\",\n        ]\n      ]\n    ]\n  ]\n], true, true));\n\/\/ (int) 4 Number of inserted\/modified rows\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->add([\n  'id_parent' => $opt->from_code('bbn_ide'),\n  'text' => 'My new option',\n  'code' => 'new_opt',\n  'myProperty' => 'my value'\n]));\n\/\/ (int) 49  New ID\nbbn\\x::dump($opt->add([\n  'id_parent' => $opt->from_code('bbn_ide'),\n  'text' => 'My new option',\n  'code' => 'new_opt',\n  'myProperty' => 'my value'\n  'items' => [\n    [\n      'code' => \"test\",\n      'text' => \"Test\",\n      'myProperty' => \"My property's value\",\n    ],\n    [\n      'code' => \"test2\",\n      'text' => \"Test 2\",\n      'myProperty' => \"My property's value\",\n      'items' => [\n        [\n          'code' => \"test8\",\n          'text' => \"Test 8\",\n        ]\n      ]\n    ]\n  ]\n], true, true));\n\/\/ (int) 4 Number of inserted\/modified rows"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $it, $force = false, $return_num = false)\n  {\n    $items = !empty($it['items']) && \\is_array($it['items']) ? $it['items'] : false;\n    $id = null;\n    if ( $this->_prepare($it) ){\n      $c =& $this->class_cfg['arch']['options'];   \n      if (\n        $force &&\n        (null !== $it[$c['code']]) &&\n        ($id = $this->db->select_one($this->class_cfg['table'], $c['id'], [\n          $c['id_parent'] => $it[$c['id_parent']],\n          $c['code'] => $it[$c['code']]\n        ]))\n      ){\n        \n        $res = $this->db->update($this->class_cfg['table'], [\n          $c['text'] => $it[$c['text']],\n          $c['id_alias'] => $it[$c['id_alias']],\n          $c['value'] => $it[$c['value']],\n          $c['num'] => $it[$c['num']],\n          $c['cfg'] => \\is_array($it[$c['cfg']]) ? json_encode($it[$c['cfg']]) : $it[$c['cfg']]\n        ], [\n          $c['id'] => $id\n        ]);\n      }\n      \n      $values = [\n        $c['id_parent'] => $it[$c['id_parent']],\n        $c['text'] => $it[$c['text']],\n        $c['code'] => empty($it[$c['code']]) ? null : $it[$c['code']],\n        $c['id_alias'] => $it[$c['id_alias']],\n        $c['value'] => $it[$c['value']],\n        $c['num'] => $it[$c['num']],\n        $c['cfg'] => \\is_array($it[$c['cfg']]) ? json_encode($it[$c['cfg']]) : $it[$c['cfg']]\n      ];\n      if (!empty($it['id'])) {\n        $values['id'] = $it['id'];\n      }\n      if (\n        !$id &&\n        ($res = $this->db->insert($this->class_cfg['table'], $values))\n      ){\n        $id = $this->db->last_id();\n      }\n      if ( $res ){\n        $this->delete_cache($id);\n      }\n      if ( $items && bbn\\str::is_uid($id) ){\n        foreach ( $items as $item ){\n          $item['id_parent'] = $id;\n          $res += (int)$this->add($item, $force, $return_num);\n        }\n      }\n    }\n    return $return_num ? $res : $id;\n  }",
            "startLine": 1953,
            "endLine": 2008,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "it",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The option configuration"
                },
                {
                    "name": "force",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "Determines if the option should be updated if it already exists"
                },
                {
                    "name": "return_num",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "num If set to true the function will return the number of rows inserted otherwise the ID of the newly created option"
                }
            ]
        },
        "set": {
            "name": "set",
            "summary": "Updates an option's row (without changing cfg)",
            "description": "```php\nbbn\\x::dump($opt->set(12, [\n  'id_parent' => $opt->from_code('bbn_ide'),\n  'text' => 'My new option',\n  'code' => 'new_opt',\n  'myProperty' => 'my value'\n  'cfg' => [\n    'sortable' => true,\n    'Description' => \"I am a cool option\"\n  ]\n]);\n\/\/ (int) 1\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->set(12, [\n  'id_parent' => $opt->from_code('bbn_ide'),\n  'text' => 'My new option',\n  'code' => 'new_opt',\n  'myProperty' => 'my value'\n  'cfg' => [\n    'sortable' => true,\n    'Description' => \"I am a cool option\"\n  ]\n]);\n\/\/ (int) 1"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, array $cfg)\n  {\n      if (isset($cfg['id'])) {\n        unset($cfg['id']);\n      }\n      $c =& $this->class_cfg['arch']['options'];\n      \/\/ id_parent cannot be edited this way\n      if ( $res = $this->db->update($this->class_cfg['table'], [\n        $c['text'] => $cfg[$c['text']],\n        $c['code'] => !empty($cfg[$c['code']]) ? $cfg[$c['code']] : null,\n        $c['id_alias'] => !empty($cfg[$c['id_alias']]) ? $cfg[$c['id_alias']] : null,\n        $c['value'] => $cfg[$c['value']]\n      ], [\n        $c['id'] => $id\n      ]) ){\n        $this->delete_cache($id);\n        return $res;\n      }\n      return 0;\n    }\n    return null;\n  }",
            "startLine": 2031,
            "endLine": 2052,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "remove": {
            "name": "remove",
            "summary": "Deletes a row from the options table, deletes the cache and fix order if needed",
            "description": "```php\nbbn\\x::dump($opt->remove(12));\n\/\/ (int) 12 Number of options deleted\nbbn\\x::dump($opt->remove(12));\n\/\/ (bool) false The option doesn't exist anymore\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->remove(12));\n\/\/ (int) 12 Number of options deleted\nbbn\\x::dump($opt->remove(12));\n\/\/ (bool) false The option doesn't exist anymore"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code)\n  {\n      bbn\\str::is_uid($id = $this->from_code(...\\func_get_args())) &&\n      ($id !== $this->default) &&\n      ($id !== $this->root) &&\n      bbn\\str::is_uid($id_parent = $this->get_id_parent($id))\n    ){\n      $num = 0;\n      if ( $items = $this->items($id) ){\n        foreach ( $items as $it ){\n          $num += (int)$this->remove($it);\n        }\n      }\n      $this->delete_cache($id);\n      $num += (int)$this->db->delete($this->class_cfg['table'], [\n        $this->class_cfg['arch']['options']['id'] => $id\n      ]);\n      if ( $this->is_sortable($id_parent) ){\n        $this->fix_order($id_parent);\n      }\n      return $num;\n    }\n    return null;\n  }",
            "startLine": 2067,
            "endLine": 2090,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "remove_full": {
            "name": "remove_full",
            "summary": "Deletes a row from the options table, deletes the cache and fix order if needed",
            "description": "```php\nbbn\\x::dump($opt->remove(12));\n\/\/ (int) 12 Number of options deleted\nbbn\\x::dump($opt->remove(12));\n\/\/ (bool) false The option doesn't exist anymore\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->remove(12));\n\/\/ (int) 12 Number of options deleted\nbbn\\x::dump($opt->remove(12));\n\/\/ (bool) false The option doesn't exist anymore"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code)\n  {\n      bbn\\str::is_uid($id = $this->from_code(\\func_get_args())) &&\n      ($id !== $this->default) &&\n      ($id !== $this->root)\n    ){\n      $res= 0;\n      $this->delete_cache($id);\n      $all = $this->tree_ids($id);\n      \n      $has_history = history::is_enabled() && history::is_linked($this->class_cfg['table']);\n      foreach ( array_reverse($all) as $a ){\n        if ($has_history) {\n          $res += (int)$this->db->delete('bbn_history_uids', ['bbn_uid' => $a]);\n        }\n        else{\n          $res += (int)$this->db->delete($this->class_cfg['table'], [$this->class_cfg['arch']['options']['id'] => $a]);\n        }\n      }\n      $this->delete_cache($id);\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 2105,
            "endLine": 2128,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()} or the uid"
                }
            ]
        },
        "set_alias": {
            "name": "set_alias",
            "summary": "Sets the alias of an option",
            "description": "```php\nbbn\\x::dump($opt->set_alias(26, 32));\n\/\/ (int) 1\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->set_alias(26, 32));\n\/\/ (int) 1"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $alias = NULL)\n  {\n      $this->class_cfg['arch']['options']['id_alias'] => $alias ?: null\n    ], [\n      $this->class_cfg['arch']['options']['id'] => $id\n    ]);\n    if ( $res ){\n      $this->delete_cache($id);\n    }\n    return $res;\n  }",
            "startLine": 2142,
            "endLine": 2152,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The ID of the option to be updated"
                },
                {
                    "name": "alias",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The alias' option ID"
                }
            ]
        },
        "set_text": {
            "name": "set_text",
            "summary": "Sets the text of an option",
            "description": "```php\nbbn\\x::dump($opt->set_text(26, \"Hello world!\"));\n\/\/ (int) 1\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->set_text(26, \"Hello world!\"));\n\/\/ (int) 1"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $text)\n  {\n      $this->class_cfg['arch']['options']['text'] => $text\n    ], [\n      $this->class_cfg['arch']['options']['id'] => $id\n    ]);\n    if ( $res ){\n      $this->delete_cache($id);\n    }\n    return $res;\n  }",
            "startLine": 2166,
            "endLine": 2176,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The ID of the option to be updated"
                },
                {
                    "name": "text",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The new text"
                }
            ]
        },
        "set_code": {
            "name": "set_code",
            "summary": "Sets the code of an option",
            "description": "```php\nbbn\\x::dump($opt->set_code(26, \"HWD\"));\n\/\/ (int) 1\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->set_code(26, \"HWD\"));\n\/\/ (int) 1"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $code = NULL)\n  {\n      $this->class_cfg['arch']['options']['code'] => $code ?: null\n    ], [\n      $this->class_cfg['arch']['options']['id'] => $id\n    ]);\n  }",
            "startLine": 2190,
            "endLine": 2196,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The ID of the option to be updated"
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The new code"
                }
            ]
        },
        "order": {
            "name": "order",
            "summary": "Returns the order of an option. Updates it if a position is given, and cascades",
            "description": "```php\nbbn\\x::dump($opt->items(20));\n\/\/ [21, 22, 25, 27]\nbbn\\x::dump($opt->order(25));\n\/\/ (int) 3\nbbn\\x::dump($opt->order(25, 2));\n\/\/ (int) 2\nbbn\\x::dump($opt->items(20));\n\/\/ [21, 25, 22, 27]\nbbn\\x::dump($opt->order(25));\n\/\/ (int) 2\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->items(20));\n\/\/ [21, 22, 25, 27]\nbbn\\x::dump($opt->order(25));\n\/\/ (int) 3\nbbn\\x::dump($opt->order(25, 2));\n\/\/ (int) 2\nbbn\\x::dump($opt->items(20));\n\/\/ [21, 25, 22, 27]\nbbn\\x::dump($opt->order(25));\n\/\/ (int) 2"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $pos = NULL)\n  {\n      ($parent = $this->get_id_parent($id)) &&\n      $this->is_sortable($parent)\n    ){\n      $cf = $this->class_cfg;\n      $old = $this->db->select_one($cf['table'], $cf['arch']['options']['num'], [\n        $cf['arch']['options']['id'] => $id\n      ]);\n      if ( $pos && ($old != $pos) ){\n        $its = $this->items($parent);\n        $past_new = false;\n        $past_old = false;\n        $p = 1;\n        foreach ( $its as $id_option ){\n          $upd = false;\n          \/\/ Fixing order problem\n          if ( $past_old && !$past_new ){\n            $upd = [$cf['arch']['options']['num'] => $p-1];\n          }\n          else if ( !$past_old && $past_new ){\n            $upd = [$cf['arch']['options']['num'] => $p+1];\n          }\n          if ( $id === $id_option ){\n            $upd = [$cf['arch']['options']['num'] => $pos];\n            $past_old = 1;\n          }\n          else if ( $p === $pos ){\n            $upd = [$cf['arch']['options']['num'] => $p + ($pos > $old ? -1 : 1)];\n            $past_new = 1;\n          }\n          if ( $upd ){\n            $this->db->update($cf['table'], $upd, [\n              $cf['arch']['options']['id'] => $id_option\n            ]);\n          }\n          if ( $past_new && $past_old ){\n            break;\n          }\n          $p++;\n        }\n        $this->delete_cache($parent, true);\n        $this->delete_cache($id);\n        return $pos;\n      }\n      return $old;\n    }\n    return null;\n  }",
            "startLine": 2218,
            "endLine": 2266,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The ID of the option to update"
                },
                {
                    "name": "pos",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The new position"
                }
            ]
        },
        "set_prop": {
            "name": "set_prop",
            "summary": "Updates option's properties derivated from the value column",
            "description": "```php\nbbn\\x::dump($opt->set_prop(12, 'myProperty', \"78%\"));\n\/\/ (int) 1\nbbn\\x::dump($opt->set_prop(12, ['myProperty' => \"78%\"]));\n\/\/ (int) 0 Already updated, no change done\nbbn\\x::dump($opt->set_prop(9654, ['myProperty' => \"78%\"]));\n\/\/ (bool) false Option not found\nbbn\\x::dump($opt->set_prop(12, ['myProperty' => \"78%\", 'myProperty2' => \"42%\"]));\n\/\/ (int) 1\nbbn\\x::dump($opt->option(12));\n\/\nBefore\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myOtherProperty' => \"Hello\",\n]\nAfter\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myProperty' => \"78%\",\n  'myProperty2' => \"42%\",\n  'myOtherProperty' => \"Hello\",\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->set_prop(12, 'myProperty', \"78%\"));\n\/\/ (int) 1\nbbn\\x::dump($opt->set_prop(12, ['myProperty' => \"78%\"]));\n\/\/ (int) 0 Already updated, no change done\nbbn\\x::dump($opt->set_prop(9654, ['myProperty' => \"78%\"]));\n\/\/ (bool) false Option not found\nbbn\\x::dump($opt->set_prop(12, ['myProperty' => \"78%\", 'myProperty2' => \"42%\"]));\n\/\/ (int) 1\nbbn\\x::dump($opt->option(12));\n\/\nBefore\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myOtherProperty' => \"Hello\",\n]\nAfter\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myProperty' => \"78%\",\n  'myProperty2' => \"42%\",\n  'myOtherProperty' => \"Hello\",\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $prop)\n  {\n      $args = \\func_get_args();\n      if ( \\is_string($prop) && isset($args[2]) ){\n        $prop = [$prop => $args[2]];\n      }\n      if ( \\is_array($prop) ){\n        \\bbn\\x::log([$o, $prop], \"set_prop\");\n        $change = false;\n        foreach ( $prop as $k => $v ){\n          \/\/if ( !\\in_array($k, $this->class_cfg['arch']['options']) ){\n            if ( !isset($o[$k]) || ($o[$k] !== $v) ){\n              $change = true;\n              $o[$k] = $v;\n            }\n          \/\/}\n        }\n        if ( $change ){\n          return $this->set($id, $o);\n        }\n      }\n      return 0;\n    }\n    return null;\n  }",
            "startLine": 2306,
            "endLine": 2330,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The option to update's ID"
                },
                {
                    "name": "prop",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "An array of properties and values, or a string with the property's name adding as next argument the new value"
                }
            ]
        },
        "get_prop": {
            "name": "get_prop",
            "summary": "Get an option's single property",
            "description": "```php\nbbn\\x::dump($opt->get_prop(12, 'myProperty'));\n\/\/ (int) 78\nbbn\\x::dump($opt->set_prop(12, ['myProperty' => \"78%\"]));\n\/\/ (int) 1\nbbn\\x::dump($opt->get_prop(12, 'myProperty'));\n\/\/ (string) \"78%\"\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_prop(12, 'myProperty'));\n\/\/ (int) 78\nbbn\\x::dump($opt->set_prop(12, ['myProperty' => \"78%\"]));\n\/\/ (int) 1\nbbn\\x::dump($opt->get_prop(12, 'myProperty'));\n\/\/ (string) \"78%\""
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $prop)\n  {\n      return $o[$prop];\n    }\n    return null;\n  }",
            "startLine": 2348,
            "endLine": 2353,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The option from which getting the property"
                },
                {
                    "name": "prop",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The property's name"
                }
            ]
        },
        "unset_prop": {
            "name": "unset_prop",
            "summary": "Unset option's properties taken from the value column",
            "description": "```php\nbbn\\x::dump($opt->unset_prop(12, 'myProperty'));\n\/\/ (int) 1\nbbn\\x::dump($opt->unset_prop(12, ['myProperty']));\n\/\/ (int) 0 Already updated, no change done\nbbn\\x::dump($opt->unset_prop(9654, ['myProperty']));\n\/\/ (bool) false Option not found\nbbn\\x::dump($opt->unset_prop(12, ['myProperty', 'myProperty2']));\n\/\/ (int) 1\nbbn\\x::dump($opt->option(12));\n\/\nBefore\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myProperty' => \"78%\",\n  'myProperty2' => \"42%\",\n  'myOtherProperty' => \"Hello\",\n]\nAfter\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myOtherProperty' => \"Hello\",\n]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->unset_prop(12, 'myProperty'));\n\/\/ (int) 1\nbbn\\x::dump($opt->unset_prop(12, ['myProperty']));\n\/\/ (int) 0 Already updated, no change done\nbbn\\x::dump($opt->unset_prop(9654, ['myProperty']));\n\/\/ (bool) false Option not found\nbbn\\x::dump($opt->unset_prop(12, ['myProperty', 'myProperty2']));\n\/\/ (int) 1\nbbn\\x::dump($opt->option(12));\n\/\nBefore\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myProperty' => \"78%\",\n  'myProperty2' => \"42%\",\n  'myOtherProperty' => \"Hello\",\n]\nAfter\narray [\n  'id' => 12,\n  'id_parent' => 0,\n  'code' => 'bbn_ide',\n  'text' => 'BBN's own IDE',\n  'myOtherProperty' => \"Hello\",\n]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $prop)\n  {\n      if ( \\is_string($prop) ){\n        $prop = [$prop];\n      }\n      if ( \\is_array($prop) ){\n        $change = false;\n        foreach ( $prop as $k ){\n          if ( !\\in_array($k, $this->class_cfg['arch']['options'], true) ){\n            $change = true;\n            unset($o[$k]);\n          }\n        }\n        if ( $change ){\n          return $this->set($id, $o);\n        }\n      }\n    }\n    return null;\n  }",
            "startLine": 2393,
            "endLine": 2412,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The option to update's ID"
                },
                {
                    "name": "prop",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "An array of properties and values, or a string with the property's name adding as next argument the new value"
                }
            ]
        },
        "set_cfg": {
            "name": "set_cfg",
            "summary": "Sets the cfg column of a given option in the table through an array",
            "description": "```php\nbbn\\x::dump($opt->get_cfg('bbn_ide'));\n\/\/ array ['sortable' => true]\nbbn\\x::dump($opt->set_cfg(12, [\n  'desc' => \"I am a cool option\",\n  'sortable' => true\n]));\n\/\/ (int) 1\nbbn\\x::dump($opt->get_cfg('bbn_ide'));\n\/\/ array ['desc' => \"I am a cool option\", 'sortable' => true];\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_cfg('bbn_ide'));\n\/\/ array ['sortable' => true]\nbbn\\x::dump($opt->set_cfg(12, [\n  'desc' => \"I am a cool option\",\n  'sortable' => true\n]));\n\/\/ (int) 1\nbbn\\x::dump($opt->get_cfg('bbn_ide'));\n\/\/ array ['desc' => \"I am a cool option\", 'sortable' => true];"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, array $cfg)\n  {\n      if ( isset($cfg['inherited_from']) ){\n        unset($cfg['inherited_from']);\n      }\n      $old_cfg = $this->get_cfg($id);\n      $c =& $this->class_cfg;\n      if ( $res = $this->db->update($c['table'], [\n        $c['arch']['options']['cfg'] => $cfg ? json_encode($cfg) : null\n      ], [\n        $c['arch']['options']['id'] => $id\n      ]) ){\n        if ( ($old_cfg['inheritance'] ?? null) !== ($cfg['inheritance'] ?? null) ){\n          $this->delete_cache($id, true);\n        }\n        else{\n          $this->delete_cache($id);\n        }\n        return $res;\n      }\n      return 0;\n    }\n    return null;\n  }",
            "startLine": 2433,
            "endLine": 2456,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The option ID"
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The config value"
                }
            ]
        },
        "unset_cfg": {
            "name": "unset_cfg",
            "summary": "Unsets the cfg column (sets it to null)",
            "description": "```php\nbbn\\x::dump($opt->get_cfg('bbn_ide'));\n\/\/ array ['desc' => \"I am a cool option\", 'sortable' => true];\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->get_cfg('bbn_ide'));\n\/\/ array ['desc' => \"I am a cool option\", 'sortable' => true];"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ( $this->exists($id) ){\n      $res = $this->db->update($this->class_cfg['table'], [\n        $this->class_cfg['arch']['options']['cfg'] => null\n      ], [\n        $this->class_cfg['arch']['options']['id'] => $id\n      ]);\n      if ( $res ){\n        $this->delete_cache($id);\n      }\n    }\n    return $res;\n  }",
            "startLine": 2469,
            "endLine": 2482,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The option ID"
                }
            ]
        },
        "fusion": {
            "name": "fusion",
            "summary": "Merges an option $src into an existing option $dest",
            "description": "Children will change id_parent and references in the same database will be updated\nThe config will remain the one from the destination",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>Children will change id_parent and references in the same database will be updated\nThe config will remain the one from the destination<\/p>"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($src, $dest)\n  {\n    $o_dest = $this->option($dest);\n    $num = 0;\n    $cf =& $this->class_cfg['arch']['options'];\n    if ( $o_dest && $o_src ){\n      $o_final = bbn\\x::merge_arrays($o_src, $o_dest);\n      \/\/ Order remains the dest one\n      $o_final[$cf['num']] = $o_dest[$cf['num']];\n      $tables = $this->db->get_foreign_keys($this->class_cfg['arch']['options']['id'], $this->class_cfg['table']);\n      foreach ( $tables as $table => $cols ){\n        foreach ( $cols as $c ){\n          $num += (int)$this->db->update($table, [$c => $dest], [$c => $src]);\n        }\n      }\n      $opt = $this->options($src);\n      \/\/ Moving children\n      foreach ( $opt as $id => $text ){\n        $num += (int)$this->move($id, $dest);\n      }\n      $num += (int)$this->set($dest, $o_final);\n      $num += (int)$this->remove($src);\n\n      $this->delete_cache($o_final['id_parent'], true);\n      $this->delete_cache($o_src['id_parent'], true);\n\n      if ( $this->is_sortable($o_src['id_parent']) ){\n        $this->fix_order($o_src['id_parent']);\n      }\n      if ( $this->is_sortable($o_final['id_parent']) ){\n        $this->fix_order($o_final['id_parent']);\n      }\n    }\n    return $num;\n  }",
            "startLine": 2506,
            "endLine": 2540,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "src",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Source option ID, will be"
                },
                {
                    "name": "dest",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Destination option ID, will remain after the fusion"
                }
            ]
        },
        "move": {
            "name": "move",
            "summary": "Changes the id_parent of an option",
            "description": "```php\nbbn\\x::dump($this->get_id_parent(21));\n\/\/ (int) 13\nbbn\\x::dump($this->move(21, 12));\n\/\/ (int) 1\nbbn\\x::dump($this->get_id_parent(21));\n\/\/ (int) 12\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($this->get_id_parent(21));\n\/\/ (int) 13\nbbn\\x::dump($this->move(21, 12));\n\/\/ (int) 1\nbbn\\x::dump($this->get_id_parent(21));\n\/\/ (int) 12"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $id_parent)\n  {\n    if (\n      ($o = $this->option($id)) &&\n      ($target = $this->option($id_parent))\n    ){\n      $upd = [$this->class_cfg['arch']['options']['id_parent'] => $id_parent];\n      if ( $this->is_sortable($id_parent) ){\n        $upd[$this->class_cfg['arch']['options']['num']] = empty($target['num_children']) ? 1 : $target['num_children'] + 1;\n      }\n      $res = $this->db->update($this->class_cfg['table'], $upd, [\n        'id' => $id\n      ]);\n      $this->delete_cache($id_parent);\n      $this->delete_cache($id);\n      $this->delete_cache($o['id_parent']);\n    }\n    return $res;\n  }",
            "startLine": 2558,
            "endLine": 2576,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The option's ID"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "parent The new id_parent"
                }
            ]
        },
        "fix_order": {
            "name": "fix_order",
            "summary": "Sets the order configuration for each options of a sortable given parent",
            "description": "```php\nbbn\\x::dump($opt->items(12));\n\/\/ array [20, 22, 25, 27]\nbbn\\x::dump($opt->fix_order(12)->items(12));\n\/\/ array [25, 22, 27, 20]\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->items(12));\n\/\/ array [20, 22, 25, 27]\nbbn\\x::dump($opt->fix_order(12)->items(12));\n\/\/ array [25, 22, 27, 20]"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $deep = false)\n  {\n      $cf =& $this->class_cfg;\n      $its = $this->full_options($id);\n      $p = 1;\n      foreach ( $its as $it ){\n        if ( $it['num'] !== $p ){\n          $this->db->update($cf['table'], [\n            $cf['arch']['options']['num'] => $p\n          ], [\n            $cf['arch']['options']['id'] => $it[$cf['arch']['options']['id']]\n          ]);\n          $this->delete_cache($it[$cf['arch']['options']['id']]);\n        }\n        $p++;\n        if ( $deep ){\n          $this->fix_order($it[$cf['arch']['options']['id']]);\n        }\n      }\n    }\n    return $this;\n  }",
            "startLine": 2592,
            "endLine": 2613,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "deep",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "export": {
            "name": "export",
            "summary": "Converts an option or a hierarchy to a multi-level array with JSON values",
            "description": "If $return is false the resulting array will be printed\n```php\n```",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>If $return is false the resulting array will be printed<\/p>"
                },
                {
                    "type": "code",
                    "content": ""
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $deep = false, $return = false)\n  {\n      return $return ? $ret : var_export($ret, 1);\n    }\n    return null;\n  }",
            "startLine": 2628,
            "endLine": 2633,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The ID of the option to clone"
                },
                {
                    "name": "deep",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true children will be included"
                },
                {
                    "name": "return",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the resulting array will be returned"
                }
            ]
        },
        "import": {
            "name": "import",
            "summary": "Insert into the option table an exported array of options",
            "description": "```php\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": ""
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $option, $id_parent = NULL, $force = false, $return_num = false)\n  {\n    $num = 0;\n    $items = empty($option['items']) ? false : $option['items'];\n\n    unset($option['id']);\n    unset($option['items']);\n    $num += (int)$this->add($option, $force);\n\n    $id = $this->db->last_id();\n    if ( $items ){\n      foreach ( $items as $it ){\n        $num += (int)$this->import($it, $id, $force);\n      }\n    }\n    return $return_num ? $num : $id;\n  }",
            "startLine": 2648,
            "endLine": 2664,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "option",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "An array of option(s) as export returns it"
                },
                {
                    "name": "id_parent",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "parent The option target, if not specified {@link default}"
                },
                {
                    "name": "force",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true and option exists it will be merged"
                },
                {
                    "name": "return_num",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "duplicate": {
            "name": "duplicate",
            "summary": "Copies and insert an option into a target option",
            "description": "```php\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": ""
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $target, $deep = false, $force = false, $return_num = false)\n  {\n    $target = $this->from_code($target);\n    if ( bbn\\str::is_uid($target) ){\n      if ( $opt = $this->export($id, $deep, 1) ){\n        $res = $this->import($opt, $target, $force, $return_num);\n        $this->delete_cache($target);\n      }\n    }\n    return $res;\n  }",
            "startLine": 2679,
            "endLine": 2689,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 5,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The source option's ID"
                },
                {
                    "name": "target",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The destination option's ID"
                },
                {
                    "name": "deep",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true, children will also be duplicated"
                },
                {
                    "name": "force",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true and option exists it will be merged"
                },
                {
                    "name": "return_num",
                    "position": 4,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "apply": {
            "name": "apply",
            "summary": "Applies a function to children of an option and updates the database",
            "description": "```php\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": ""
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($f, $id, $deep = false)\n  {\n    if ( isset($originals['items']) ){\n      $originals = $originals['items'];\n    }\n    $opts = $this->map($f, $originals, $deep);\n    if ( \\is_array($opts) ){\n      $changes = 0;\n      foreach ( $opts as $i => $o ){\n        if ( $originals[$i] !== $o ){\n          $changes += (int)$this->set($o['id'], $o);\n        }\n        if ( $deep && $o['num_children'] ){\n          $this->apply($f, $o, 1);\n        }\n      }\n      return $changes;\n    }\n    return null;\n  }",
            "startLine": 2703,
            "endLine": 2722,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "f",
                    "position": 0,
                    "type": "callable",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The function to apply (the unique argument will be the option as in {@link option()}"
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The options'ID on which children the function should be applied"
                },
                {
                    "name": "deep",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the function will be applied to all children's levels"
                }
            ]
        },
        "map": {
            "name": "map",
            "summary": "Applies a function to children of an option",
            "description": "```php\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": ""
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($f, $id, $deep = false)\n  {\n    $res = [];\n    if ( \\is_array($opts) ){\n      if ( isset($opts['items']) ){\n        $opts = $opts['items'];\n      }\n      foreach ( $opts as $i => $o ){\n        $opts[$i] = $f($o);\n        if ( $deep && $opts[$i] && !empty($opts[$i]['items']) ){\n          $opts[$i]['items'] = $this->map($f, $opts[$i]['items'], 1);\n        }\n        if ( \\is_array($opts[$i]) ){\n          $res[] = $opts[$i];\n        }\n      }\n    }\n    return $res;\n  }",
            "startLine": 2736,
            "endLine": 2754,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "f",
                    "position": 0,
                    "type": "callable",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The function to apply (the unique argument will be the option as in {@link option()}"
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The options'ID on which children the function should be applied"
                },
                {
                    "name": "deep",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the function will be applied to all children's levels"
                }
            ]
        },
        "map_cfg": {
            "name": "map_cfg",
            "summary": "Applies a function to children of an option, with the cfg array included",
            "description": "```php\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": ""
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($f, $id, $deep = false)\n  {\n    if ( isset($opts['items']) ){\n      $opts = $opts['items'];\n    }\n    $res = [];\n    if ( \\is_array($opts) ){\n      foreach ( $opts as $i => $o ){\n        $o['cfg'] = $this->get_cfg($o['id']);\n        $opts[$i] = $f($o);\n        if ( $deep && $opts[$i] && !empty($opts[$i]['items']) ){\n          $opts[$i]['items'] = $this->map($f, $opts[$i]['items'], 1);\n        }\n        if ( \\is_array($opts[$i]) ){\n          $res[] = $opts[$i];\n        }\n      }\n    }\n    return $res;\n  }",
            "startLine": 2768,
            "endLine": 2787,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "f",
                    "position": 0,
                    "type": "callable",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The function to apply (the unique argument will be the option as in {@link option()}"
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The options'ID on which children the function should be applied"
                },
                {
                    "name": "deep",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the function will be applied to all children's levels"
                }
            ]
        },
        "categories": {
            "name": "categories",
            "summary": "Retourne la liste des cat\u00e9gories sous forme de tableau index\u00e9 sur son `id`",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 2794,
            "endLine": 2796,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "text_value_categories": {
            "name": "text_value_categories",
            "summary": "Retourne la liste des cat\u00e9gories index\u00e9e sur leur `id` sous la forme d'un tableau text\/value",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      $res = [];\n      foreach ( $rs as $val => $text ){\n        $res[] = ['text' => $text, 'value' => $val];\n      }\n      return $res;\n    }\n    return null;\n  }",
            "startLine": 2803,
            "endLine": 2812,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "full_categories": {
            "name": "full_categories",
            "summary": "Retourne toutes les caract\u00e9ristiques des options d'une cat\u00e9gorie donn\u00e9e dans un tableau index\u00e9 sur leur `id`",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    foreach ( $opts as $k => $o ){\n      if ( !empty($o['default']) ){\n        $opts[$k]['fdefault'] = $this->text($o['default']);\n      }\n    }\n    return $opts;\n  }",
            "startLine": 2820,
            "endLine": 2828,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "js_categories": {
            "name": "js_categories",
            "summary": "Retourne toutes les caract\u00e9ristiques des options d'une cat\u00e9gorie donn\u00e9e dans un tableau index\u00e9 sur leur `id`",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      'categories' => []\n    ];\n    if ( $cats = $this->full_options(false) ){\n      foreach ( $cats as $cat ){\n        if ( !empty($cat['tekname']) ){\n          $res[$cat['tekname']] = $this->text_value_options($cat['id']);\n          $res['categories'][$cat['id']] = $cat['tekname'];\n        }\n      }\n    }\n    return $res;\n  }",
            "startLine": 2836,
            "endLine": 2849,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "has_permission": {
            "name": "has_permission",
            "summary": "Checks whether an option has _permissions_ in its parent cfg",
            "description": "```php\nbbn\\x::dump($opt->has_permission('bbn_ide'));\n\/\/ (bool) true\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->has_permission('bbn_ide'));\n\/\/ (bool) true"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($code = NULL)\n  {\n      $cfg = $this->get_cfg($p);\n      return !empty($cfg['permissions']);\n    }\n    return null;\n  }",
            "startLine": 2862,
            "endLine": 2868,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "code",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Any option(s) accepted by {@link from_code()}"
                }
            ]
        },
        "find_permissions": {
            "name": "find_permissions",
            "summary": "Returns an array of _permissions_ from origin $id",
            "description": "```php\nbbn\\x::dump($opt->find_permissions());\n\/* Returns a full treeof permissions for all options\narray []\n```",
            "description_parts": [
                {
                    "type": "code",
                    "content": "bbn\\x::dump($opt->find_permissions());\n\/* Returns a full treeof permissions for all options\narray []"
                }
            ],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id = NULL, $deep = false)\n  {\n      $id = $this->default;\n    }\n    $cfg = $this->get_cfg($id);\n    if ( !empty($cfg['permissions']) ){\n      $perms = [];\n      $opts = $this->full_options($id);\n      foreach ( $opts as $opt ){\n        $o = [\n          'icon' => $opt['icon'] ?? 'nf nf-fa-cog',\n          'text' => $opt['text'],\n          'id' => $opt['id']\n        ];\n        if ( $deep && !empty($opt['cfg']['permissions']) ){\n          $o['items'] = $this->find_permissions($opt['id'], true);\n        }\n        $perms[] = $o;\n      }\n      return $perms;\n    }\n    return null;\n  }",
            "startLine": 2884,
            "endLine": 2906,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The origin's ID"
                },
                {
                    "name": "deep",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": "",
                    "description": "If set to true the children will also be searched"
                }
            ]
        },
        "find_i18n": {
            "name": "find_i18n",
            "summary": "returns an array containing all options that have the property i18n setted",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id = NULL, $items = true)\n  {\n    $opts = $this->db->rselect_all($this->class_cfg['table'], [\n      $this->class_cfg['arch']['options']['id'],\n      $this->class_cfg['arch']['options']['id_parent'],\n      $this->class_cfg['arch']['options']['text'],\n      $this->class_cfg['arch']['options']['cfg']\n    ]);\n    foreach ( $opts as $opt ){\n      $cfg = json_decode($opt['cfg'], true);\n      if ( !empty($cfg['i18n']) ){\n        $opt['language'] = $cfg['i18n'];\n        unset($opt['cfg']);\n        if ( !empty($items) ){\n          $res[] = array_merge($opt, ['items' => array_values(array_filter($opts, function($o) use($opt){\n            return $o['id_parent'] === $opt['id'];\n          }))]);\n        }\n        else {\n          $res[] = $opt;\n        }\n      }\n    }\n    return $res;\n  }",
            "startLine": 2911,
            "endLine": 2935,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "items",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "find_i18n_option": {
            "name": "find_i18n_option",
            "summary": "returns an array containing the option (having the property i18n setted) corresponding to the given id",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $items = true)\n  {\n    if ( $opt = $this->db->rselect($this->class_cfg['table'], [\n        $this->class_cfg['arch']['options']['id'],\n        $this->class_cfg['arch']['options']['id_parent'],\n        $this->class_cfg['arch']['options']['text'],\n        $this->class_cfg['arch']['options']['cfg']\n    ], [$this->class_cfg['arch']['options']['id'] => $id])\n      ){\n        $opts = $this->full_options($id);\n        $cfg = json_decode($opt['cfg']);\n        if ( !empty($cfg->i18n) ){\n          $opt['language'] = $cfg->i18n;\n        }\n        unset($opt['cfg']);\n        if ( !empty($items) ){\n          $res[] = array_merge($opt, $opts);\n        }\n        else {\n          $res[] = $opt;\n        }\n      };\n    return $res;\n  }",
            "startLine": 2939,
            "endLine": 2962,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "items",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 56,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_instance": {
            "name": "get_instance",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 25,
            "endLine": 27,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "retriever_exists": {
            "name": "retriever_exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 29,
            "endLine": 31,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n      $this->class_cfg['arch'][$this->class_table_index]['id'] => $id\n    ]);\n  }",
            "startLine": 59,
            "endLine": 63,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_fields": {
            "name": "get_fields",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\options",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 73,
            "endLine": 75,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "_defaults": {
            "errors": [],
            "table": "bbn_options",
            "tables": {
                "options": "bbn_options"
            },
            "arch": {
                "options": {
                    "id": "id",
                    "id_parent": "id_parent",
                    "id_alias": "id_alias",
                    "num": "num",
                    "text": "text",
                    "code": "code",
                    "value": "value",
                    "cfg": "cfg"
                }
            }
        },
        "retriever_instance": {},
        "retriever_exists": true
    },
    "constants": [],
    "numMethods": 94,
    "numProperties": 0,
    "numConstants": 1,
    "numStaticProperties": 3,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\models\\tts\\retriever",
        "bbn\\models\\tts\\cache",
        "bbn\\models\\tts\\dbconfig"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\db",
    "isSubclassOf": false,
    "defaultProperties": {
        "_defaults": {
            "errors": [],
            "table": "bbn_options",
            "tables": {
                "options": "bbn_options"
            },
            "arch": {
                "options": {
                    "id": "id",
                    "id_parent": "id_parent",
                    "id_alias": "id_alias",
                    "num": "num",
                    "text": "text",
                    "code": "code",
                    "value": "value",
                    "cfg": "cfg"
                }
            }
        },
        "retriever_instance": {},
        "retriever_exists": true,
        "non_selected": [
            "cfg"
        ],
        "_local_cache": [],
        "class_cfg": null,
        "root": null,
        "default": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "_cache_prefix": null,
        "cache_engine": null,
        "fields": null,
        "class_table": null,
        "class_table_index": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\appui",
    "shortName": "options",
    "summary": "An all-in-one hierarchical options management system",
    "description": "This class allows to:\n---------------------\n* manage a **hierarchical** table of options\n* retrieve, edit, add, remove options\n* grab a whole tree\n* apply functions on group of options\n* add user-defined properties\n* set option configuration and applies it to all its children\n* And many more...",
    "description_parts": [
        {
            "type": "text",
            "content": "<h2>This class allows to:<\/h2>\n<ul>\n<li>manage a <strong>hierarchical<\/strong> table of options<\/li>\n<li>retrieve, edit, add, remove options<\/li>\n<li>grab a whole tree<\/li>\n<li>apply functions on group of options<\/li>\n<li>add user-defined properties<\/li>\n<li>set option configuration and applies it to all its children<\/li>\n<li>And many more...<\/li>\n<\/ul>"
        }
    ]
}