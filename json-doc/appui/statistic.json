{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\appui\\statistic",
    "namespace": true,
    "traits": [
        "bbn\\models\\tts\\optional"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/appui\/statistic.php",
    "startLine": 7,
    "endLine": 1167,
    "contentConstructor": {
        "file": "bbn\\appui\\statistic",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "Constructor.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, $code, array $cfg = [])\n  {\n    \/\/ Parent constructors\n    parent::__construct($db);\n    self::optional_init();\n    \/\/ Db ok\n    if ($this->db->check()\n        \/\/ History ok\n        && history::is_init()\n        \/\/ Id option corresponding to code in active statistics\n        && ($this->id_option = self::get_option_id($code, 'active'))\n        \/\/ Option retrieved\n        && ($this->ocfg = self::get_option($this->id_option))\n    ) {\n      if (bbn\\x::has_props($cfg, ['type', 'table'], true)\n          \/\/ And right types\n          && \\bbn\\x::is_string($cfg['type'], $cfg['table'])\n          \/\/ Correcting case\n          && ($cfg['type'] = strtolower($cfg['type']))\n          \/\/ Type accepted\n          && (\\bbn\\x::indexOf(self::$types, $cfg['type']) > -1)\n          \/\/ History config retrieved\n          && ($this->hcfg = history::get_table_cfg($cfg['table']))\n      ) {\n        if ((\\bbn\\x::indexOf(['sum', 'avg'], $cfg['type']) > -1) && !isset($cfg['field'])) {\n          throw new \\Error(_(\"The field parameter is mandatory for sum and avg types\"));\n        }\n\n        $this->code = $code;\n        $this->dbo  = new \\bbn\\appui\\databases($this->db);\n        if (isset($cfg['field'])) {\n          if (!($this->_id_field = $this->dbo->column_id($cfg['field'], $cfg['table']))) {\n            throw new \\Error(_(\"The field parameter must be a known field of the table\"));\n          }\n        }\n\n        if (($cfg['type'] === 'update') && empty($this->_id_field)) {\n          throw new \\Error(_(\"The field parameter is mandatory for statistics of type update\"));\n        }\n\n        $this->type = $cfg['type'];\n        $this->cfg  = $cfg;\n        if (!empty($cfg['inserter']) && bbn\\str::is_uid($cfg['inserter'])) {\n          $this->inserter = $cfg['inserter'];\n        }\n\n        if (!empty($cfg['updater']) && bbn\\str::is_uid($cfg['updater'])) {\n          $this->updater = $cfg['updater'];\n        }\n\n        if (!empty($cfg['deleter']) && bbn\\str::is_uid($cfg['deleter'])) {\n          $this->deleter = $cfg['deleter'];\n        }\n\n        $req          = $this->_set_request_cfg();\n        $this->db_cfg = $this->db->process_cfg($req);\n      }\n\n    }\n        \/\/ Right props in cfg\n  }",
            "startLine": 104,
            "endLine": 164,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "Constructor.",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\db $db)\n  {\n      $this->db = $db;\n  }",
                "startLine": 37,
                "endLine": 40,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The code of the option"
                },
                {
                    "name": "code",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The configuration"
                },
                {
                    "name": "cfg",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "check": {
            "name": "check",
            "summary": "Checks if the constructor is gone through.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return !!$this->ocfg;\n  }",
            "startLine": 172,
            "endLine": 175,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_code": {
            "name": "get_code",
            "summary": "Code getter.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if ($this->check()) {\n      return $this->code;\n    }\n\n    return null;\n  }",
            "startLine": 183,
            "endLine": 190,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "run": {
            "name": "run",
            "summary": "Run the stat",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($start, $end = NULL)\n  {\n    if ($this->db_cfg && !empty($this->db_cfg['values'])) {\n      if (is_string($start)) {\n        $start = strtotime($start.(strlen($start) === 10 ? ' 00:00:00' : ''));\n      }\n\n      if (!$start || !is_int($start)) {\n        throw new Error(_('Impossible to read the given start date'));\n      }\n\n      if (!$this->is_total) {\n        if (!$end || ($end <= $start)) {\n          $end = mktime(23, 59, 59, date('n', $start), date('j', $start), date('Y', $start));\n        }\n\n        if (!$end || !is_int($end)) {\n          throw new Error(_('Impossible to read the given end date'));\n        }\n      }\n\n      $vals = [];\n      foreach ($this->db_cfg['values'] as $v) {\n        if (!$this->is_total && ($v === self::$_placeholder.'2')) {\n          $vals[] = $end;\n        }\n        else {\n          $vals[] = $v === self::$_placeholder ? $start : $v;\n        }\n      }\n\n      $cfg           = $this->db_cfg;\n      $cfg['values'] = $vals;\n      return $this->db->select_one($cfg);\n    }\n  }",
            "startLine": 200,
            "endLine": 235,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "start",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "update": {
            "name": "update",
            "summary": "Update a statistic in the table bbn_statistics from the start of time",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($variant = NULL, $start = NULL)\n  {\n    if ($this->check()) {\n      if (!$variant) {\n        $variant = 'default';\n      }\n\n      if (!($real_start = $this->db->select_one('bbn_statistics', 'MAX(day)', ['id_option' => $this->id_option, 'code' => $variant]))) {\n        if ($start) {\n          $real_start = $start;\n        }\n        elseif (!empty($this->ocfg['start'])) {\n          $real_start = $this->ocfg['start'];\n        }\n        else {\n          $real_start = self::ODATE;\n        }\n      }\n\n      if (\\bbn\\str::is_date_sql($real_start)) {\n        $num_days  = 0;\n        $num       = $this->db->count(\n          'bbn_statistics',\n          [\n            'id_option' => $this->id_option,\n            'code' => $variant\n          ]\n        );\n        $today     = date('Ymd');\n        $last_res  = null;\n        $last_date = $real_start;\n        $time      = mktime(\n          12,\n          0,\n          0,\n          (int)substr($real_start, 5, 2),\n          (int)substr($real_start, 8, 2),\n          (int)substr($real_start, 0, 4)\n        );\n        $test      = date('Ymd', $time);\n        while ($test <= $today) {\n          $res = $this->run($real_start);\n          if ($num_days) {\n            \\bbn\\x::hdump($res, $this->db->get_last_values());\n          }\n          else {\n            \\bbn\\x::hdump($res, $this->db->last(), $this->db->get_last_values());\n          }\n\n          $num_days++;\n          if (!$res) {\n            $res = 0;\n          }\n\n          if (($res !== $last_res) || !$num) {\n            if ($this->db->count(\n              'bbn_statistics', [\n              'id_option' => $this->ocfg['id'],\n              'code' => $variant,\n              'day' => $real_start\n              ]\n            )\n            ) {\n              $this->db->update(\n                'bbn_statistics', [\n                'res' => $res\n                ], [\n                'id_option' => $this->ocfg['id'],\n                'code' => $variant,\n                'day' => $real_start\n                ]\n              );\n            }\n            else {\n              $this->db->insert(\n                'bbn_statistics', [\n                'id_option' => $this->ocfg['id'],\n                'code' => $variant,\n                'day' => $real_start,\n                'res' => $res\n                ]\n              );\n            }\n\n            $last_res = $res;\n            $num++;\n          }\n          else {\n            $this->db->update(\n              'bbn_statistics', [\n              'day' => $real_start\n              ], [\n              'id_option' => $this->ocfg['id'],\n              'code' => $variant,\n              'day' => $last_date\n              ]\n            );\n          }\n\n          $last_date  = $real_start;\n          $time      += 24 * 3600;\n          $real_start = date('Y-m-d', $time);\n          $test       = date('Ymd', $time);\n        }\n\n        return $num_days;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 245,
            "endLine": 355,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "variant",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "Start of time"
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "serie": {
            "name": "serie",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($values = 30, $start = NULL, $end = NULL)\n  {\n    if ($this->check()) {\n      if (!$end) {\n        $end = date('Y-m-d');\n      }\n\n      if (!$start) {\n        $start = date('Y-m-d', strtotime($end.' 12:00:00') - ($values * 24 * 3600));\n      }\n\n      if (bbn\\str::is_date_sql($start, $end)) {\n        $res = [\n          'labels' => [],\n          'series' => []\n        ];\n        \/\/ All the values between start and end\n        $all = $this->db->rselect_all(\n          'bbn_statistics', ['day', 'res'], [\n          [\n            'field' => 'id_option',\n            'value' => $this->id_option\n          ], [\n            'field' => 'day',\n            'operator' => '>=',\n            'value' => $start\n          ], [\n            'field' => 'day',\n            'operator' => '<=',\n            'value' => $end\n          ]\n          ], [\n          'day' => 'ASC'\n          ]\n        );\n        \/\/ As the row appears with its last date for value we pick the nextr row if the last row is not the last day\n        $last = count($all) - 1;\n        if (($all[$last]['day'] !== $end) && ($tmp = $this->db->rselect(\n          'bbn_statistics', ['day', 'res'], [\n          [\n            'field' => 'id_option',\n            'value' => $this->id_option\n          ], [\n            'field' => 'day',\n            'operator' => '>',\n            'value' => $end\n          ]\n          ], [\n          'day' => 'ASC'\n          ]\n        ))\n        ) {\n          $all[] = $tmp;\n          $last++;\n        }\n\n        if (count($all)) {\n          $dcurrent = new \\DateTime($start);\n          $dend     = new \\DateTime($end);\n          $num_days = (int)$dend->diff($dcurrent)->format('%a');\n          $diff     = $num_days;\n          $interval = (int)floor(($num_days + 1) \/ $values);\n          $num      = 0;\n          $idx      = 0;\n          $didx     = 0;\n          $pstart   = false;\n          while ($diff >= 0) {\n            $current = $dcurrent->format('Y-m-d');\n            if (!$pstart) {\n              $pstart = $current;\n            }\n\n            if ($num === $interval) {\n              $num = 0;\n            }\n\n            if (!$num) {\n              if (!empty($this->ocfg['total']) || ($interval === 1)) {\n                $res['labels'][$didx] = $current;\n              }\n              else {\n                $res['labels'][$didx] = bbn\\date::format($pstart, 's').' - '.bbn\\date::format($current, 's');\n              }\n\n              if (isset($res['series'][$didx]) && empty($this->ocfg['total'])) {\n                $res['series'][$didx] = $res['series'][$didx] + $all[$idx]['res'];\n              }\n              else {\n                $res['series'][$didx] = $all[$idx]['res'];\n              }\n\n              $pstart = false;\n              $didx++;\n            }\n            elseif (empty($this->ocfg['total'])) {\n              $res['labels'][$didx]  = $current;\n              $res['series'][$didx] += (int)$all[$idx]['res'];\n            }\n\n            if (!$diff) {\n              break;\n            }\n\n            if ($current === $all[$idx]['day']) {\n              $idx++;\n            }\n\n            $dcurrent = $dcurrent->add(date_interval_create_from_date_string('1 days'));\n            $diff     = (int)$dend->diff($dcurrent)->format('%a');\n            $num++;\n          }\n        }\n\n        return $res;\n      }\n    }\n\n    return null;\n  }",
            "startLine": 358,
            "endLine": 476,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "serie_values": {
            "name": "serie_values",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($values = 30, $start = NULL, $end = NULL)\n  {\n    if ($res = $this->serie($values, $start, $end)) {\n      $res = array_map(\n        function ($a) {\n\n        }, $res\n      );\n    }\n\n    return $res;\n  }",
            "startLine": 479,
            "endLine": 490,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "start",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "serie_by_period": {
            "name": "serie_by_period",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($values = 30, $unit = 'm', $end = NULL, $pstart = NULL)\n  {\n    if ($this->ocfg && $values) {\n      if (!$end) {\n        $end = date('Y-m-d');\n      }\n\n      if (bbn\\str::is_date_sql($end)) {\n        switch (strtolower($unit)) {\n          case 'y':\n            $funit = 'years';\n            $tmp   = date('Y-m-d', mktime(23, 59, 59, 12, 31, substr($end, 0, 4)));\n            if ($end !== $tmp) {\n              $end = date('Y-m-d', mktime(23, 59, 59, 12, 31, (int)substr($end, 0, 4) - 1));\n            }\n            break;\n          case 't':\n            $funit   = 'months';\n            $values *= 3;\n          case 'm':\n            $funit  = 'months';\n            $month  = (int)substr($end, 5, 2);\n            $remain = $month % 3;\n            if ($remain) {\n              $remain = 3 - $remain;\n            }\n\n            $tmp = date('Y-m-d', mktime(23, 59, 59, $month + 1, 0, substr($end, 0, 4)));\n            if (($end !== $tmp) || $remain) {\n              $end = date('Y-m-d', mktime(23, 59, 59, $month - $remain + 1, 0, (int)substr($end, 0, 4)));\n            }\n            break;\n          case 'w':\n            $funit = 'weeks';\n\n            break;\n          case 'd':\n            $funit = 'days';\n            break;\n        }\n\n        if (isset($funit)) {\n          $dend   = new \\DateTime($end);\n          $dstart = $dend->sub(date_interval_create_from_date_string(\"$values $funit\"));\n          $start  = $dstart->format('Y-m-d');\n          $res    = [\n            'labels' => [],\n            'series' => []\n          ];\n          if ($all = $this->db->rselect_all(\n            'bbn_statistics', ['day', 'res'], [\n            [\n              'field' => 'id_option',\n              'value' => $this->id_option\n            ], [\n              'field' => 'day',\n              'operator' => '<=',\n              'value' => $end\n            ], [\n              'field' => 'day',\n              'operator' => '>=',\n              'value' => $start\n            ]\n            ], [\n            'day' => 'ASC'\n            ]\n          )\n          ) {\n            $last = count($all) - 1;\n            if (($all[$last]['day'] !== $end) && ($tmp = $this->db->rselect(\n              'bbn_statistics', ['day', 'res'], [\n              [\n                'field' => 'id_option',\n                'value' => $this->id_option\n              ], [\n                'field' => 'day',\n                'operator' => '>',\n                'value' => $end\n              ]\n              ], [\n              'day' => 'ASC'\n              ]\n            ))\n            ) {\n              $all[] = $tmp;\n              $last++;\n            }\n\n            $dcurrent = new \\DateTime($start);\n            $num_days = (int)$dend->diff($dcurrent)->format('%a');\n            $diff     = $num_days;\n            $interval = (int)floor($num_days \/ $values);\n            $num      = 0;\n            $idx      = 0;\n            $didx     = 0;\n            while ($diff >= 0) {\n              $current = $dcurrent->format('Y-m-d');\n              if ($num === $interval) {\n                $num = 0;\n              }\n\n              if (!$num) {\n                $res['labels'][$didx] = $current;\n                $res['series'][$didx] = $all[$idx]['res'];\n                $didx++;\n              }\n              elseif (empty($this->ocfg['total'])) {\n                $res['labels'][$didx]  = $current;\n                $res['series'][$didx] += (int)$all[$idx]['res'];\n              }\n\n              if (!$diff) {\n                break;\n              }\n\n              if ($current === $all[$idx]['day']) {\n                $idx++;\n              }\n\n              $dcurrent = $dcurrent->add(date_interval_create_from_date_string('1 days'));\n              $diff     = (int)$dend->diff($dcurrent)->format('%a');\n              $num++;\n            }\n          }\n\n          return $res;\n        }\n      }\n    }\n\n    return null;\n  }",
            "startLine": 493,
            "endLine": 624,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "values",
                    "position": 0,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 30,
                    "default_name": ""
                },
                {
                    "name": "unit",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "m",
                    "default_name": ""
                },
                {
                    "name": "end",
                    "position": 2,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "pstart",
                    "position": 3,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_option_root": {
            "name": "get_option_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optional_init();\n    return self::$option_root_id;\n  }",
            "startLine": 145,
            "endLine": 149,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_root": {
            "name": "get_appui_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    self::optional_init();\n    return self::$option_appui_id;\n  }",
            "startLine": 152,
            "endLine": 156,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_object": {
            "name": "get_options_object",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = bbn\\appui\\options::get_instance();\n    if (!$o) {\n      throw new \\Exception(_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n\n    return $o;\n  }",
            "startLine": 159,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\appui\\options"
            ],
            "parent": false,
            "arguments": []
        },
        "get_option_id": {
            "name": "get_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->from_code(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 176,
            "endLine": 179,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_ids": {
            "name": "get_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::get_options_object()->get_codes(...self::_treat_args(func_get_args())), function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 182,
            "endLine": 191,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_tree": {
            "name": "get_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args()))) ? $tree['items'] : [];\n  }",
            "startLine": 194,
            "endLine": 197,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options": {
            "name": "get_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 200,
            "endLine": 203,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_option": {
            "name": "get_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->option(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 206,
            "endLine": 209,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_text_value": {
            "name": "get_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::get_option_id(...func_get_args())) ? self::get_options_object()->text_value_options($id) : [];\n  }",
            "startLine": 212,
            "endLine": 215,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_option_id": {
            "name": "get_appui_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->from_code(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 224,
            "endLine": 227,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_ids": {
            "name": "get_appui_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::get_options_object()->get_codes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function ($a) {\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 230,
            "endLine": 242,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_tree": {
            "name": "get_appui_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args(), true)) ) ? $tree['items'] : [];\n  }",
            "startLine": 245,
            "endLine": 248,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options": {
            "name": "get_appui_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 251,
            "endLine": 254,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_option": {
            "name": "get_appui_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 257,
            "endLine": 260,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_text_value": {
            "name": "get_appui_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\appui\\statistic",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::get_appui_option_id(...func_get_args())) ? self::get_options_object()->text_value_options($id) : [];\n  }",
            "startLine": 263,
            "endLine": 266,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "types": [
            "insert",
            "update",
            "delete",
            "restore",
            "count",
            "sum",
            "avg"
        ],
        "_placeholder": "___BBN_TST___",
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": [],
    "numMethods": 30,
    "numProperties": 0,
    "numConstants": 1,
    "numStaticProperties": 5,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\models\\tts\\optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\db",
    "isSubclassOf": false,
    "defaultProperties": {
        "types": [
            "insert",
            "update",
            "delete",
            "restore",
            "count",
            "sum",
            "avg"
        ],
        "_placeholder": "___BBN_TST___",
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "is_total": false,
        "db_cfg": null,
        "ocfg": null,
        "inserter": null,
        "updater": null,
        "deleter": null,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\appui",
    "shortName": "statistic",
    "summary": ""
}