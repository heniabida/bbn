{
    "doc": {
        "description": "File Transfer Protocol Class",
        "tags": {
            "copyright": "BBN Solutions",
            "since": "Apr 4, 2011, 23:23:55 +0000",
            "category": "Files ressources",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.2r89"
        }
    },
    "name": "bbn\\file\\ftp",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/file\/ftp.php",
    "startLine": 20,
    "endLine": 406,
    "contentConstructor": {
        "file": "bbn\\file\\ftp",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($cfg = [])\n  {\n\t\tif ( \\is_array($cfg) )\n\t\t{\n\t\t\t$this->dir = $cfg['dir'] ?? '';\n\t\t\tif ( isset($cfg['host']) ){\n\t\t\t\t$host = $cfg['host'];\n\t\t\t}\n\t\t\telse if ( \\defined('BBN_FTP_HOST') ){\n\t\t\t\t$host = BBN_FTP_HOST;\n\t\t\t}\n\t\t\tif ( isset($cfg['user']) ){\n\t\t\t\t$login = $cfg['user'];\n\t\t\t}\n\t\t\telse if ( \\defined('BBN_FTP_USER') ){\n\t\t\t\t$login = BBN_FTP_LOGIN;\n\t\t\t}\n\t\t\tif ( isset($cfg['pass']) ){\n\t\t\t\t\/\/ $this->pass = bbn\\util\\enc::decrypt($cfg['pass']);\n        $pass = $cfg['pass'];\n\t\t\t}\n\t\t\telse if ( \\defined('BBN_FTP_PASS') ){\n\t\t\t\t$pass = bbn\\util\\enc::decrypt(BBN_FTP_PASS);\n\t\t\t}\n\t\t\tif (\n\t\t\t  isset($this->dir, $host, $login, $pass) &&\n\t\t\t\t($this->dir = $this->checkPath($this->dir))\n      ){\n\t\t\t  if ( empty($cfg['ssl']) ){\n          $this->cn = ftp_connect($host, $cfg['port'] ?? 21, $cfg['timeout'] ?? self::TIMEOUT);\n        }\n        else{\n          $this->cn = ftp_ssl_connect($host, $cfg['port'] ?? 21, $cfg['timeout'] ?? self::TIMEOUT);\n        }\n        if ( $this->cn ){\n          if ( ftp_login($this->cn, $login, $pass) )\n          {\n            if ( @ftp_chdir($this->cn, $this->dir) )\n            {\n              ftp_pasv($this->cn,TRUE);\n              return;\n            }\n            else {\n              $this->error = \\defined('BBN_IMPOSSIBLE_TO_FIND_THE_SPECIFIED_FOLDER') ?\n                BBN_IMPOSSIBLE_TO_FIND_THE_SPECIFIED_FOLDER : 'Impossible to find the specified folder';\n            }\n          }\n          else {\n            $this->cn = false;\n            $this->error = \\defined('BBN_IMPOSSIBLE_TO_CONNECT_TO_THE_FTP_HOST') ?\n              BBN_IMPOSSIBLE_TO_CONNECT_TO_THE_FTP_HOST : 'Impossible to connect to the FTP host';\n          }\n        }\n        else {\n          $this->error = \\defined('BBN_IMPOSSIBLE_TO_FIND_THE_FTP_HOST') ?\n            BBN_IMPOSSIBLE_TO_FIND_THE_FTP_HOST : 'Unable to find the FTP host';\n        }\n      }\n\t\t}\n  }",
            "startLine": 58,
            "endLine": 117,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "listFiles": {
            "name": "listFiles",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path = '.', $fast = false)\n  {\n    $res = [];\n\t\tif ( $this->cn &&\n            ftp_chdir($this->cn, $path) &&\n            ($files = ftp_nlist($this->cn, $path)) ){\n      foreach ( $files as $file )\n      {\n        $ele = [\n          'name' => $file,\n          'basename' => basename($file),\n        ];\n        if ( @ftp_chdir($this->cn, $path.'\/'.$ele['basename']) ){\n          $num = ftp_nlist($this->cn, '.');\n          $ele['num'] = \\count($num);\n          $ele['type'] = 'dir';\n          @ftp_cdup($this->cn);\n        }\n        else{\n          $ele['type'] = bbn\\str::file_ext($file);\n        }\n        $res[] = $ele;\n      }\n    }\n    return $res;\n  }",
            "startLine": 124,
            "endLine": 149,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": ".",
                    "default_name": ""
                },
                {
                    "name": "fast",
                    "position": 1,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": false,
                    "default_name": ""
                }
            ]
        },
        "scan": {
            "name": "scan",
            "summary": "Scans all the content from a directory, including the subdirectories",
            "description": "*\n<code>\nbbn\\file\\dir::scan(\"\/home\/me\");\nbbn\\file\\dir::delete(\"C:\\Documents\\Test\");\n<\/code>",
            "description_parts": [
                {
                    "type": "text",
                    "content": "<p>*\n<code>\nbbn\\file\\dir::scan(&quot;\/home\/me&quot;);\nbbn\\file\\dir::delete(&quot;C:\\Documents\\Test&quot;);\n<\/code><\/p>"
                }
            ],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($dir, $type = NULL, &$res = [], $timeout = 0)\n  {\n    $res = [];\n    if ( $dirs = $this->listFiles($dir) ){\n      foreach ( $dirs as $d ){\n        if ( $type &&\n                (strpos($type, 'file') === 0) &&\n                !isset($d['num']) ){\n          $res[] = $d['name'];\n        }\n        else if ( $type &&\n                ((strpos($type, 'dir') === 0) || (strpos($type, 'fold') === 0)) &&\n                isset($d['num']) ){\n          $res[] = $d['name'];\n        }\n        else{\n          $res[] = $d['name'];\n        }\n        if ( isset($d['num']) ){\n          $this->scan($d['name'], $type, $res);\n        }\n      }\n    }\n    return $res;\n  }",
            "startLine": 164,
            "endLine": 188,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "dir",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The directory path."
                },
                {
                    "name": "type",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": "",
                    "description": "The type of item to return ('file', 'dir', default is both)"
                },
                {
                    "name": "res",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "timeout",
                    "position": 3,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "checkPath": {
            "name": "checkPath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n    if ( empty($path) ){\n      return '\/';\n    }\n\t\t$new = explode('..\/',$path);\n\t\t$nnew = \\count($new);\n\t\tif ( $nnew > 1 )\n\t\t{\n\t\t\t$cur = explode('\/',$this->dir);\n\t\t\t$ncur = \\count($cur);\n\t\t\tif ( $cur[$ncur-1] == '' )\n\t\t\t{\n\t\t\t\tarray_pop($cur);\n\t\t\t\t$ncur--;\n\t\t\t}\n\t\t\tfor ( $i = 1; $nnew < $i; $i++ )\n\t\t\t{\n\t\t\t\tif ( $new[$i-1] == '' )\n\t\t\t\t{\n\t\t\t\t\t$ncur--;\n\t\t\t\t\tif ( $ncur == 1 )\n\t\t\t\t\t\treturn false;\n\t\t\t\t\telse\n\t\t\t\t\t\tarray_pop($cur);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$add = $new[$i-1];\n\t\t\t\t\tif ( substr($add,-1) != '\/' )\n\t\t\t\t\t\t$add .= '\/';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$new_path = implode('\/',$cur).'\/';\n\t\t\tif ( isset($add) )\n\t\t\t\t$new_path .= $add;\n\t\t\treturn $new_path;\n\t\t}\n\t\telse if ( strpos($path,'\/') === 0 )\n\t\t\treturn $path;\n\t\telse if ( $path == '.' )\n\t\t\treturn $this->dir;\n\t\telse if ( \\strlen($path) > 0 )\n\t\t{\n\t\t\tif ( substr($path,-1) != '\/' )\n\t\t\t\t$path .= '\/';\n\t\t\t$path = $this->dir.$path;\n\t\t\tif ( substr($path,0,1) != '\/' )\n\t\t\t\t$path = '\/'.$path;\n\t\t\treturn $path;\n\t\t}\n  }",
            "startLine": 193,
            "endLine": 245,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "checkFilePath": {
            "name": "checkFilePath",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($file)\n  {\n\t\tif ( ($slash !== false) &&\n                ($dir = $this->checkPath(substr($file, 0, $slash))) ){\n      return $dir.substr($file, $slash);\n\t\t}\n\t\telse if ( $slash === false ){\n\t\t\treturn $this->dir.$file;\n    }\n\t\treturn false;\n  }",
            "startLine": 250,
            "endLine": 260,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "file",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "cdDir": {
            "name": "cdDir",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($dir)\n  {\n\t\t{\n\t\t\tif ( @ftp_chdir($this->cn, $dir) )\n\t\t\t{\n\t\t\t\t$this->dir = $dir;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 265,
            "endLine": 275,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "dir",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "checkDir": {
            "name": "checkDir",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($dir, $create = 0)\n  {\n\t\t{\n\t\t\t$path = $this->dir;\n\t\t\tif ( $this->cdDir($dir) ){\n\t\t\t\t$this->cdDir($path);\n\t\t\t\t$this->error = \\defined('BBN_DIRECTORY_EXISTS') ?\n\t\t\t\t\tBBN_DIRECTORY_EXISTS : 'The directory exists';\n\t\t\t\treturn $this->error;\n\t\t\t}\n\t\t\telse if ( $create == 1 && $this->mkDir($dir) ){\n\t\t\t\t$this->error = \\defined('BBN_DIRECTORY_CREATED') ?\n\t\t\t\t\tBBN_DIRECTORY_CREATED : 'The directory has been created';\n\t\t\t\treturn $this->error;\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 280,
            "endLine": 297,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "dir",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "create",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "mkDir": {
            "name": "mkDir",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($dir)\n  {\n\t\t\tif ( $this->checkDir($dir) ){\n\t\t\t\t$this->error = \\defined('BBN_DIRECTORY_EXISTS') ?\n\t\t\t\t\tBBN_DIRECTORY_EXISTS : 'The directory exists';\n\t\t\t\treturn $this->error;\n\t\t\t}\n\t\t\telse if ( ftp_mkdir($this->cn, $dir) ){\n\t\t\t\t$this->error = \\defined('BBN_DIRECTORY_CREATED') ?\n\t\t\t\t\tBBN_DIRECTORY_CREATED : 'The directory has been created';\n\t\t\t\treturn $this->error;\n\t\t\t}\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 302,
            "endLine": 316,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "dir",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete": {
            "name": "delete",
            "summary": "Deletes a file from the server",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($item)\n  {\n\t\tif ( $this->checkFilePath($item) &&\n            ftp_delete($this->cn,$item) ){\n      return true;\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 323,
            "endLine": 330,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "item",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "put": {
            "name": "put",
            "summary": "Puts a file on the server",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($src, $dest)\n  {\n            ($dest = $this->checkFilePath($dest)) &&\n            ftp_put($this->cn,$dest,$src,FTP_BINARY) ){\n      return true;\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 337,
            "endLine": 344,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "src",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "dest",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get": {
            "name": "get",
            "summary": "Gets a file from the server",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($src, $dest)\n  {\n            ftp_get($this->cn, $dest, $src, FTP_BINARY) ){\n      return true;\n\t\t}\n\t\treturn false;\n  }",
            "startLine": 351,
            "endLine": 357,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "src",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "dest",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "close": {
            "name": "close",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 362,
            "endLine": 364,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "move": {
            "name": "move",
            "summary": "Moves or renames a file on the server",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($old, $new)\n  {\n      !empty($old) &&\n      !empty($new) &&\n      ($old = $this->checkFilePath($old)) &&\n      ftp_rename($this->cn, $old, $new)\n    ){\n      return true;\n    }\n    return false;\n  }",
            "startLine": 373,
            "endLine": 383,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "old",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "The new file full path"
                },
                {
                    "name": "new",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "exists": {
            "name": "exists",
            "summary": "Checks if a file is present in a folder on the server",
            "description": "",
            "description_parts": [],
            "file": "bbn\\file\\ftp",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($path)\n  {\n      $dir = dirname($path);\n      $ext = \\bbn\\str::file_ext($path);\n      $file = basename($path);\n      if ( \\is_array($files = $this->listFiles($dir)) ){\n        foreach ( $files as $f ){\n          if ( $f['basename'] === $file ){\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }",
            "startLine": 391,
            "endLine": 405,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "path",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 56,
            "endLine": 61,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": null,
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        }
    },
    "properties": {
        "error": {
            "visibility": "public",
            "doc": {
                "description": "",
                "tags": [
                    {
                        "tag": "var",
                        "type": "mixed"
                    }
                ]
            },
            "parent": {
                "name": "error",
                "static": false,
                "visibility": "protected",
                "doc": {
                    "description": "",
                    "tags": [
                        {
                            "tag": "var",
                            "type": "false|string"
                        }
                    ]
                },
                "parent": false,
                "value": false
            }
        }
    },
    "staticProperties": [],
    "constants": [],
    "numMethods": 22,
    "numProperties": 1,
    "numConstants": 1,
    "numStaticProperties": 0,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\basic",
    "isSubclassOf": false,
    "defaultProperties": {
        "dir": "",
        "host": null,
        "login": null,
        "pass": null,
        "cn": null,
        "error": null,
        "errors": [],
        "debug": false,
        "log": []
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\file",
    "shortName": "ftp",
    "summary": "File Transfer Protocol Class"
}