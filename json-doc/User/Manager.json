{
    "doc": {
        "description": "A class for managing users",
        "tags": {
            "copyright": "BBN Solutions",
            "since": "Apr 4, 2011, 23:23:55 +0000",
            "category": "Authentication",
            "license": "http:\/\/www.opensource.org\/licenses\/mit-license.php MIT",
            "version": "0.2r89"
        }
    },
    "name": "bbn\\User\\Manager",
    "namespace": true,
    "traits": [],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/User\/Manager.php",
    "startLine": 20,
    "endLine": 876,
    "contentConstructor": {
        "file": "bbn\\User\\Manager",
        "returns": null
    },
    "methods": {
        "getListFields": {
            "name": "getListFields",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->list_fields;\n  }",
            "startLine": 63,
            "endLine": 66,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getMailer": {
            "name": "getMailer",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      $this->mailer = $this->usrcls->getMailer();\n    }\n    return $this->mailer;\n  }",
            "startLine": 68,
            "endLine": 73,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "findSessions": {
            "name": "findSessions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user = NULL, $minutes = 5)\n  {\n    $cfg = [\n      'table' => $this->class_cfg['tables']['sessions'],\n      'fields' => [],\n      'where' => [\n        [\n          'field' => $this->class_cfg['arch']['sessions']['last_activity'],\n          'operator' => '<',\n          'value' => 'DATE_SUB(NOW(), INTERVAL '.$this->db->csn($this->class_cfg['sess_length'], true).' MINUTE)'\n        ]\n      ]\n    ];\n    if ( !\\is_null($id_user) ){\n      $cfg['where'][] = [\n        'field' => $this->class_cfg['arch']['sessions']['id_user'],\n        'value' => $id_user\n      ];\n    }\n    return $this->db->rselectAll($cfg);\n  }",
            "startLine": 75,
            "endLine": 95,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "minutes",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 5,
                    "default_name": ""
                }
            ]
        },
        "destroySessions": {
            "name": "destroySessions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $minutes = 5)\n  {\n    $sessions = $this->findSessions($id_user, $minutes);    \n    \/\/$num = count($sessions);\n    foreach ( $sessions as $s ){\n      $this->db->delete($this->class_cfg['tables']['sessions'], [$this->class_cfg['arch']['sessions']['id'] => $s['id']]);\n    }    \n    return true;\n  }",
            "startLine": 97,
            "endLine": 105,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "minutes",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 5,
                    "default_name": ""
                }
            ]
        },
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\User $obj)\n  {\n    if ( \\is_object($obj) && method_exists($obj, 'getClassCfg') ){\n      $this->usrcls = $obj;\n      $this->class_cfg = $this->usrcls->getClassCfg();\n      if ( !$this->list_fields ){\n        $this->setDefaultListFields();\n      }\n      $this->db =& $this->usrcls->db;\n    }\n  }",
            "startLine": 112,
            "endLine": 122,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "obj",
                    "position": 0,
                    "type": "bbn\\User",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "A user's connection object (\\connection or subclass)"
                }
            ]
        },
        "isOnline": {
            "name": "isOnline",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $delay = 180)\n  {\n    $a =& $this->class_cfg['arch'];\n    $t =& $this->class_cfg['tables'];\n    if (\n      ($max = $this->db->selectOne($t['sessions'], 'MAX('.$a['sessions']['last_activity'].')', ['id_user' => $id_user]))\n      &&(strtotime($max) > (time() - $delay))\n    ) {\n      return true;\n    }\n    return false;\n  }",
            "startLine": 124,
            "endLine": 135,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "delay",
                    "position": 1,
                    "type": "int",
                    "required": false,
                    "has_default": true,
                    "default": 180,
                    "default_name": ""
                }
            ]
        },
        "groups": {
            "name": "groups",
            "summary": "Returns all the users' groups - with or without admin",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $a =& $this->class_cfg['arch'];\n    $t =& $this->class_cfg['tables'];\n    $id = $this->db->cfn($a['groups']['id'], $t['groups']);\n    $users_id = $this->db->cfn($a['users']['id'], $t['users'], 1);\n    $db =& $this->db;\n    $fields = \\array_map(function($g) use($db, $t){\n      return $db->cfn($g, $t['groups']);\n    }, \\array_values($a['groups']));\n    $fields['num'] = \"COUNT($users_id)\";\n    return $this->db->rselectAll([\n      'table' => $t['groups'],\n      'fields' => $fields,\n      'join' => [[\n        'table' => $t['users'],\n        'type' => 'left',\n        'on' => [\n          'conditions' => [[\n            'field' => $this->db->cfn($a['users']['id_group'], $t['users']),\n            'exp' => $id\n          ]]\n        ]\n      ]],\n      'group_by' => [$id]\n    ]);\n  }",
            "startLine": 142,
            "endLine": 168,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "textValueGroups": {
            "name": "textValueGroups",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->db->rselectAll(\n      $this->class_cfg['tables']['groups'], [\n        'value' => $this->class_cfg['arch']['groups']['id'],\n        'text' => $this->class_cfg['arch']['groups']['group'],\n      ]);\n  }",
            "startLine": 170,
            "endLine": 177,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "getEmail": {
            "name": "getEmail",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    if ( bbn\\Str::isUid($id) ){\n      $email = $this->db->selectOne($this->class_cfg['tables']['users'], $this->class_cfg['arch']['users']['email'], [$this->class_cfg['arch']['users']['id'] => $id]);\n      if ( $email && bbn\\Str::isEmail($email) ){\n        return $email;\n      }\n    }\n    return null;\n  }",
            "startLine": 179,
            "endLine": 188,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getList": {
            "name": "getList",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($group_id = NULL)\n  {\n    $db =& $this->db;\n    $arch =& $this->class_cfg['arch'];\n    $s =& $arch['sessions'];\n    $tables =& $this->class_cfg['tables'];\n\n    if ( !empty($arch['users']['username']) ){\n      $sort = $arch['users']['username'];\n    }\n    else if ( !empty($arch['users']['login']) ){\n      $sort = $arch['users']['login'];\n    }\n    else{\n      $sort = $arch['users']['email'];\n    }\n\n    $sql = \"SELECT \";\n    $done = [];\n    foreach ( $arch['users'] as $n => $f ){\n      if ( !\\in_array($f, $done) ){\n        $sql .= $db->cfn($f, $tables['users'], 1).', ';\n        array_push($done, $f);\n      }\n    }\n    $gr = !empty($group_id) && \\bbn\\Str::isUid($group_id) ?\n      \"AND \" . $db->cfn($arch['groups']['id'], $tables['groups'], 1) . \" = UNHEX('$group_id')\" : '';\n    $sql .= \"\n      MAX({$db->cfn($s['last_activity'], $tables['sessions'], 1)}) AS {$db->csn($s['last_activity'], 1)},\n      COUNT({$db->cfn($s['sess_id'], $tables['sessions'])}) AS {$db->csn($s['sess_id'], 1)}\n      FROM {$db->escape($tables['users'])}\n        JOIN {$db->tsn($tables['groups'], 1)}\n          ON {$db->cfn($arch['users']['id_group'], $tables['users'], 1)} = {$db->cfn($arch['groups']['id'], $tables['groups'], 1)}\n          $gr\n        LEFT JOIN {$db->tsn($tables['sessions'])}\n          ON {$db->cfn($s['id_user'], $tables['sessions'], 1)} = {$db->cfn($arch['users']['id'], $tables['users'], 1)}\n      WHERE {$db->cfn($arch['users']['active'], $tables['users'], 1)} = 1\n      GROUP BY {$db->cfn($arch['users']['id'], $tables['users'], 1)}\n      ORDER BY {$db->cfn($sort, $tables['users'], 1)}\";\n    return $db->getRows($sql);\n  }",
            "startLine": 191,
            "endLine": 231,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "group_id",
                    "position": 0,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "getUser": {
            "name": "getUser",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $u = $this->class_cfg['arch']['users'];\n    if ( bbn\\Str::isUid($id) ){\n      $where = [$u['id'] => $id];\n    }\n    else{\n      $where = [$u['login'] => $id];\n    }\n    if ( $user = $this->db->rselect(\n      $this->class_cfg['tables']['users'],\n      array_values($u),\n      $where)\n    ){\n      if ( $session = $this->db->rselect(\n        $this->class_cfg['tables']['sessions'],\n        array_values($this->class_cfg['arch']['sessions']),\n        [$this->class_cfg['arch']['sessions']['id_user'] => $user[$u['id']]],\n        [$this->class_cfg['arch']['sessions']['last_activity'] => 'DESC']\n      ) ){\n        $session['id_session'] = $session['id'];\n      }\n      else{\n        $session = array_fill_keys(\n          array_values($this->class_cfg['arch']['sessions']),\n          '');\n        $session['id_session'] = false;\n      }\n      return array_merge($session, $user);\n    }\n    return null;\n  }",
            "startLine": 233,
            "endLine": 264,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getGroup": {
            "name": "getGroup",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $g = $this->class_cfg['arch']['groups'];\n    if ( $group = $this->db->rselect($this->class_cfg['tables']['groups'], [], [\n      $g['id'] => $id\n    ]) ){\n      $group[$g['cfg']] = $group[$g['cfg']] ? json_decode($group[$g['cfg']], 1) : [];\n      return $group;\n    }\n    return null;\n  }",
            "startLine": 266,
            "endLine": 276,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getUsers": {
            "name": "getUsers",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($group_id = NULL)\n  {\n    return $this->db->getColArray(\"\n      SELECT \".$this->class_cfg['arch']['users']['id'].\"\n      FROM \".$this->class_cfg['tables']['users'].\"\n      WHERE {$this->db->escape($this->class_cfg['tables']['users'].'.'.$this->class_cfg['arch']['users']['active'])} = 1\n      AND \".$this->class_cfg['arch']['users']['id_group'].\" \".( $group_id ? \"= \".(int)$group_id : \"!= 1\" )\n    );\n  }",
            "startLine": 278,
            "endLine": 286,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "group_id",
                    "position": 0,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "fullList": {
            "name": "fullList",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $r = [];\n    $u = $this->class_cfg['arch']['users'];\n    foreach ( $this->db->rselectAll('bbn_users') as $a ){\n      $r[] = [\n        'value' => $a[$u['id']],\n        'text' => $this->getName($a, false),\n        'id_group' => $a[$u['id_group']],\n        'active' => $a[$u['active']] ? true : false\n      ];\n    }\n    return $r;\n  }",
            "startLine": 288,
            "endLine": 301,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "getUserId": {
            "name": "getUserId",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($login)\n  {\n    return $this->db->selectOne(\n      $this->class_cfg['tables']['users'], \n      $this->class_cfg['arch']['users']['id'],\n      [\n        $this->class_cfg['arch']['users']['login'] => $login\n      ]);\n  }",
            "startLine": 303,
            "endLine": 311,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "login",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getAdminGroup": {
            "name": "getAdminGroup",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!self::$admin_group) {\n      if ($res = $this->db->selectOne(\n        $this->class_cfg['tables']['groups'], \n        $this->class_cfg['arch']['groups']['id'],\n        [\n          $this->class_cfg['arch']['groups']['code'] => 'admin'\n        ]\n        )\n      ) {\n        self::setAdminGroup($res);\n      }\n    }\n    return self::$admin_group;\n  }",
            "startLine": 313,
            "endLine": 328,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getDevGroup": {
            "name": "getDevGroup",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!self::$dev_group) {\n      if ($res = $this->db->selectOne(\n        $this->class_cfg['tables']['groups'], \n        $this->class_cfg['arch']['groups']['id'],\n        [\n          $this->class_cfg['arch']['groups']['code'] => 'dev'\n        ]\n        )\n      ) {\n        self::setDevGroup($res);\n      }\n    }\n    return self::$dev_group;\n  }",
            "startLine": 330,
            "endLine": 345,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "getName": {
            "name": "getName",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($user, $full = true)\n  {\n      $user = $this->getUser($user);\n    }\n    if ( \\is_array($user) ){\n      $idx = 'email';\n      if ( !empty($this->class_cfg['arch']['users']['username']) ){\n        $idx = 'username';\n      }\n      else if ( !empty($this->class_cfg['arch']['users']['login']) ){\n        $idx = 'login';\n      }\n      return $user[$this->class_cfg['arch']['users'][$idx]];\n    }\n    return '';\n  }",
            "startLine": 347,
            "endLine": 362,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "user",
                    "position": 0,
                    "type": null,
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "full",
                    "position": 1,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "getGroupType": {
            "name": "getGroupType",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_group)\n  {\n    $g =& $this->class_cfg['arch']['groups'];\n    return $this->db->selectOne($this->class_cfg['tables']['groups'], $g['type'], [$g['id'] => $id_group]);\n  }",
            "startLine": 364,
            "endLine": 368,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_group",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "add": {
            "name": "add",
            "summary": "Creates a new user and returns its configuration (with the new ID)",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    $u =& $this->class_cfg['arch']['users'];\n    $fields = array_unique(array_values($u));\n    $cfg[$u['active']] = 1;\n    $cfg[$u['cfg']] = '{}';\n    foreach ( $cfg as $k => $v ){\n      if ( !\\in_array($k, $fields) ){\n        unset($cfg[$k]);\n      }\n    }\n    if ( isset($cfg['id']) ){\n      unset($cfg['id']);\n    }\n    if (!empty($cfg[$u['id_group']])) {\n      $group = $this->getGroupType($cfg[$u['id_group']]);\n      switch ($group) {\n        case 'real':\n          if (\n            bbn\\Str::isEmail($cfg[$u['email']]) &&\n                  $this->db->insert($this->class_cfg['tables']['users'], $cfg)\n          ){\n            $cfg[$u['id']] = $this->db->lastId();\n            \/\/ Envoi d'un lien\n            $this->makeHotlink($cfg[$this->class_cfg['arch']['users']['id']], 'creation');\n            return $cfg;\n          }\n          break;\n        case 'api':\n          $cfg[$u['email']] = null;\n          $cfg[$u['login']] = null;\n          if ($this->db->insert($this->class_cfg['tables']['users'], $cfg)) {\n            $cfg[$u['id']] = $this->db->lastId();\n            return $cfg;\n          }\n          break;\n      }\n    }\n\t\treturn null;\n  }",
            "startLine": 376,
            "endLine": 415,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "edit": {
            "name": "edit",
            "summary": "Creates a new user and returns its configuration (with the new ID)",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg, $id_user = NULL)\n  {\n\t  $u =& $this->class_cfg['arch']['users'];\n    $fields = array_unique(array_values($this->class_cfg['arch']['users']));\n    $cfg[$u['active']] = 1;\n    foreach ( $cfg as $k => $v ){\n      if ( !\\in_array($k, $fields) ){\n        unset($cfg[$k]);\n      }\n    }\n    if ( !$id_user && isset($cfg[$u['id']]) ){\n      $id_user = $cfg[$u['id']];\n    }\n    if ( $id_user && (\n            !isset($cfg[$this->class_cfg['arch']['users']['email']]) ||\n            bbn\\Str::isEmail($cfg[$this->class_cfg['arch']['users']['email']])\n          )\n    ){\n      if ( $this->db->update($this->class_cfg['tables']['users'], $cfg, [\n        $u['id'] => $id_user\n      ]) ){\n        $cfg['id'] = $id_user;\n        return $cfg;\n      }\n    }\n\t\treturn null;\n  }",
            "startLine": 423,
            "endLine": 449,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_user",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "copy": {
            "name": "copy",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($type, $id, array $data)\n  {\n    $pref = Preferences::getPreferences();\n    $cfg = $pref->getClassCfg();\n    switch ($type) {\n      case 'user':\n        if ($src = $this->getUser($id)) {\n          $data = X::mergeArrays($src, $data);\n          unset($data[$this->class_cfg['arch']['users']['id']]);\n          $col = $cfg['arch']['user_options']['id_user'];\n          $id_new = $this->add($data);\n        }\n        break;\n      case 'group':\n        if ($src = $this->getGroup($id)) {\n          $data = X::mergeArrays($src, $data);\n          unset($data[$this->class_cfg['arch']['groups']['id']]);\n          $col = $cfg['arch']['user_options']['id_group'];\n          $id_new = $this->groupInsert($data);\n        }\n        break;\n    }\n    if (!empty($id_new)) {\n      if ($options = $this->getOptions($type, $id)) {\n        $ids = [];\n        foreach ($options as $o) {\n          $old_id = $o['id'];\n          unset($o['id']);\n          $o[$col] = $id_new;\n          if ($this->db->insertIgnore($cfg['table'], $o)) {\n            $ids[$old_id] = $this->db->lastId();\n          }\n        }\n        $bids = [];\n        foreach ($ids as $oid => $nid) {\n          $bits = $this->db->rselectAll($cfg['tables']['user_options_bits'], [], [\n            $cfg['arch']['user_options_bits']['id_user_option'] => $oid,\n            $cfg['arch']['user_options_bits']['id_parent'] => null\n          ]);\n          foreach ($bits as $bit) {\n            $old_id = $bit[$cfg['arch']['user_options_bits']['id']];\n            unset($bit[$cfg['arch']['user_options_bits']['id']]);\n            $bit[$cfg['arch']['user_options_bits']['id_user_option']] = $nid;\n            $this->db->insert($cfg['tables']['user_options_bits'], $bit);\n            $bids[$old_id] = $this->db->lastId();\n          }\n        }\n        $remaining = -1;\n        $before = 0;\n        $done = [];\n        while ($remaining && ($before !== $remaining)) {\n          if ($remaining === -1) {\n            $before = 0;\n          }\n          else {\n            $before = $remaining;\n          }\n          $remaining = 0;\n          foreach ($ids as $oid => $nid) {\n            if (in_array($nid, $done)) {\n              continue;\n            }\n            $bits = $this->db->rselectAll($cfg['tables']['user_options_bits'], [], [\n              $cfg['arch']['user_options_bits']['id_user_option'] => $oid,\n              [$cfg['arch']['user_options_bits']['id_parent'], 'isnotnull']\n            ]);\n            if (!count($bits)) {\n              $done[] = $nid;\n              continue;\n            }\n            foreach ($bits as $bit) {\n              $old_id = $bit[$cfg['arch']['user_options_bits']['id']];\n              if (isset($bids[$old_id])) {\n                continue;\n              }\n              if (!isset($bids[$bit[$cfg['arch']['user_options_bits']['id_parent']]])) {\n                $remaining++;\n              }\n              else {\n                unset($bit[$cfg['arch']['user_options_bits']['id']]);\n                $bit[$cfg['arch']['user_options_bits']['id_user_option']] = $nid;\n                $bit[$cfg['arch']['user_options_bits']['id_parent']] = $bids[$bit[$cfg['arch']['user_options_bits']['id_parent']]];\n                $this->db->insert($cfg['tables']['user_options_bits'], $bit);\n                $bids[$old_id] = $this->db->lastId();\n              }\n            }\n          }\n        }\n      }\n      return $id_new;\n    }\n    return null;\n  }",
            "startLine": 451,
            "endLine": 543,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 3,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "type",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "data",
                    "position": 2,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "sendMail": {
            "name": "sendMail",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $subject, $text, array $attachments = [])\n  {\n    if ( ($usr = $this->getUser($id_user)) && $usr['email']){\n      if (!$this->getMailer()) {\n        return mail($usr['email'], $subject, $text);\n        \/\/throw new \\Exception(X::_(\"Impossible to make hotlinks without a proper mailer parameter\"));\n      }\n      return $this->mailer->send([\n        'to' => $usr['email'],\n        'subject' => $subject,\n        'text' => $text,\n        'attachments' => $attachments\n      ]);\n    }\n    return null;\n  }",
            "startLine": 546,
            "endLine": 561,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 3,
            "returns": [
                "int",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "subject",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "text",
                    "position": 2,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "attachments",
                    "position": 3,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "makeHotlink": {
            "name": "makeHotlink",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $message = 'hotlink', $exp = NULL)\n  {\n    if (!isset($this->messages[$message]) || empty($this->messages[$message]['link'])) {\n      switch ($message)\n      {\n        case 'hotlink':\n          if ($path = bbn\\Mvc::getPluginUrl('appui-usergroup')) {\n            $this->messages[$message]['link'] = BBN_URL.$path.'\/main\/profile';\n          }\n          break;\n        case 'creation':\n          if ($path = bbn\\Mvc::getPluginUrl('appui-core')) {\n            $this->messages[$message]['link'] = BBN_URL.$path.'\/login\/password\/%s';\n          }\n          break;\n        case 'password':\n          if ($path = bbn\\Mvc::getPluginUrl('appui-core')) {\n            $this->messages[$message]['link'] = BBN_URL.$path.'\/login\/password\/%s';\n          }\n          break;\n      }\n      if (empty($this->messages[$message]['link'])) {\n        die(\"Impossible to make hotlinks without a link configured\");\n      }\n    }\n\n    if ($usr = $this->getUser($id_user)) {\n      \/\/ Expiration date\n      if ( !\\is_int($exp) || ($exp < 1) ){\n        $exp = time() + $this->hotlink_length;\n      }\n      $hl =& $this->class_cfg['arch']['hotlinks'];\n      \/\/ Expire existing valid hotlinks\n      $this->db->update($this->class_cfg['tables']['hotlinks'], [\n        $hl['expire'] => date('Y-m-d H:i:s')\n      ],[\n        [$hl['id_user'], '=', $id_user],\n        [$hl['expire'], '>', Date('Y-m-d H:i:s')]\n      ]);\n      $magic = $this->usrcls->makeMagicString();\n      \/\/ Create hotlink\n      $this->db->insert($this->class_cfg['tables']['hotlinks'], [\n        $hl['magic'] => $magic['hash'],\n        $hl['id_user'] => $id_user,\n        $hl['expire'] => date('Y-m-d H:i:s', $exp)\n      ]);\n      $id_link = $this->db->lastId();\n      $link = \"?id=$id_link&key=\".$magic['key'];\n      $this->sendMail(\n        $id_user,\n        $this->messages[$message]['subject'],\n        sprintf($this->messages[$message]['text'], sprintf($this->messages[$message]['link'], $link))\n      );\n    }\n    else{\n      X::log(\"User $id_user not found\");\n      throw new \\Exception(X::_('User not found'));\n    }\n    return $this;\n  }",
            "startLine": 571,
            "endLine": 630,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 1,
            "returns": [
                "self"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "Type of the message"
                },
                {
                    "name": "message",
                    "position": 1,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "hotlink",
                    "default_name": "",
                    "description": "Timestamp of the expiration date"
                },
                {
                    "name": "exp",
                    "position": 2,
                    "type": null,
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "setUniqueGroup": {
            "name": "setUniqueGroup",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $id_group)\n  {\n    return (bool)$this->db->update($this->class_cfg['tables']['users'], [\n      $this->class_cfg['arch']['users']['id_group'] => $id_group\n    ], [\n      $this->class_cfg['arch']['users']['id'] => $id_user\n    ]);\n  }",
            "startLine": 639,
            "endLine": 646,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user User ID"
                },
                {
                    "name": "id_group",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "group Group ID"
                }
            ]
        },
        "userHasOption": {
            "name": "userHasOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $id_option, $with_group = true)\n  {\n    if ( $with_group && $user = $this->getUser($id_user) ){\n      $id_group = $user[$this->class_cfg['arch']['users']['id_group']];\n      if ( $this->groupHasOption($id_group, $id_option) ){\n        return true;\n      }\n    }\n    if ( $pref = Preferences::getPreferences() ){\n      if ( $cfg = $pref->getClassCfg() ){\n        return $this->db->count($cfg['table'], [\n          $cfg['arch']['user_options']['id_option'] => $id_option,\n          $cfg['arch']['user_options']['id_user'] => $id_user\n        ]) ? true : false;\n      }\n    }\n    return false;\n  }",
            "startLine": 648,
            "endLine": 665,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 3,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "with_group",
                    "position": 2,
                    "type": "bool",
                    "required": false,
                    "has_default": true,
                    "default": true,
                    "default_name": ""
                }
            ]
        },
        "groupHasOption": {
            "name": "groupHasOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_group, $id_option)\n  {\n    if (\n      ($pref = Preferences::getPreferences()) &&\n      ($cfg = $pref->getClassCfg())\n    ){\n      return $this->db->count($cfg['table'], [\n        $cfg['arch']['user_options']['id_option'] => $id_option,\n        $cfg['arch']['user_options']['id_group'] => $id_group\n      ]) ? true : false;\n    }\n    return false;\n  }",
            "startLine": 667,
            "endLine": 679,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_group",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "getOptions": {
            "name": "getOptions",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($type, $id)\n  {\n    if (\n      ($pref = Preferences::getPreferences()) &&\n      ($cfg = $pref->getClassCfg())\n    ){\n      if (stripos($type,  'group') === 0) {\n        return $this->db->rselectAll($cfg['table'], [], [\n          $cfg['arch']['user_options']['id_group'] => $id\n        ]);\n      }\n      elseif (stripos($type, 'user') === 0) {\n        return $this->db->rselectAll($cfg['table'], [], [\n          $cfg['arch']['user_options']['id_user'] => $id\n        ]);\n      }\n    }\n    return null;\n  }",
            "startLine": 681,
            "endLine": 699,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "type",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "userInsertOption": {
            "name": "userInsertOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $id_option)\n  {\n    if (\n      ($pref = Preferences::getPreferences()) &&\n      ($cfg = $pref->getClassCfg())\n    ){\n      return (bool)$this->db->insertIgnore($cfg['table'], [\n        $cfg['arch']['user_options']['id_option'] => $id_option,\n        $cfg['arch']['user_options']['id_user'] => $id_user\n      ]);\n    }\n    return false;\n  }",
            "startLine": 701,
            "endLine": 713,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "groupInsertOption": {
            "name": "groupInsertOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_group, $id_option)\n  {\n    if (\n      ($pref = Preferences::getPreferences()) &&\n      ($cfg = $pref->getClassCfg())\n    ){\n      return (bool)$this->db->insertIgnore($cfg['table'], [\n        $cfg['arch']['user_options']['id_option'] => $id_option,\n        $cfg['arch']['user_options']['id_group'] => $id_group\n      ]);\n    }\n    return false;\n  }",
            "startLine": 715,
            "endLine": 727,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_group",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "userDeleteOption": {
            "name": "userDeleteOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user, $id_option)\n  {\n    if (\n      ($pref = Preferences::getPreferences()) &&\n      ($cfg = $pref->getClassCfg())\n    ){\n      return (bool)$this->db->deleteIgnore($cfg['table'], [\n        $cfg['arch']['user_options']['id_option'] => $id_option,\n        $cfg['arch']['user_options']['id_user'] => $id_user\n      ]);\n    }\n    return false;\n  }",
            "startLine": 729,
            "endLine": 741,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "groupDeleteOption": {
            "name": "groupDeleteOption",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_group, $id_option)\n  {\n    if (\n      ($pref = Preferences::getPreferences()) &&\n      ($cfg = $pref->getClassCfg())\n    ){\n      return (bool)$this->db->deleteIgnore($cfg['table'], [\n        $cfg['arch']['user_options']['id_option'] => $id_option,\n        $cfg['arch']['user_options']['id_group'] => $id_group\n      ]);\n    }\n    return false;\n  }",
            "startLine": 743,
            "endLine": 755,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_group",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "id_option",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "groupNumUsers": {
            "name": "groupNumUsers",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_group)\n  {\n    $u =& $this->class_cfg['arch']['users'];\n    return $this->db->count($this->class_cfg['tables']['users'], [\n      $u['id_group'] => $id_group\n    ]);\n  }",
            "startLine": 757,
            "endLine": 763,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "int"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_group",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "groupInsert": {
            "name": "groupInsert",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $data)\n  {\n    $g = $this->class_cfg['arch']['groups'];\n    if ( isset($data[$g['group']]) ){\n      if (!empty($data[$g['cfg']]) && is_array($data[$g['cfg']])) {\n        $data[$g['cfg']] = json_encode($data[$g['cfg']]);\n      }\n      if ( $this->db->insert($this->class_cfg['tables']['groups'], [\n        $g['group'] => $data[$g['group']],\n        $g['cfg'] => !empty($g['cfg']) && !empty($data[$g['cfg']]) ? $data[$g['cfg']] : '{}'\n      ]) ){\n        return $this->db->lastId();\n      }\n    }\n    return null;\n  }",
            "startLine": 765,
            "endLine": 780,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "string",
                null
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "data",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "groupRename": {
            "name": "groupRename",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, $name)\n  {\n    $g = $this->class_cfg['arch']['groups'];\n    return (bool)$this->db->update($this->class_cfg['tables']['groups'], [\n      $g['group'] => $name\n    ], [\n      $g['id'] => $id\n    ]);\n  }",
            "startLine": 782,
            "endLine": 790,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "name",
                    "position": 1,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "groupSetCfg": {
            "name": "groupSetCfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id, array $cfg)\n  {\n    $g = $this->class_cfg['arch']['groups'];\n    return (bool)$this->db->update($this->class_cfg['tables']['groups'], [\n      $g['cfg'] => $cfg ?: '{}'\n    ], [\n      $g['id'] => $id\n    ]);\n  }",
            "startLine": 792,
            "endLine": 800,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "cfg",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "groupDelete": {
            "name": "groupDelete",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $g = $this->class_cfg['arch']['groups'];\n    if ( $this->groupNumUsers($id) ){\n      \/** @todo Error management *\/\n      throw new \\Exception(X::_(\"Impossible to delete this group as it has users\"));\n    }\n    return (bool)$this->db->delete($this->class_cfg['tables']['groups'], [\n      $g['id'] => $id\n    ]);\n  }",
            "startLine": 802,
            "endLine": 812,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "deactivate": {
            "name": "deactivate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user)\n  {\n    $update = [\n      $this->class_cfg['arch']['users']['active'] => 0,\n      $this->class_cfg['arch']['users']['email'] => null,\n    ];\n    if ( !empty($this->class_cfg['arch']['users']['login']) ){\n      $update[$this->class_cfg['arch']['users']['login']] = null;\n    }\n\n    if ($this->db->update($this->class_cfg['tables']['users'], $update, [\n      $this->class_cfg['arch']['users']['id'] => $id_user\n    ])) {\n      \/\/ Deleting existing sessions\n      $this->db->delete($this->class_cfg['tables']['sessions'], [$this->class_cfg['arch']['sessions']['id_user'] => $id_user]);\n      return true;\n    }\n    return false;\n  }",
            "startLine": 819,
            "endLine": 837,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user User ID"
                }
            ]
        },
        "reactivate": {
            "name": "reactivate",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\User\\Manager",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id_user)\n  {\n    return (bool)$this->db->update($this->class_cfg['tables']['users'], [\n      $this->class_cfg['arch']['users']['active'] => 1\n    ], [\n      $this->class_cfg['arch']['users']['id'] => $id_user\n    ]);\n  }",
            "startLine": 844,
            "endLine": 851,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id_user",
                    "position": 0,
                    "type": "string",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": "",
                    "description": "user User ID"
                }
            ]
        }
    },
    "properties": null,
    "staticProperties": {
        "admin_group": null,
        "dev_group": null
    },
    "constants": null,
    "numMethods": 39,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 2,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": null,
    "isSubclassOf": false,
    "defaultProperties": {
        "admin_group": null,
        "dev_group": null,
        "messages": {
            "creation": {
                "subject": "Account created",
                "link": "",
                "text": "\nA new user has been created for you.<br>\nPlease click the link below in order to activate your account:<br>\n%1$s"
            },
            "password": {
                "subject": "Password change",
                "link": "",
                "text": "\nYou can click the following link to change your password:<br>\n%1$s"
            },
            "hotlink": {
                "subject": "Hotlink",
                "link": "",
                "text": "\nYou can click the following link to access directly your account:<br>\n%1$s"
            }
        },
        "hotlink_length": 86400,
        "list_fields": null,
        "usrcls": null,
        "mailer": false,
        "db": null,
        "class_cfg": false
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\User",
    "shortName": "Manager",
    "summary": "A class for managing users"
}