{
    "doc": {
        "description": "",
        "tags": []
    },
    "name": "bbn\\db\\sync2",
    "namespace": true,
    "traits": [
        "bbn\\models\\tts\\singleton",
        "bbn\\models\\tts\\dbconfig",
        "bbn\\models\\tts\\optional"
    ],
    "interfaces": [],
    "fileName": "\/home\/thomas\/domains\/apstapp.thomas.lan\/_appui\/vendor\/bbn\/bbn\/src\/bbn\/db\/sync2.php",
    "startLine": 9,
    "endLine": 567,
    "contentConstructor": {
        "file": "bbn\\db\\sync2",
        "returns": null
    },
    "methods": {
        "__construct": {
            "name": "__construct",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, array $tables, array $sync_cfg = NULL, array $arch = [])\n  {\n    parent::__construct($db);\n    singleton::init($this);\n    $this->_init_class_cfg($arch);\n    $this->opt = bbn\\appui\\options::get_instance();\n    if ($this->opt) {\n      self::retriever_init($this);\n    }\n  }",
            "startLine": 96,
            "endLine": 105,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__construct",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\db",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function(bbn\\db $db)\n  {\n  }",
                "startLine": 27,
                "endLine": 29,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "db",
                        "position": 0,
                        "type": "bbn\\db",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "tables",
                    "position": 1,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "sync_cfg",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                },
                {
                    "name": "arch",
                    "position": 3,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                }
            ]
        },
        "init": {
            "name": "init",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, array $sync_cfg = [], array $tables = [], $sync_table = '')\n  {\n    if ($this->is_init) {\n      throw new \\Exception(\"Impossible to init twice the dbsync class\");\n    }\n    $this->current_connection = $db;\n\n\n    if (!empty($sync_table)) {\n      $this->sync_table = $sync_table;\n    }\n    if (!str::check_name($this->sync_table)) {\n      throw new \\Exception(_(\"Table name not allowed\"));\n    }\n    if (empty($sync_cfg)) {\n      $this->sync_connection = new db(self::$default_cfg);\n    }\n    elseif (isset($sync_cfg['connection'])) {\n      if (is_object($sync_cfg['connection']) && (is_a($sync_cfg['connection'], '\\\\bbn\\\\db')\n          || is_subclass_of($sync_cfg['connection'], '\\\\bbn\\\\db'))\n      ) {\n        $this->sync_connection = $sync_cfg['connection'];\n      }\n      else {\n        throw new \\Exception(_(\"Invalid connection given to the synchronization class\"));\n      }\n    }\n    elseif (isset($sync_cfg['engine'])) {\n      if (($sync_cfg['engine'] === 'sqlite')\n          || ($sync_cfg['engine'] !== $this->current_connection->get_engine())\n      ) {\n        $this->sync_connection = new db($sync_cfg);\n      }\n      elseif (isset($sync_cfg['db']) && !isset($sync_cfg['user'])) {\n        $this->sync_connection =& $this->current_connection;\n        $this->sync_table = $this->sync_connection->tfn($this->sync_table, $sync_cfg['db']);\n      }\n    }\n    elseif (isset($sync_cfg['db']) && !isset($sync_cfg['user'])) {\n      $this->sync_connection =& $this->current_connection;\n      $this->sync_table = $this->sync_connection->tfn($this->sync_table, $sync_cfg['db']);\n    }\n    $this->tables = $tables;\n    $this->is_init = true;\n    if (\\count($this->tables) === 0) {\n      $this->tables = $this->current_connection->get_tables();\n    }\n    if (\\is_array($this->tables)) {\n      foreach ($this->tables as $i => $t){\n        $this->tables[$i] = $this->current_connection->table_full_name($t);\n      }\n      $this->current_connection->set_trigger(\n        '\\\\bbn\\db\\\\sync::trigger',\n        ['delete', 'update', 'insert'],\n        ['before', 'after'],\n        $this->tables\n      );\n    }\n  }",
            "startLine": 114,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": [
                "void"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "sync_cfg",
                    "position": 1,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": "",
                    "description": "cfg"
                },
                {
                    "name": "tables",
                    "position": 2,
                    "type": "array",
                    "required": false,
                    "has_default": true,
                    "default": [],
                    "default_name": ""
                },
                {
                    "name": "sync_table",
                    "position": 3,
                    "type": "string",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": "",
                    "description": "table"
                }
            ]
        },
        "is_init": {
            "name": "is_init",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return $this->is_init;\n  }",
            "startLine": 174,
            "endLine": 177,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "create_table": {
            "name": "create_table",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (\\is_array($this->sync_connection)) {\n      $this->sync_connection = new bbn\\db($this->sync_connection);\n    }\n    if (class_exists('\\\\bbn\\\\appui\\\\history') && bbn\\appui\\history::$is_used) {\n      $this->has_history = 1;\n    }\n    \/** @todo Replace with DB functions *\/\n    if ($this->sync_connection->get_engine() === 'sqlite') {\n      $this->sync_connection->exec(\n        sprintf(\n          'CREATE TABLE \"%s\" (\n            \"id\" INTEGER PRIMARY KEY  NOT NULL ,\n            \"db\" TEXT NOT NULL ,\n            \"tab\" TEXT NOT NULL ,\n            \"chrono\" REAL NOT NULL,\n            \"action\" TEXT NOT NULL,\n            \"rows\" TEXT,\"vals\" TEXT,\n            \"state\" INTEGER NOT NULL DEFAULT (0)\n          );\n          CREATE INDEX \"db\" \"dbsync\" (\"db\");\n          CREATE INDEX \"tab\" \"dbsync\" (\"tab\");\n          CREATE INDEX \"chrono\" \"dbsync\" (\"chrono\");\n          CREATE INDEX \"action\" \"dbsync\" (\"action\");\n          CREATE INDEX \"state\" \"dbsync\" (\"state\");',\n          $this->table_sync\n        )\n      );\n    }\n    elseif ($this->sync_connection->get_engine() === 'mysql') {\n      $this->sync_connection->exec(\n        sprintf(\n          \"CREATE TABLE IF NOT EXISTS `%s` (\n            `id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n            `db` varchar(50) NOT NULL,\n            `tab` varchar(50) NOT NULL,\n            `chrono` decimal(14,4) unsigned NOT NULL,\n            `action` varchar(20) NOT NULL,\n            `rows` text,\n            `vals` longtext,\n            `state` int(10) NOT NULL DEFAULT '0'\n          ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n          ALTER TABLE `dbsync`\n            ADD PRIMARY KEY (`id`),\n            ADD KEY `db` (`db`),\n            ADD KEY `tab` (`tab`),\n            ADD KEY `chrono` (`chrono`),\n            ADD KEY `action` (`action`),\n            ADD KEY `state` (`state`);\",\n            $this->table_sync\n        )\n      );\n    }\n  }",
            "startLine": 179,
            "endLine": 233,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "check": {
            "name": "check",
            "summary": "Checks if the initialization has been all right - performs it only once.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    if (!isset($this->is_checked)) {\n      $this->is_checked = \\is_object($this->current_connection)\n        && \\is_object($this->sync_connection)\n        && $this->current_connection->check()\n        && $this->sync_connection->check();\n    }\n    return $this->is_checked;\n  }",
            "startLine": 240,
            "endLine": 249,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": {
                "name": "check",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 56,
                "endLine": 61,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "disable": {
            "name": "disable",
            "summary": "Disable the sync trigger.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $this->disabled = true;\n  }",
            "startLine": 256,
            "endLine": 259,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "void"
            ],
            "parent": false,
            "arguments": []
        },
        "enable": {
            "name": "enable",
            "summary": "Enable the sync trigger.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $this->disabled = false;\n  }",
            "startLine": 266,
            "endLine": 269,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "void"
            ],
            "parent": false,
            "arguments": []
        },
        "trigger": {
            "name": "trigger",
            "summary": "Writes new rows in the sync table after a writing operation has happened.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function(array $cfg)\n  {\n    \/** @todo I would like to understand... *\/\n    if (!isset($cfg['run'])) {\n      $cfg['run'] = 1;\n    }\n    if (!isset($cfg['trig'])) {\n      $cfg['run'] = 1;\n    }\n    if (!$this->disabled\n        && $this->check()\n        && (count($cfg['tables']) === 1)\n        && ($table = $this->current_connection->tfn(current($cfg['tables'])))\n        && \\in_array($table, $this->tables, true)\n    ) {\n      if ($cfg['moment'] === 'after') {\n        \/\/ Case where we actually delete or restore through the $hcol column\n        $values = [];\n        if (x::has_props($cfg, ['fields', 'values'], true)) {\n          foreach ($cfg['fields'] as $i => $f) {\n            $values[$f] = $cfg['values'][$i];\n          }\n        }\n        $this->sync_connection->insert(\n          $this->sync_table, [\n          'db' => $this->current_connection->get_current(),\n          'tab' => $this->current_connection->tsn($table),\n          'action' => $cfg['kind'],\n          'chrono' => microtime(true),\n          'rows' => empty($cfg['where']) ? '[]' : x::json_base64_encode($cfg['where']),\n          'vals' => empty($values) ? '[]' : x::json_base64_encode($values)\n          ]\n        );\n      }\n    }\n    return $cfg;\n  }",
            "startLine": 277,
            "endLine": 313,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "cfg",
                    "position": 0,
                    "type": "array",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "callback1": {
            "name": "callback1",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($f)\n  {\n    self::addMethod('cbf1', $f);\n  }",
            "startLine": 315,
            "endLine": 318,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "f",
                    "position": 0,
                    "type": "callable",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "callback2": {
            "name": "callback2",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($f)\n  {\n    self::addMethod('cbf2', $f);\n  }",
            "startLine": 320,
            "endLine": 323,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "f",
                    "position": 0,
                    "type": "callable",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "delete_completed": {
            "name": "delete_completed",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($start = NULL)\n  {\n    if (!self::is_init()) {\n      die(\"DB sync is not initiated\");\n    }\n    if (!$start\n        || !($start = $this->sync_connection->select_one(\n          $this->sync_table, 'MIN(chrono)', [\n          ['db', 'NOT LIKE', $this->current_connection->get_current()],\n          'state' => 0\n          ]\n        ))\n    ) {\n      $start = time();\n    }\n    \/\/ Deleting the entries prior to this sync we produced and have been seen by the twin process\n    return $this->sync_connection->delete(\n      $this->sync_table, [\n      'db' => $this->current_connection->get_current(),\n      'state'=> 1,\n      ['chrono', '<', $start]\n      ]\n    );\n  }",
            "startLine": 325,
            "endLine": 348,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "start",
                    "position": 0,
                    "type": "float",
                    "required": false,
                    "has_default": true,
                    "default": null,
                    "default_name": ""
                }
            ]
        },
        "current_row_cfg": {
            "name": "current_row_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($row)\n  {\n\n  }",
            "startLine": 350,
            "endLine": 353,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "row",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "dest_row_cfg": {
            "name": "dest_row_cfg",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function($row)\n  {\n\n  }",
            "startLine": 355,
            "endLine": 358,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "row",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "sync": {
            "name": "sync",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function(bbn\\db $db, $dbs = '', $sync_table = '', $num_try = 0)\n  {\n    if (!self::is_init()) {\n      die(\"DB sync is not initiated\");\n    }\n    self::disable();\n    $mode_db = $this->current_connection->get_error_mode();\n    $mode_dbs = $this->sync_connection->get_error_mode();\n    $this->current_connection->set_error_mode(\"continue\");\n    $this->sync_connection->set_error_mode(\"continue\");\n\n    $num_try++;\n\n    $to_log = [\n      'deleted_sync' => 0,\n      'deleted_real' => 0,\n      'updated_sync' => 0,\n      'updated_real' => 0,\n      'inserted_sync' => 0,\n      'inserted_real' => 0,\n      'num_problems' => 0,\n      'problems' => []\n    ];\n\n    $to_log['deleted_sync'] = self::delete_completed();\n\n    $retry = false;\n\n    \/\/ Selecting the entries inserted\n    $ds = $this->sync_connection->rselect_all(\n      $this->sync_table, ['id', 'tab', 'vals', 'chrono'], [\n      ['db', '!=', $this->current_connection->get_current()],\n      ['state', '=', 0],\n      ['action', 'LIKE', 'INSERT']\n      ], [\n      'chrono' => 'ASC',\n      'id' => 'ASC'\n      ]\n    );\n    \/\/ They just have to be inserted\n    foreach ($ds as $i => $d){\n      if (isset($this->methods['cbf1'])) {\n        self::cbf1($d);\n      }\n      $vals = x::json_base64_decode($d['vals']);\n      if (!\\is_array($vals)) {\n        $to_log['num_problems']++;\n        $to_log['problems'][] = \"Hey, look urgently at the row $d[id]!\";\n      }\n      elseif ($this->current_connection->insert($d['tab'], $vals)) {\n        if (isset($this->methods['cbf2'])) {\n          self::cbf2($d);\n        }\n        $to_log['inserted_sync']++;\n        $this->sync_connection->update($this->sync_table, [\"state\" => 1], [\"id\" => $d['id']]);\n      }\n      elseif ($this->current_connection->select($d['tab'], [], $vals)) {\n        $this->sync_connection->update($this->sync_table, [\"state\" => 1], [\"id\" => $d['id']]);\n      }\n      else{\n        if ($num_try > $this->max_retry) {\n          $to_log['num_problems']++;\n          $to_log['problems'][] = \"Problem while syncing (insert), check data with status 5 and ID \".$d['id'];\n          $this->sync_connection->update($this->sync_table, [\"state\" => 5], [\"id\" => $d['id']]);\n        }\n        $retry = 1;\n      }\n    }\n\n\n    \/\/ Selecting the entries modified and deleted in the twin DB,\n    \/\/ ordered by table and rows (so the same go together)\n    $ds = $this->sync_connection->rselect_all(\n      $this->sync_table, ['id', 'tab', 'action', 'rows', 'vals', 'chrono'], [\n      ['db', '!=', $this->current_connection->get_current()],\n      ['state', '=', 0],\n      ['rows', '!=', '[]'],\n      ['action', '!=', 'insert']\n      ], [\n      'tab' => 'ASC',\n      'rows' => 'ASC',\n      'chrono' => 'ASC',\n      'id' => 'ASC'\n      ]\n    );\n    foreach ($ds as $i => $d){\n      \/\/ Executing the first callback\n      $d['rows'] = x::json_base64_decode($d['rows']);\n      $d['vals'] = x::json_base64_decode($d['vals']);\n      if (isset($this->methods['cbf1'])) {\n        self::cbf1($d);\n      }\n      \/\/ Proceeding to the actions: delete is before\n      if (strtolower($d['action']) === 'delete') {\n        if ($this->current_connection->delete($d['tab'], $d['rows'])) {\n          $this->sync_connection->update($this->sync_table, [\"state\" => 1], [\"id\" => $d['id']]);\n          $to_log['deleted_real']++;\n        }\n        elseif (!$this->current_connection->select($d['tab'], [], $d['rows'])) {\n          $this->sync_connection->update($this->sync_table, [\"state\" => 1], [\"id\" => $d['id']]);\n        }\n        else{\n          if ($num_try > $this->max_retry) {\n            $this->sync_connection->update($this->sync_table, [\"state\" => 5], [\"id\" => $d['id']]);\n            $to_log['num_problems']++;\n            $to_log['problems'][] = \"Problem while syncing (delete), check data with status 5 and ID \".$d['id'];\n          }\n          $retry = 1;\n        }\n      }\n      \/\/ Checking if there is another change done to this record and when in the twin DB\n      $next_time = (\n              isset($ds[$i+1]) &&\n              ($ds[$i+1]['tab'] === $d['tab']) &&\n              ($ds[$i+1]['rows'] === $d['rows'])\n            ) ? $ds[$i+1]['chrono'] : microtime();\n      \/\/ Looking for the actions done on this specific record in our database\n      \/\/ between the twin change and the next (or now if there is no other change)\n      $each = $this->sync_connection->rselect_all(\n        $this->sync_table, ['id', 'chrono', 'action', 'vals'], [\n        ['db', '=', $this->current_connection->get_current()],\n        ['tab', '=', $d['tab']],\n        ['rows', '=', $d['rows']],\n        ['chrono', '>=', $d['chrono']],\n        ['chrono', '<', $next_time],\n        ]\n      );\n      if (\\count($each) > 0) {\n        $to_log['num_problems']++;\n        $to_log['problems'][] = \"Conflict!\";\n        $to_log['problems'][] = $d;\n        foreach ($each as $e){\n          $e['vals'] = x::json_base64_decode($e['vals']);\n          \/\/ If it's deleted locally and updated on the twin we restore\n          if (strtolower($e['action']) === 'delete') {\n            if (strtolower($d['action']) === 'update') {\n              if (!$this->current_connection->insert_update(\n                $d['tab'],\n                x::merge_arrays(\n                  $e['vals'],\n                  $d['vals']\n                )\n              )\n              ) {\n                $to_log['num_problems']++;\n                $to_log['problems'][] = \"insert_update number 1 had a problem\";\n              }\n            }\n          }\n          \/\/ If it's updated locally and deleted in the twin we restore\n          elseif (strtolower($e['action']) === 'update') {\n            if (strtolower($d['action']) === 'delete') {\n              if (!$this->current_connection->insert_update($d['tab'], x::merge_arrays($d['vals'], $e['vals']))) {\n                $to_log['num_problems']++;\n                $to_log['problems'][] = \"insert_update had a problem\";\n              }\n            }\n            \/\/ If it's updated locally and in the twin we merge the values for the update\n            elseif (strtolower($d['action']) === 'update') {\n              $d['vals'] = x::merge_arrays($d['vals'], $e['vals']);\n            }\n          }\n        }\n      }\n      \/\/ Proceeding to the actions update is after in case we needed to restore\n      if (strtolower($d['action']) === 'update') {\n        x::log(x::merge_arrays($d['rows'], $d['vals']), 'synct');\n        if ($this->current_connection->update($d['tab'], $d['vals'], $d['rows'])) {\n          $this->sync_connection->update($this->sync_table, [\"state\" => 1], [\"id\" => $d['id']]);\n          $to_log['updated_real']++;\n        }\n        elseif ($this->current_connection->count($d['tab'], x::merge_arrays($d['rows'], $d['vals']))) {\n          $this->sync_connection->update($this->sync_table, [\"state\" => 1], [\"id\" => $d['id']]);\n        }\n        else{\n          if ($num_try > $this->max_retry) {\n            $this->sync_connection->update($this->sync_table, [\"state\" => 5], [\"id\" => $d['id']]);\n            $to_log['num_problems']++;\n            $to_log['problems'][] = \"Problem while syncing (update), check data with status 5 and ID \".$d['id'];\n          }\n          $retry = 1;\n        }\n      }\n      \/\/ Callback number 2\n      if (isset($this->methods['cbf2'])) {\n        self::cbf2($d);\n      }\n    }\n\n\n    $res = [];\n    foreach ($to_log as $k => $v){\n      if (!empty($v)) {\n        $res[$k] = $v;\n      }\n    }\n    $this->current_connection->set_error_mode($mode_db);\n    $this->sync_connection->set_error_mode($mode_dbs);\n    self::enable();\n    if ($retry && ( $num_try <= $this->max_retry )) {\n      $res = x::merge_arrays($res, self::sync($db, $dbs, $sync_table, $num_try));\n    }\n    return $res;\n  }",
            "startLine": 363,
            "endLine": 566,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 4,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": false,
            "arguments": [
                {
                    "name": "db",
                    "position": 0,
                    "type": "bbn\\db",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "dbs",
                    "position": 1,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "sync_table",
                    "position": 2,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "num_try",
                    "position": 3,
                    "type": "",
                    "required": false,
                    "has_default": true,
                    "default": 0,
                    "default_name": ""
                }
            ]
        },
        "test": {
            "name": "test",
            "summary": "Checks whether the error property has been set (so an error happened).",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
            "startLine": 45,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "test",
                "summary": "Checks whether the error property has been set (so an error happened).",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n      return false;\n    }\n    return true;\n  }",
                "startLine": 45,
                "endLine": 50,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_error": {
            "name": "get_error",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 72,
            "endLine": 74,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_error",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 72,
                "endLine": 74,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "get_errors": {
            "name": "get_errors",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 76,
            "endLine": 78,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "get_errors",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 76,
                "endLine": 78,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "log": {
            "name": "log",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
            "startLine": 80,
            "endLine": 88,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "log",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n\t\t\t$ar = \\func_get_args();\n\t\t\t$cn = bbn\\str::encode_filename(str_replace('\\\\', '_', \\get_class($this)));\n\t\t\tforeach ( $ar as $a ){\n\t\t\t\tbbn\\x::log($a, $cn);\n\t\t\t}\n\t\t}\n  }",
                "startLine": 80,
                "endLine": 88,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "__call": {
            "name": "__call",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
            "startLine": 95,
            "endLine": 99,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 2,
            "numberOfRequiredParameters": 2,
            "returns": null,
            "parent": {
                "name": "__call",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($name, $arguments)\n  {\n    $this->log([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]);\n    die(var_dump([\"Wrong method used for the class $class: $name with the following arguments:\", $arguments]));\n  }",
                "startLine": 95,
                "endLine": 99,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 2,
                "numberOfRequiredParameters": 2,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "name",
                        "position": 0,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    },
                    {
                        "name": "arguments",
                        "position": 1,
                        "type": "",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "name",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                },
                {
                    "name": "arguments",
                    "position": 1,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "is_debug": {
            "name": "is_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 104,
            "endLine": 106,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": {
                "name": "is_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function()\n  {\n  }",
                "startLine": 104,
                "endLine": 106,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 0,
                "numberOfRequiredParameters": 0,
                "returns": null,
                "parent": false,
                "arguments": []
            },
            "arguments": []
        },
        "set_debug": {
            "name": "set_debug",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\models\\cls\\basic",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($debug)\n  {\n  }",
            "startLine": 112,
            "endLine": 114,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": null,
            "parent": {
                "name": "set_debug",
                "summary": "",
                "description": "",
                "description_parts": [],
                "file": "bbn\\models\\cls\\basic",
                "static": false,
                "visibility": "public",
                "final": false,
                "code": "function($debug)\n  {\n  }",
                "startLine": 112,
                "endLine": 114,
                "isDeprecated": false,
                "isGenerator": false,
                "isInternal": false,
                "isUserDefined": true,
                "isVariadic": false,
                "returnsReference": false,
                "numberOfParameters": 1,
                "numberOfRequiredParameters": 1,
                "returns": null,
                "parent": false,
                "arguments": [
                    {
                        "name": "debug",
                        "position": 0,
                        "type": "bool",
                        "required": true,
                        "has_default": false,
                        "default": "",
                        "default_name": ""
                    }
                ]
            },
            "arguments": [
                {
                    "name": "debug",
                    "position": 0,
                    "type": "bool",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_instance": {
            "name": "get_instance",
            "summary": "Returns the instance of the singleton or null.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::singleton_exists() ? self::$singleton_instance : null;\n  }",
            "startLine": 47,
            "endLine": 50,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "self",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "singleton_exists": {
            "name": "singleton_exists",
            "summary": "Returns true if the instance as been initiated.",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$singleton_exists ? true : false;\n  }",
            "startLine": 57,
            "endLine": 60,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": []
        },
        "exists": {
            "name": "exists",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function($id)\n  {\n    $res = $this->db->count($this->class_table, [\n      $this->class_cfg['arch'][$this->class_table_index]['id'] => $id\n    ]);\n    return (bool)$res;\n  }",
            "startLine": 61,
            "endLine": 67,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 1,
            "numberOfRequiredParameters": 1,
            "returns": [
                "bool"
            ],
            "parent": false,
            "arguments": [
                {
                    "name": "id",
                    "position": 0,
                    "type": "",
                    "required": true,
                    "has_default": false,
                    "default": "",
                    "default_name": ""
                }
            ]
        },
        "get_class_cfg": {
            "name": "get_class_cfg",
            "summary": "Return the",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 73,
            "endLine": 75,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_fields": {
            "name": "get_fields",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": false,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 77,
            "endLine": 79,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_option_root": {
            "name": "get_option_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$option_root_id;\n  }",
            "startLine": 128,
            "endLine": 131,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_root": {
            "name": "get_appui_root",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::$option_appui_id;\n  }",
            "startLine": 133,
            "endLine": 136,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_object": {
            "name": "get_options_object",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    $o = bbn\\appui\\options::get_instance();\n    if (!$o) {\n      throw new \\Exception(_(\"Impossible to get the options object from class\").' '.__CLASS__);\n    }\n    return $o;\n  }",
            "startLine": 138,
            "endLine": 145,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "bbn\\appui\\options"
            ],
            "parent": false,
            "arguments": []
        },
        "get_option_id": {
            "name": "get_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 153,
            "endLine": 155,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_ids": {
            "name": "get_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      return $a !== null;\n    }));\n  }",
            "startLine": 157,
            "endLine": 161,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_tree": {
            "name": "get_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args()))) ?\n      $tree['items'] : [];\n  }",
            "startLine": 163,
            "endLine": 167,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options": {
            "name": "get_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args()));\n  }",
            "startLine": 169,
            "endLine": 172,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_option": {
            "name": "get_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n  }",
            "startLine": 174,
            "endLine": 176,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_options_text_value": {
            "name": "get_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n      self::get_options_object()->text_value_options($id): [];\n  }",
            "startLine": 178,
            "endLine": 181,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        },
        "get_appui_option_id": {
            "name": "get_appui_option_id",
            "summary": "Returns The option's ID of a category, i.e. direct children of option's root",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->from_code(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 189,
            "endLine": 192,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "string"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_ids": {
            "name": "get_appui_options_ids",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return array_flip(\n      array_filter(\n        self::get_options_object()->get_codes(\n          ...self::_treat_args(func_get_args(), true)\n        ),\n        function($a){\n          return $a !== null;\n        }\n      )\n    );\n  }",
            "startLine": 194,
            "endLine": 206,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_tree": {
            "name": "get_appui_options_tree",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($tree = self::get_options_object()->full_tree(...self::_treat_args(func_get_args(), true)) ) ?\n      $tree['items'] : [];\n  }",
            "startLine": 208,
            "endLine": 212,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array"
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options": {
            "name": "get_appui_options",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->full_options(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 214,
            "endLine": 217,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_option": {
            "name": "get_appui_option",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return self::get_options_object()->option(...self::_treat_args(func_get_args(), true));\n  }",
            "startLine": 219,
            "endLine": 222,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": [
                "array",
                null
            ],
            "parent": false,
            "arguments": []
        },
        "get_appui_options_text_value": {
            "name": "get_appui_options_text_value",
            "summary": "",
            "description": "",
            "description_parts": [],
            "file": "bbn\\db\\sync2",
            "static": true,
            "visibility": "public",
            "final": false,
            "code": "function()\n  {\n    return ($id = self::get_appui_option_id(...func_get_args())) ?\n    self::get_options_object()->text_value_options($id) : [];\n  }",
            "startLine": 224,
            "endLine": 228,
            "isDeprecated": false,
            "isGenerator": false,
            "isInternal": false,
            "isUserDefined": true,
            "isVariadic": false,
            "returnsReference": false,
            "numberOfParameters": 0,
            "numberOfRequiredParameters": 0,
            "returns": null,
            "parent": false,
            "arguments": []
        }
    },
    "properties": null,
    "staticProperties": {
        "default_cfg": {
            "engine": "sqlite",
            "host": "localhost",
            "db": "dbsync"
        },
        "default_class_cfg": {
            "table": "dbsync",
            "tables": {
                "dbsync": "dbsync"
            },
            "arch": {
                "dbsync": {
                    "id": "id",
                    "tab": "tab",
                    "action": "action",
                    "rows": "rows",
                    "vals": "vals"
                }
            }
        },
        "all_disabled": false,
        "singleton_instance": null,
        "singleton_exists": false,
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null
    },
    "constants": null,
    "numMethods": 41,
    "numProperties": 0,
    "numConstants": 0,
    "numStaticProperties": 8,
    "interfaceNames": [],
    "isInterface": false,
    "traitNames": [
        "bbn\\models\\tts\\singleton",
        "bbn\\models\\tts\\dbconfig",
        "bbn\\models\\tts\\optional"
    ],
    "traitAliases": [],
    "isTrait": false,
    "isAbstract": false,
    "isFinal": false,
    "modifiers": 0,
    "parentClass": "bbn\\models\\cls\\db",
    "isSubclassOf": false,
    "defaultProperties": {
        "default_cfg": {
            "engine": "sqlite",
            "host": "localhost",
            "db": "dbsync"
        },
        "default_class_cfg": {
            "table": "dbsync",
            "tables": {
                "dbsync": "dbsync"
            },
            "arch": {
                "dbsync": {
                    "id": "id",
                    "tab": "tab",
                    "action": "action",
                    "rows": "rows",
                    "vals": "vals"
                }
            }
        },
        "all_disabled": false,
        "singleton_instance": null,
        "singleton_exists": false,
        "optional_is_init": false,
        "option_root_id": null,
        "option_appui_id": null,
        "current_connection": null,
        "sync_connection": null,
        "has_history": false,
        "tables": [],
        "sync_table": "dbsync",
        "methods": [],
        "is_init": false,
        "is_checked": null,
        "disabled": false,
        "max_retry": 5,
        "db": null,
        "errors": [],
        "error": false,
        "debug": false,
        "log": [],
        "class_cfg": null,
        "fields": null,
        "class_table": null,
        "class_table_index": null,
        "options": null
    },
    "isIterable": false,
    "extensionName": false,
    "namespaceName": "bbn\\db",
    "shortName": "sync2",
    "summary": ""
}